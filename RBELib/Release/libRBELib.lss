In archive libRBELib.a:

SetServo.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initAltCom 00000038  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setCharDebug 0000000e  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.coPrintf 00000018  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .rodata.str1.1 00000014  00000000  00000000  00000092  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .text.setServo 0000005c  00000000  00000000  000000a6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .comment      00000012  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initAltCom:

00000000 <initAltCom>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <initAltCom+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <initAltCom>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	31 09       	sbc	r19, r1
  22:	30 93 c5 00 	sts	0x00C5, r19
  26:	20 93 c4 00 	sts	0x00C4, r18
  2a:	88 e1       	ldi	r24, 0x18	; 24
  2c:	80 93 c1 00 	sts	0x00C1, r24
  30:	86 e0       	ldi	r24, 0x06	; 6
  32:	80 93 c2 00 	sts	0x00C2, r24
  36:	08 95       	ret

Disassembly of section .text.setCharDebug:

00000000 <setCharDebug>:
   0:	90 91 c0 00 	lds	r25, 0x00C0
   4:	95 ff       	sbrs	r25, 5
   6:	00 c0       	rjmp	.+0      	; 0x8 <setCharDebug+0x8>
   8:	80 93 c6 00 	sts	0x00C6, r24
   c:	08 95       	ret

Disassembly of section .text.coPrintf:

00000000 <coPrintf>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	89 91       	ld	r24, Y+
   8:	88 23       	and	r24, r24
   a:	01 f0       	breq	.+0      	; 0xc <coPrintf+0xc>
   c:	0e 94 00 00 	call	0	; 0x0 <coPrintf>
  10:	00 c0       	rjmp	.+0      	; 0x12 <coPrintf+0x12>
  12:	df 91       	pop	r29
  14:	cf 91       	pop	r28
  16:	08 95       	ret

Disassembly of section .text.setServo:

00000000 <setServo>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	64 97       	sbiw	r28, 0x14	; 20
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	7f 93       	push	r23
  1a:	6f 93       	push	r22
  1c:	9f 93       	push	r25
  1e:	8f 93       	push	r24
  20:	80 e0       	ldi	r24, 0x00	; 0
  22:	90 e0       	ldi	r25, 0x00	; 0
  24:	9f 93       	push	r25
  26:	8f 93       	push	r24
  28:	8e 01       	movw	r16, r28
  2a:	0f 5f       	subi	r16, 0xFF	; 255
  2c:	1f 4f       	sbci	r17, 0xFF	; 255
  2e:	1f 93       	push	r17
  30:	0f 93       	push	r16
  32:	0e 94 00 00 	call	0	; 0x0 <setServo>
  36:	c8 01       	movw	r24, r16
  38:	0e 94 00 00 	call	0	; 0x0 <setServo>
  3c:	0f b6       	in	r0, 0x3f	; 63
  3e:	f8 94       	cli
  40:	de bf       	out	0x3e, r29	; 62
  42:	0f be       	out	0x3f, r0	; 63
  44:	cd bf       	out	0x3d, r28	; 61
  46:	64 96       	adiw	r28, 0x14	; 20
  48:	0f b6       	in	r0, 0x3f	; 63
  4a:	f8 94       	cli
  4c:	de bf       	out	0x3e, r29	; 62
  4e:	0f be       	out	0x3f, r0	; 63
  50:	cd bf       	out	0x3d, r28	; 61
  52:	df 91       	pop	r29
  54:	cf 91       	pop	r28
  56:	1f 91       	pop	r17
  58:	0f 91       	pop	r16
  5a:	08 95       	ret

ADC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initADC 00000034  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.clearADC 00000014  00000000  00000000  00000068  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.getADC  0000003a  00000000  00000000  0000007c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.changeADC 00000012  00000000  00000000  000000b6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .comment      00000012  00000000  00000000  000000c8  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initADC:

00000000 <initADC>:
   0:	f8 94       	cli
   2:	91 b1       	in	r25, 0x01	; 1
   4:	21 e0       	ldi	r18, 0x01	; 1
   6:	30 e0       	ldi	r19, 0x00	; 0
   8:	08 2e       	mov	r0, r24
   a:	00 c0       	rjmp	.+0      	; 0xc <initADC+0xc>
   c:	22 0f       	add	r18, r18
   e:	0a 94       	dec	r0
  10:	02 f4       	brpl	.+0      	; 0x12 <initADC+0x12>
  12:	20 95       	com	r18
  14:	29 23       	and	r18, r25
  16:	21 b9       	out	0x01, r18	; 1
  18:	ea e7       	ldi	r30, 0x7A	; 122
  1a:	f0 e0       	ldi	r31, 0x00	; 0
  1c:	90 81       	ld	r25, Z
  1e:	97 68       	ori	r25, 0x87	; 135
  20:	90 83       	st	Z, r25
  22:	80 64       	ori	r24, 0x40	; 64
  24:	80 93 7c 00 	sts	0x007C, r24
  28:	ee e7       	ldi	r30, 0x7E	; 126
  2a:	f0 e0       	ldi	r31, 0x00	; 0
  2c:	80 81       	ld	r24, Z
  2e:	80 83       	st	Z, r24
  30:	78 94       	sei
  32:	08 95       	ret

Disassembly of section .text.clearADC:

00000000 <clearADC>:
   0:	ea e7       	ldi	r30, 0x7A	; 122
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	80 81       	ld	r24, Z
   6:	8f 77       	andi	r24, 0x7F	; 127
   8:	80 83       	st	Z, r24
   a:	10 92 79 00 	sts	0x0079, r1
   e:	10 92 78 00 	sts	0x0078, r1
  12:	08 95       	ret

Disassembly of section .text.getADC:

00000000 <getADC>:
   0:	90 91 7a 00 	lds	r25, 0x007A
   4:	9f 7d       	andi	r25, 0xDF	; 223
   6:	90 93 7a 00 	sts	0x007A, r25
   a:	90 91 7c 00 	lds	r25, 0x007C
   e:	90 7e       	andi	r25, 0xE0	; 224
  10:	90 93 7c 00 	sts	0x007C, r25
  14:	90 91 7c 00 	lds	r25, 0x007C
  18:	89 2b       	or	r24, r25
  1a:	80 93 7c 00 	sts	0x007C, r24
  1e:	80 91 7a 00 	lds	r24, 0x007A
  22:	80 64       	ori	r24, 0x40	; 64
  24:	80 93 7a 00 	sts	0x007A, r24
  28:	80 91 7a 00 	lds	r24, 0x007A
  2c:	86 fd       	sbrc	r24, 6
  2e:	00 c0       	rjmp	.+0      	; 0x30 <getADC+0x30>
  30:	80 91 78 00 	lds	r24, 0x0078
  34:	90 91 79 00 	lds	r25, 0x0079
  38:	08 95       	ret

Disassembly of section .text.changeADC:

00000000 <changeADC>:
   0:	ec e7       	ldi	r30, 0x7C	; 124
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	90 81       	ld	r25, Z
   6:	90 7e       	andi	r25, 0xE0	; 224
   8:	90 83       	st	Z, r25
   a:	90 81       	ld	r25, Z
   c:	89 2b       	or	r24, r25
   e:	80 83       	st	Z, r24
  10:	08 95       	ret

DAC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setDAC  000000aa  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .comment      00000012  00000000  00000000  000000de  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setDAC:

00000000 <setDAC>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	90 91 2a 00 	lds	r25, 0x002A
  14:	90 61       	ori	r25, 0x10	; 16
  16:	90 93 2a 00 	sts	0x002A, r25
  1a:	90 91 2b 00 	lds	r25, 0x002B
  1e:	90 61       	ori	r25, 0x10	; 16
  20:	90 93 2b 00 	sts	0x002B, r25
  24:	9b 01       	movw	r18, r22
  26:	61 15       	cp	r22, r1
  28:	70 41       	sbci	r23, 0x10	; 16
  2a:	04 f0       	brlt	.+0      	; 0x2c <setDAC+0x2c>
  2c:	2f ef       	ldi	r18, 0xFF	; 255
  2e:	3f e0       	ldi	r19, 0x0F	; 15
  30:	49 01       	movw	r8, r18
  32:	03 2e       	mov	r0, r19
  34:	00 0c       	add	r0, r0
  36:	aa 08       	sbc	r10, r10
  38:	bb 08       	sbc	r11, r11
  3a:	69 01       	movw	r12, r18
  3c:	9f e0       	ldi	r25, 0x0F	; 15
  3e:	c9 22       	and	r12, r25
  40:	dd 24       	eor	r13, r13
  42:	0d 2c       	mov	r0, r13
  44:	00 0c       	add	r0, r0
  46:	ee 08       	sbc	r14, r14
  48:	ff 08       	sbc	r15, r15
  4a:	90 91 2b 00 	lds	r25, 0x002B
  4e:	9f 7e       	andi	r25, 0xEF	; 239
  50:	90 93 2b 00 	sts	0x002B, r25
  54:	80 63       	ori	r24, 0x30	; 48
  56:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  5a:	d5 01       	movw	r26, r10
  5c:	c4 01       	movw	r24, r8
  5e:	24 e0       	ldi	r18, 0x04	; 4
  60:	b6 95       	lsr	r27
  62:	a7 95       	ror	r26
  64:	97 95       	ror	r25
  66:	87 95       	ror	r24
  68:	2a 95       	dec	r18
  6a:	01 f4       	brne	.+0      	; 0x6c <setDAC+0x6c>
  6c:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  70:	8c 2d       	mov	r24, r12
  72:	82 95       	swap	r24
  74:	80 7f       	andi	r24, 0xF0	; 240
  76:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  7a:	80 91 2b 00 	lds	r24, 0x002B
  7e:	80 61       	ori	r24, 0x10	; 16
  80:	80 93 2b 00 	sts	0x002B, r24
  84:	80 91 2b 00 	lds	r24, 0x002B
  88:	8f 7e       	andi	r24, 0xEF	; 239
  8a:	80 93 2b 00 	sts	0x002B, r24
  8e:	80 91 2b 00 	lds	r24, 0x002B
  92:	80 61       	ori	r24, 0x10	; 16
  94:	80 93 2b 00 	sts	0x002B, r24
  98:	ff 90       	pop	r15
  9a:	ef 90       	pop	r14
  9c:	df 90       	pop	r13
  9e:	cf 90       	pop	r12
  a0:	bf 90       	pop	r11
  a2:	af 90       	pop	r10
  a4:	9f 90       	pop	r9
  a6:	8f 90       	pop	r8
  a8:	08 95       	ret

Debug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.printfRBE 0000000a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.initRBELib 00000018  00000000  00000000  0000003e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .data.RBEOut  0000000e  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  6 .comment      00000012  00000000  00000000  00000064  2**0
                  CONTENTS, READONLY

Disassembly of section .text.printfRBE:

00000000 <printfRBE>:
   0:	0e 94 00 00 	call	0	; 0x0 <printfRBE>
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text.initRBELib:

00000000 <initRBELib>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	90 93 00 00 	sts	0x0000, r25
   8:	80 93 00 00 	sts	0x0000, r24
   c:	60 e0       	ldi	r22, 0x00	; 0
   e:	72 ec       	ldi	r23, 0xC2	; 194
  10:	81 e0       	ldi	r24, 0x01	; 1
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	0c 94 00 00 	jmp	0	; 0x0 <initRBELib>

PID.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setConst 00000084  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.calcPID 00000276  00000000  00000000  000000b8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  0000032e  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setConst:

00000000 <setConst>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	88 34       	cpi	r24, 0x48	; 72
   e:	01 f4       	brne	.+0      	; 0x10 <setConst+0x10>
  10:	40 93 00 00 	sts	0x0000, r20
  14:	50 93 00 00 	sts	0x0000, r21
  18:	60 93 00 00 	sts	0x0000, r22
  1c:	70 93 00 00 	sts	0x0000, r23
  20:	00 93 00 00 	sts	0x0000, r16
  24:	10 93 00 00 	sts	0x0000, r17
  28:	20 93 00 00 	sts	0x0000, r18
  2c:	30 93 00 00 	sts	0x0000, r19
  30:	c0 92 00 00 	sts	0x0000, r12
  34:	d0 92 00 00 	sts	0x0000, r13
  38:	e0 92 00 00 	sts	0x0000, r14
  3c:	f0 92 00 00 	sts	0x0000, r15
  40:	00 c0       	rjmp	.+0      	; 0x42 <setConst+0x42>
  42:	8c 34       	cpi	r24, 0x4C	; 76
  44:	01 f4       	brne	.+0      	; 0x46 <setConst+0x46>
  46:	40 93 00 00 	sts	0x0000, r20
  4a:	50 93 00 00 	sts	0x0000, r21
  4e:	60 93 00 00 	sts	0x0000, r22
  52:	70 93 00 00 	sts	0x0000, r23
  56:	00 93 00 00 	sts	0x0000, r16
  5a:	10 93 00 00 	sts	0x0000, r17
  5e:	20 93 00 00 	sts	0x0000, r18
  62:	30 93 00 00 	sts	0x0000, r19
  66:	c0 92 00 00 	sts	0x0000, r12
  6a:	d0 92 00 00 	sts	0x0000, r13
  6e:	e0 92 00 00 	sts	0x0000, r14
  72:	f0 92 00 00 	sts	0x0000, r15
  76:	1f 91       	pop	r17
  78:	0f 91       	pop	r16
  7a:	ff 90       	pop	r15
  7c:	ef 90       	pop	r14
  7e:	df 90       	pop	r13
  80:	cf 90       	pop	r12
  82:	08 95       	ret

Disassembly of section .text.calcPID:

00000000 <calcPID>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	eb 01       	movw	r28, r22
  1a:	c4 1b       	sub	r28, r20
  1c:	d5 0b       	sbc	r29, r21
  1e:	88 34       	cpi	r24, 0x48	; 72
  20:	01 f0       	breq	.+0      	; 0x22 <calcPID+0x22>
  22:	00 c0       	rjmp	.+0      	; 0x24 <calcPID+0x24>
  24:	e0 e0       	ldi	r30, 0x00	; 0
  26:	f0 e0       	ldi	r31, 0x00	; 0
  28:	00 e0       	ldi	r16, 0x00	; 0
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	80 81       	ld	r24, Z
  2e:	91 81       	ldd	r25, Z+1	; 0x01
  30:	08 0f       	add	r16, r24
  32:	19 1f       	adc	r17, r25
  34:	92 93       	st	-Z, r25
  36:	82 93       	st	-Z, r24
  38:	20 e0       	ldi	r18, 0x00	; 0
  3a:	e0 30       	cpi	r30, 0x00	; 0
  3c:	f2 07       	cpc	r31, r18
  3e:	01 f4       	brne	.+0      	; 0x40 <calcPID+0x40>
  40:	d0 93 00 00 	sts	0x0000, r29
  44:	c0 93 00 00 	sts	0x0000, r28
  48:	be 01       	movw	r22, r28
  4a:	0d 2e       	mov	r0, r29
  4c:	00 0c       	add	r0, r0
  4e:	88 0b       	sbc	r24, r24
  50:	99 0b       	sbc	r25, r25
  52:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  56:	20 91 00 00 	lds	r18, 0x0000
  5a:	30 91 00 00 	lds	r19, 0x0000
  5e:	40 91 00 00 	lds	r20, 0x0000
  62:	50 91 00 00 	lds	r21, 0x0000
  66:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  6a:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  6e:	6b 01       	movw	r12, r22
  70:	7c 01       	movw	r14, r24
  72:	b8 01       	movw	r22, r16
  74:	6c 0f       	add	r22, r28
  76:	7d 1f       	adc	r23, r29
  78:	07 2e       	mov	r0, r23
  7a:	00 0c       	add	r0, r0
  7c:	88 0b       	sbc	r24, r24
  7e:	99 0b       	sbc	r25, r25
  80:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  84:	20 91 00 00 	lds	r18, 0x0000
  88:	30 91 00 00 	lds	r19, 0x0000
  8c:	40 91 00 00 	lds	r20, 0x0000
  90:	50 91 00 00 	lds	r21, 0x0000
  94:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  98:	20 e0       	ldi	r18, 0x00	; 0
  9a:	30 e0       	ldi	r19, 0x00	; 0
  9c:	48 ec       	ldi	r20, 0xC8	; 200
  9e:	52 e4       	ldi	r21, 0x42	; 66
  a0:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  a4:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  a8:	4b 01       	movw	r8, r22
  aa:	5c 01       	movw	r10, r24
  ac:	80 91 00 00 	lds	r24, 0x0000
  b0:	90 91 00 00 	lds	r25, 0x0000
  b4:	c8 1b       	sub	r28, r24
  b6:	d9 0b       	sbc	r29, r25
  b8:	be 01       	movw	r22, r28
  ba:	dd 0f       	add	r29, r29
  bc:	88 0b       	sbc	r24, r24
  be:	99 0b       	sbc	r25, r25
  c0:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  c4:	20 91 00 00 	lds	r18, 0x0000
  c8:	30 91 00 00 	lds	r19, 0x0000
  cc:	40 91 00 00 	lds	r20, 0x0000
  d0:	50 91 00 00 	lds	r21, 0x0000
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <calcPID+0xd6>
  d6:	e0 e0       	ldi	r30, 0x00	; 0
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	00 e0       	ldi	r16, 0x00	; 0
  dc:	10 e0       	ldi	r17, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	91 81       	ldd	r25, Z+1	; 0x01
  e2:	08 0f       	add	r16, r24
  e4:	19 1f       	adc	r17, r25
  e6:	92 93       	st	-Z, r25
  e8:	82 93       	st	-Z, r24
  ea:	40 e0       	ldi	r20, 0x00	; 0
  ec:	e0 30       	cpi	r30, 0x00	; 0
  ee:	f4 07       	cpc	r31, r20
  f0:	01 f4       	brne	.+0      	; 0xf2 <calcPID+0xf2>
  f2:	d0 93 00 00 	sts	0x0000, r29
  f6:	c0 93 00 00 	sts	0x0000, r28
  fa:	be 01       	movw	r22, r28
  fc:	0d 2e       	mov	r0, r29
  fe:	00 0c       	add	r0, r0
 100:	88 0b       	sbc	r24, r24
 102:	99 0b       	sbc	r25, r25
 104:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 108:	20 91 00 00 	lds	r18, 0x0000
 10c:	30 91 00 00 	lds	r19, 0x0000
 110:	40 91 00 00 	lds	r20, 0x0000
 114:	50 91 00 00 	lds	r21, 0x0000
 118:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 11c:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 120:	6b 01       	movw	r12, r22
 122:	7c 01       	movw	r14, r24
 124:	b8 01       	movw	r22, r16
 126:	6c 0f       	add	r22, r28
 128:	7d 1f       	adc	r23, r29
 12a:	07 2e       	mov	r0, r23
 12c:	00 0c       	add	r0, r0
 12e:	88 0b       	sbc	r24, r24
 130:	99 0b       	sbc	r25, r25
 132:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 136:	20 91 00 00 	lds	r18, 0x0000
 13a:	30 91 00 00 	lds	r19, 0x0000
 13e:	40 91 00 00 	lds	r20, 0x0000
 142:	50 91 00 00 	lds	r21, 0x0000
 146:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	48 ec       	ldi	r20, 0xC8	; 200
 150:	52 e4       	ldi	r21, 0x42	; 66
 152:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 156:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 15a:	4b 01       	movw	r8, r22
 15c:	5c 01       	movw	r10, r24
 15e:	80 91 00 00 	lds	r24, 0x0000
 162:	90 91 00 00 	lds	r25, 0x0000
 166:	c8 1b       	sub	r28, r24
 168:	d9 0b       	sbc	r29, r25
 16a:	be 01       	movw	r22, r28
 16c:	dd 0f       	add	r29, r29
 16e:	88 0b       	sbc	r24, r24
 170:	99 0b       	sbc	r25, r25
 172:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 176:	20 91 00 00 	lds	r18, 0x0000
 17a:	30 91 00 00 	lds	r19, 0x0000
 17e:	40 91 00 00 	lds	r20, 0x0000
 182:	50 91 00 00 	lds	r21, 0x0000
 186:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 18a:	20 e0       	ldi	r18, 0x00	; 0
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	48 ec       	ldi	r20, 0xC8	; 200
 190:	52 e4       	ldi	r21, 0x42	; 66
 192:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 196:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 19a:	f6 2f       	mov	r31, r22
 19c:	e7 2f       	mov	r30, r23
 19e:	c1 14       	cp	r12, r1
 1a0:	20 e1       	ldi	r18, 0x10	; 16
 1a2:	d2 06       	cpc	r13, r18
 1a4:	e1 04       	cpc	r14, r1
 1a6:	f1 04       	cpc	r15, r1
 1a8:	04 f4       	brge	.+0      	; 0x1aa <calcPID+0x1aa>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <calcPID+0x1ac>
 1ac:	8c 34       	cpi	r24, 0x4C	; 76
 1ae:	01 f4       	brne	.+0      	; 0x1b0 <calcPID+0x1b0>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <calcPID+0x1b2>
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	e0 e0       	ldi	r30, 0x00	; 0
 1b6:	80 e0       	ldi	r24, 0x00	; 0
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	81 2c       	mov	r8, r1
 1bc:	91 2c       	mov	r9, r1
 1be:	a1 2c       	mov	r10, r1
 1c0:	b1 2c       	mov	r11, r1
 1c2:	c1 2c       	mov	r12, r1
 1c4:	d1 2c       	mov	r13, r1
 1c6:	76 01       	movw	r14, r12
 1c8:	41 e0       	ldi	r20, 0x01	; 1
 1ca:	c4 16       	cp	r12, r20
 1cc:	40 ef       	ldi	r20, 0xF0	; 240
 1ce:	d4 06       	cpc	r13, r20
 1d0:	4f ef       	ldi	r20, 0xFF	; 255
 1d2:	e4 06       	cpc	r14, r20
 1d4:	f4 06       	cpc	r15, r20
 1d6:	04 f4       	brge	.+0      	; 0x1d8 <calcPID+0x1d8>
 1d8:	cc 24       	eor	r12, r12
 1da:	c3 94       	inc	r12
 1dc:	30 ef       	ldi	r19, 0xF0	; 240
 1de:	d3 2e       	mov	r13, r19
 1e0:	ee 24       	eor	r14, r14
 1e2:	ea 94       	dec	r14
 1e4:	fe 2c       	mov	r15, r14
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <calcPID+0x1e8>
 1e8:	cc 24       	eor	r12, r12
 1ea:	ca 94       	dec	r12
 1ec:	2f e0       	ldi	r18, 0x0F	; 15
 1ee:	d2 2e       	mov	r13, r18
 1f0:	e1 2c       	mov	r14, r1
 1f2:	f1 2c       	mov	r15, r1
 1f4:	84 01       	movw	r16, r8
 1f6:	95 01       	movw	r18, r10
 1f8:	01 30       	cpi	r16, 0x01	; 1
 1fa:	40 ef       	ldi	r20, 0xF0	; 240
 1fc:	14 07       	cpc	r17, r20
 1fe:	4f ef       	ldi	r20, 0xFF	; 255
 200:	24 07       	cpc	r18, r20
 202:	34 07       	cpc	r19, r20
 204:	04 f4       	brge	.+0      	; 0x206 <calcPID+0x206>
 206:	01 e0       	ldi	r16, 0x01	; 1
 208:	10 ef       	ldi	r17, 0xF0	; 240
 20a:	2f ef       	ldi	r18, 0xFF	; 255
 20c:	3f ef       	ldi	r19, 0xFF	; 255
 20e:	4f 2f       	mov	r20, r31
 210:	5e 2f       	mov	r21, r30
 212:	bc 01       	movw	r22, r24
 214:	41 30       	cpi	r20, 0x01	; 1
 216:	80 ef       	ldi	r24, 0xF0	; 240
 218:	58 07       	cpc	r21, r24
 21a:	8f ef       	ldi	r24, 0xFF	; 255
 21c:	68 07       	cpc	r22, r24
 21e:	78 07       	cpc	r23, r24
 220:	04 f4       	brge	.+0      	; 0x222 <calcPID+0x222>
 222:	41 e0       	ldi	r20, 0x01	; 1
 224:	50 ef       	ldi	r21, 0xF0	; 240
 226:	6f ef       	ldi	r22, 0xFF	; 255
 228:	7f ef       	ldi	r23, 0xFF	; 255
 22a:	01 15       	cp	r16, r1
 22c:	80 e1       	ldi	r24, 0x10	; 16
 22e:	18 07       	cpc	r17, r24
 230:	21 05       	cpc	r18, r1
 232:	31 05       	cpc	r19, r1
 234:	04 f0       	brlt	.+0      	; 0x236 <calcPID+0x236>
 236:	0f ef       	ldi	r16, 0xFF	; 255
 238:	1f e0       	ldi	r17, 0x0F	; 15
 23a:	20 e0       	ldi	r18, 0x00	; 0
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	41 15       	cp	r20, r1
 240:	80 e1       	ldi	r24, 0x10	; 16
 242:	58 07       	cpc	r21, r24
 244:	61 05       	cpc	r22, r1
 246:	71 05       	cpc	r23, r1
 248:	04 f0       	brlt	.+0      	; 0x24a <calcPID+0x24a>
 24a:	4f ef       	ldi	r20, 0xFF	; 255
 24c:	5f e0       	ldi	r21, 0x0F	; 15
 24e:	60 e0       	ldi	r22, 0x00	; 0
 250:	70 e0       	ldi	r23, 0x00	; 0
 252:	40 0f       	add	r20, r16
 254:	51 1f       	adc	r21, r17
 256:	ca 01       	movw	r24, r20
 258:	8c 0d       	add	r24, r12
 25a:	9d 1d       	adc	r25, r13
 25c:	df 91       	pop	r29
 25e:	cf 91       	pop	r28
 260:	1f 91       	pop	r17
 262:	0f 91       	pop	r16
 264:	ff 90       	pop	r15
 266:	ef 90       	pop	r14
 268:	df 90       	pop	r13
 26a:	cf 90       	pop	r12
 26c:	bf 90       	pop	r11
 26e:	af 90       	pop	r10
 270:	9f 90       	pop	r9
 272:	8f 90       	pop	r8
 274:	08 95       	ret

SPI.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initSPI 0000001c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.spiTransceive 0000000c  00000000  00000000  00000050  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  0000005c  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initSPI:

00000000 <initSPI>:
   0:	10 92 64 00 	sts	0x0064, r1
   4:	84 b1       	in	r24, 0x04	; 4
   6:	80 6b       	ori	r24, 0xB0	; 176
   8:	84 b9       	out	0x04, r24	; 4
   a:	2c 9a       	sbi	0x05, 4	; 5
   c:	26 98       	cbi	0x04, 6	; 4
   e:	8c b5       	in	r24, 0x2c	; 44
  10:	83 65       	ori	r24, 0x53	; 83
  12:	8c bd       	out	0x2c, r24	; 44
  14:	8d b5       	in	r24, 0x2d	; 45
  16:	8e 7f       	andi	r24, 0xFE	; 254
  18:	8d bd       	out	0x2d, r24	; 45
  1a:	08 95       	ret

Disassembly of section .text.spiTransceive:

00000000 <spiTransceive>:
   0:	8e bd       	out	0x2e, r24	; 46
   2:	0d b4       	in	r0, 0x2d	; 45
   4:	07 fe       	sbrs	r0, 7
   6:	00 c0       	rjmp	.+0      	; 0x8 <spiTransceive+0x8>
   8:	8e b5       	in	r24, 0x2e	; 46
   a:	08 95       	ret

USARTDebug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.debugUSARTInit 0000003c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.putCharDebug 0000000e  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.getCharDebug 0000000e  00000000  00000000  0000007e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  0000008c  2**0
                  CONTENTS, READONLY

Disassembly of section .text.debugUSARTInit:

00000000 <debugUSARTInit>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <debugUSARTInit+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <debugUSARTInit>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	31 09       	sbc	r19, r1
  22:	83 2f       	mov	r24, r19
  24:	8f 70       	andi	r24, 0x0F	; 15
  26:	80 93 cd 00 	sts	0x00CD, r24
  2a:	20 93 cc 00 	sts	0x00CC, r18
  2e:	88 e1       	ldi	r24, 0x18	; 24
  30:	80 93 c9 00 	sts	0x00C9, r24
  34:	86 e0       	ldi	r24, 0x06	; 6
  36:	80 93 ca 00 	sts	0x00CA, r24
  3a:	08 95       	ret

Disassembly of section .text.putCharDebug:

00000000 <putCharDebug>:
   0:	90 91 c8 00 	lds	r25, 0x00C8
   4:	95 ff       	sbrs	r25, 5
   6:	00 c0       	rjmp	.+0      	; 0x8 <putCharDebug+0x8>
   8:	80 93 ce 00 	sts	0x00CE, r24
   c:	08 95       	ret

Disassembly of section .text.getCharDebug:

00000000 <getCharDebug>:
   0:	80 91 c8 00 	lds	r24, 0x00C8
   4:	87 ff       	sbrs	r24, 7
   6:	00 c0       	rjmp	.+0      	; 0x8 <getCharDebug+0x8>
   8:	80 91 ce 00 	lds	r24, 0x00CE
   c:	08 95       	ret

curSense.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.getCurrent 0000001c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .comment      00000012  00000000  00000000  00000050  2**0
                  CONTENTS, READONLY

Disassembly of section .text.getCurrent:

00000000 <getCurrent>:
   0:	88 34       	cpi	r24, 0x48	; 72
   2:	01 f4       	brne	.+0      	; 0x4 <getCurrent+0x4>
   4:	81 e0       	ldi	r24, 0x01	; 1
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	00 c0       	rjmp	.+0      	; 0xa <getCurrent+0xa>
   a:	8c 34       	cpi	r24, 0x4C	; 76
   c:	01 f4       	brne	.+0      	; 0xe <getCurrent+0xe>
   e:	80 e0       	ldi	r24, 0x00	; 0
  10:	90 e0       	ldi	r25, 0x00	; 0
  12:	0c 94 00 00 	jmp	0	; 0x0 <getCurrent>
  16:	80 e0       	ldi	r24, 0x00	; 0
  18:	90 e0       	ldi	r25, 0x00	; 0
  1a:	08 95       	ret

motors.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.stopMotors 00000020  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.gotoXY  00000002  00000000  00000000  00000054  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.driveLink 000000a2  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.gotoAngles 0000006e  00000000  00000000  000000f8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.homePos 00000002  00000000  00000000  00000166  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .comment      00000012  00000000  00000000  00000168  2**0
                  CONTENTS, READONLY

Disassembly of section .text.stopMotors:

00000000 <stopMotors>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	c0 e0       	ldi	r28, 0x00	; 0
   6:	d0 e0       	ldi	r29, 0x00	; 0
   8:	60 e0       	ldi	r22, 0x00	; 0
   a:	70 e0       	ldi	r23, 0x00	; 0
   c:	ce 01       	movw	r24, r28
   e:	0e 94 00 00 	call	0	; 0x0 <stopMotors>
  12:	21 96       	adiw	r28, 0x01	; 1
  14:	c4 30       	cpi	r28, 0x04	; 4
  16:	d1 05       	cpc	r29, r1
  18:	01 f4       	brne	.+0      	; 0x1a <stopMotors+0x1a>
  1a:	df 91       	pop	r29
  1c:	cf 91       	pop	r28
  1e:	08 95       	ret

Disassembly of section .text.gotoXY:

00000000 <gotoXY>:
   0:	08 95       	ret

Disassembly of section .text.driveLink:

00000000 <driveLink>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	eb 01       	movw	r28, r22
   6:	81 30       	cpi	r24, 0x01	; 1
   8:	91 05       	cpc	r25, r1
   a:	01 f4       	brne	.+0      	; 0xc <driveLink+0xc>
   c:	77 fd       	sbrc	r23, 7
   e:	00 c0       	rjmp	.+0      	; 0x10 <driveLink+0x10>
  10:	60 e0       	ldi	r22, 0x00	; 0
  12:	70 e0       	ldi	r23, 0x00	; 0
  14:	82 e0       	ldi	r24, 0x02	; 2
  16:	90 e0       	ldi	r25, 0x00	; 0
  18:	0e 94 00 00 	call	0	; 0x0 <driveLink>
  1c:	be 01       	movw	r22, r28
  1e:	c1 15       	cp	r28, r1
  20:	d0 41       	sbci	r29, 0x10	; 16
  22:	04 f0       	brlt	.+0      	; 0x24 <driveLink+0x24>
  24:	6f ef       	ldi	r22, 0xFF	; 255
  26:	7f e0       	ldi	r23, 0x0F	; 15
  28:	00 c0       	rjmp	.+0      	; 0x2a <driveLink+0x2a>
  2a:	89 2b       	or	r24, r25
  2c:	01 f4       	brne	.+0      	; 0x2e <driveLink+0x2e>
  2e:	77 fd       	sbrc	r23, 7
  30:	00 c0       	rjmp	.+0      	; 0x32 <driveLink+0x32>
  32:	61 15       	cp	r22, r1
  34:	80 e1       	ldi	r24, 0x10	; 16
  36:	78 07       	cpc	r23, r24
  38:	04 f0       	brlt	.+0      	; 0x3a <driveLink+0x3a>
  3a:	6f ef       	ldi	r22, 0xFF	; 255
  3c:	7f e0       	ldi	r23, 0x0F	; 15
  3e:	80 e0       	ldi	r24, 0x00	; 0
  40:	90 e0       	ldi	r25, 0x00	; 0
  42:	0e 94 00 00 	call	0	; 0x0 <driveLink>
  46:	60 e0       	ldi	r22, 0x00	; 0
  48:	70 e0       	ldi	r23, 0x00	; 0
  4a:	00 c0       	rjmp	.+0      	; 0x4c <driveLink+0x4c>
  4c:	61 30       	cpi	r22, 0x01	; 1
  4e:	70 4f       	sbci	r23, 0xF0	; 240
  50:	04 f4       	brge	.+0      	; 0x52 <driveLink+0x52>
  52:	c1 e0       	ldi	r28, 0x01	; 1
  54:	d0 ef       	ldi	r29, 0xF0	; 240
  56:	66 27       	eor	r22, r22
  58:	77 27       	eor	r23, r23
  5a:	6c 1b       	sub	r22, r28
  5c:	7d 0b       	sbc	r23, r29
  5e:	82 e0       	ldi	r24, 0x02	; 2
  60:	90 e0       	ldi	r25, 0x00	; 0
  62:	0e 94 00 00 	call	0	; 0x0 <driveLink>
  66:	60 e0       	ldi	r22, 0x00	; 0
  68:	70 e0       	ldi	r23, 0x00	; 0
  6a:	83 e0       	ldi	r24, 0x03	; 3
  6c:	90 e0       	ldi	r25, 0x00	; 0
  6e:	00 c0       	rjmp	.+0      	; 0x70 <driveLink+0x70>
  70:	60 e0       	ldi	r22, 0x00	; 0
  72:	70 e0       	ldi	r23, 0x00	; 0
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	0e 94 00 00 	call	0	; 0x0 <driveLink>
  7c:	c1 30       	cpi	r28, 0x01	; 1
  7e:	80 ef       	ldi	r24, 0xF0	; 240
  80:	d8 07       	cpc	r29, r24
  82:	04 f4       	brge	.+0      	; 0x84 <driveLink+0x84>
  84:	c1 e0       	ldi	r28, 0x01	; 1
  86:	d0 ef       	ldi	r29, 0xF0	; 240
  88:	66 27       	eor	r22, r22
  8a:	77 27       	eor	r23, r23
  8c:	6c 1b       	sub	r22, r28
  8e:	7d 0b       	sbc	r23, r29
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	df 91       	pop	r29
  96:	cf 91       	pop	r28
  98:	0c 94 00 00 	jmp	0	; 0x0 <driveLink>
  9c:	df 91       	pop	r29
  9e:	cf 91       	pop	r28
  a0:	08 95       	ret

Disassembly of section .text.gotoAngles:

00000000 <gotoAngles>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	00 d0       	rcall	.+0      	; 0x12 <gotoAngles+0x12>
  12:	cd b7       	in	r28, 0x3d	; 61
  14:	de b7       	in	r29, 0x3e	; 62
  16:	8c 01       	movw	r16, r24
  18:	82 e0       	ldi	r24, 0x02	; 2
  1a:	90 e0       	ldi	r25, 0x00	; 0
  1c:	69 83       	std	Y+1, r22	; 0x01
  1e:	7a 83       	std	Y+2, r23	; 0x02
  20:	0e 94 00 00 	call	0	; 0x0 <gotoAngles>
  24:	7c 01       	movw	r14, r24
  26:	83 e0       	ldi	r24, 0x03	; 3
  28:	90 e0       	ldi	r25, 0x00	; 0
  2a:	0e 94 00 00 	call	0	; 0x0 <gotoAngles>
  2e:	ac 01       	movw	r20, r24
  30:	69 81       	ldd	r22, Y+1	; 0x01
  32:	7a 81       	ldd	r23, Y+2	; 0x02
  34:	88 e4       	ldi	r24, 0x48	; 72
  36:	0e 94 00 00 	call	0	; 0x0 <gotoAngles>
  3a:	6c 01       	movw	r12, r24
  3c:	a7 01       	movw	r20, r14
  3e:	b8 01       	movw	r22, r16
  40:	8c e4       	ldi	r24, 0x4C	; 76
  42:	0e 94 00 00 	call	0	; 0x0 <gotoAngles>
  46:	bc 01       	movw	r22, r24
  48:	80 e0       	ldi	r24, 0x00	; 0
  4a:	90 e0       	ldi	r25, 0x00	; 0
  4c:	0e 94 00 00 	call	0	; 0x0 <gotoAngles>
  50:	b6 01       	movw	r22, r12
  52:	81 e0       	ldi	r24, 0x01	; 1
  54:	90 e0       	ldi	r25, 0x00	; 0
  56:	0f 90       	pop	r0
  58:	0f 90       	pop	r0
  5a:	df 91       	pop	r29
  5c:	cf 91       	pop	r28
  5e:	1f 91       	pop	r17
  60:	0f 91       	pop	r16
  62:	ff 90       	pop	r15
  64:	ef 90       	pop	r14
  66:	df 90       	pop	r13
  68:	cf 90       	pop	r12
  6a:	0c 94 00 00 	jmp	0	; 0x0 <gotoAngles>

Disassembly of section .text.homePos:

00000000 <homePos>:
   0:	08 95       	ret

ports.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setPinsDir 000000b0  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.getPinsVal 0000005e  00000000  00000000  000000e4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.setPinsVal 000000b0  00000000  00000000  00000142  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  000001f2  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setPinsDir:

00000000 <setPinsDir>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	99 85       	ldd	r25, Y+9	; 0x09
  12:	2a 85       	ldd	r18, Y+10	; 0x0a
  14:	3b 85       	ldd	r19, Y+11	; 0x0b
  16:	fe 01       	movw	r30, r28
  18:	3d 96       	adiw	r30, 0x0d	; 13
  1a:	60 e0       	ldi	r22, 0x00	; 0
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	80 e0       	ldi	r24, 0x00	; 0
  20:	4c 85       	ldd	r20, Y+12	; 0x0c
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	a1 e0       	ldi	r26, 0x01	; 1
  26:	b0 e0       	ldi	r27, 0x00	; 0
  28:	64 17       	cp	r22, r20
  2a:	75 07       	cpc	r23, r21
  2c:	04 f4       	brge	.+0      	; 0x2e <setPinsDir+0x2e>
  2e:	10 81       	ld	r17, Z
  30:	32 96       	adiw	r30, 0x02	; 2
  32:	7d 01       	movw	r14, r26
  34:	00 c0       	rjmp	.+0      	; 0x36 <setPinsDir+0x36>
  36:	ee 0c       	add	r14, r14
  38:	ff 1c       	adc	r15, r15
  3a:	1a 95       	dec	r17
  3c:	02 f4       	brpl	.+0      	; 0x3e <setPinsDir+0x3e>
  3e:	8e 29       	or	r24, r14
  40:	6f 5f       	subi	r22, 0xFF	; 255
  42:	7f 4f       	sbci	r23, 0xFF	; 255
  44:	00 c0       	rjmp	.+0      	; 0x46 <setPinsDir+0x46>
  46:	92 34       	cpi	r25, 0x42	; 66
  48:	01 f0       	breq	.+0      	; 0x4a <setPinsDir+0x4a>
  4a:	00 f4       	brcc	.+0      	; 0x4c <setPinsDir+0x4c>
  4c:	91 34       	cpi	r25, 0x41	; 65
  4e:	01 f0       	breq	.+0      	; 0x50 <setPinsDir+0x50>
  50:	00 c0       	rjmp	.+0      	; 0x52 <setPinsDir+0x52>
  52:	93 34       	cpi	r25, 0x43	; 67
  54:	01 f0       	breq	.+0      	; 0x56 <setPinsDir+0x56>
  56:	94 34       	cpi	r25, 0x44	; 68
  58:	01 f0       	breq	.+0      	; 0x5a <setPinsDir+0x5a>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <setPinsDir+0x5c>
  5c:	91 b1       	in	r25, 0x01	; 1
  5e:	23 2b       	or	r18, r19
  60:	01 f0       	breq	.+0      	; 0x62 <setPinsDir+0x62>
  62:	89 2b       	or	r24, r25
  64:	00 c0       	rjmp	.+0      	; 0x66 <setPinsDir+0x66>
  66:	80 95       	com	r24
  68:	89 23       	and	r24, r25
  6a:	81 b9       	out	0x01, r24	; 1
  6c:	00 c0       	rjmp	.+0      	; 0x6e <setPinsDir+0x6e>
  6e:	94 b1       	in	r25, 0x04	; 4
  70:	23 2b       	or	r18, r19
  72:	01 f0       	breq	.+0      	; 0x74 <setPinsDir+0x74>
  74:	89 2b       	or	r24, r25
  76:	00 c0       	rjmp	.+0      	; 0x78 <setPinsDir+0x78>
  78:	80 95       	com	r24
  7a:	89 23       	and	r24, r25
  7c:	84 b9       	out	0x04, r24	; 4
  7e:	00 c0       	rjmp	.+0      	; 0x80 <setPinsDir+0x80>
  80:	97 b1       	in	r25, 0x07	; 7
  82:	23 2b       	or	r18, r19
  84:	01 f0       	breq	.+0      	; 0x86 <setPinsDir+0x86>
  86:	89 2b       	or	r24, r25
  88:	00 c0       	rjmp	.+0      	; 0x8a <setPinsDir+0x8a>
  8a:	80 95       	com	r24
  8c:	89 23       	and	r24, r25
  8e:	87 b9       	out	0x07, r24	; 7
  90:	00 c0       	rjmp	.+0      	; 0x92 <setPinsDir+0x92>
  92:	9a b1       	in	r25, 0x0a	; 10
  94:	23 2b       	or	r18, r19
  96:	01 f0       	breq	.+0      	; 0x98 <setPinsDir+0x98>
  98:	89 2b       	or	r24, r25
  9a:	00 c0       	rjmp	.+0      	; 0x9c <setPinsDir+0x9c>
  9c:	80 95       	com	r24
  9e:	89 23       	and	r24, r25
  a0:	8a b9       	out	0x0a, r24	; 10
  a2:	df 91       	pop	r29
  a4:	cf 91       	pop	r28
  a6:	1f 91       	pop	r17
  a8:	0f 91       	pop	r16
  aa:	ff 90       	pop	r15
  ac:	ef 90       	pop	r14
  ae:	08 95       	ret

Disassembly of section .text.getPinsVal:

00000000 <getPinsVal>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	8d 81       	ldd	r24, Y+5	; 0x05
   a:	3e 81       	ldd	r19, Y+6	; 0x06
   c:	fe 01       	movw	r30, r28
   e:	37 96       	adiw	r30, 0x07	; 7
  10:	20 e0       	ldi	r18, 0x00	; 0
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	41 e0       	ldi	r20, 0x01	; 1
  16:	50 e0       	ldi	r21, 0x00	; 0
  18:	23 17       	cp	r18, r19
  1a:	01 f0       	breq	.+0      	; 0x1c <getPinsVal+0x1c>
  1c:	60 81       	ld	r22, Z
  1e:	32 96       	adiw	r30, 0x02	; 2
  20:	da 01       	movw	r26, r20
  22:	00 c0       	rjmp	.+0      	; 0x24 <getPinsVal+0x24>
  24:	aa 0f       	add	r26, r26
  26:	bb 1f       	adc	r27, r27
  28:	6a 95       	dec	r22
  2a:	02 f4       	brpl	.+0      	; 0x2c <getPinsVal+0x2c>
  2c:	9a 2b       	or	r25, r26
  2e:	2f 5f       	subi	r18, 0xFF	; 255
  30:	00 c0       	rjmp	.+0      	; 0x32 <getPinsVal+0x32>
  32:	82 34       	cpi	r24, 0x42	; 66
  34:	01 f0       	breq	.+0      	; 0x36 <getPinsVal+0x36>
  36:	00 f4       	brcc	.+0      	; 0x38 <getPinsVal+0x38>
  38:	81 34       	cpi	r24, 0x41	; 65
  3a:	01 f4       	brne	.+0      	; 0x3c <getPinsVal+0x3c>
  3c:	80 b1       	in	r24, 0x00	; 0
  3e:	00 c0       	rjmp	.+0      	; 0x40 <getPinsVal+0x40>
  40:	83 34       	cpi	r24, 0x43	; 67
  42:	01 f0       	breq	.+0      	; 0x44 <getPinsVal+0x44>
  44:	84 34       	cpi	r24, 0x44	; 68
  46:	01 f4       	brne	.+0      	; 0x48 <getPinsVal+0x48>
  48:	89 b1       	in	r24, 0x09	; 9
  4a:	00 c0       	rjmp	.+0      	; 0x4c <getPinsVal+0x4c>
  4c:	83 b1       	in	r24, 0x03	; 3
  4e:	00 c0       	rjmp	.+0      	; 0x50 <getPinsVal+0x50>
  50:	86 b1       	in	r24, 0x06	; 6
  52:	89 23       	and	r24, r25
  54:	00 c0       	rjmp	.+0      	; 0x56 <getPinsVal+0x56>
  56:	80 e0       	ldi	r24, 0x00	; 0
  58:	df 91       	pop	r29
  5a:	cf 91       	pop	r28
  5c:	08 95       	ret

Disassembly of section .text.setPinsVal:

00000000 <setPinsVal>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	99 85       	ldd	r25, Y+9	; 0x09
  12:	2a 85       	ldd	r18, Y+10	; 0x0a
  14:	3b 85       	ldd	r19, Y+11	; 0x0b
  16:	fe 01       	movw	r30, r28
  18:	3d 96       	adiw	r30, 0x0d	; 13
  1a:	60 e0       	ldi	r22, 0x00	; 0
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	80 e0       	ldi	r24, 0x00	; 0
  20:	4c 85       	ldd	r20, Y+12	; 0x0c
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	a1 e0       	ldi	r26, 0x01	; 1
  26:	b0 e0       	ldi	r27, 0x00	; 0
  28:	64 17       	cp	r22, r20
  2a:	75 07       	cpc	r23, r21
  2c:	04 f4       	brge	.+0      	; 0x2e <setPinsVal+0x2e>
  2e:	10 81       	ld	r17, Z
  30:	32 96       	adiw	r30, 0x02	; 2
  32:	7d 01       	movw	r14, r26
  34:	00 c0       	rjmp	.+0      	; 0x36 <setPinsVal+0x36>
  36:	ee 0c       	add	r14, r14
  38:	ff 1c       	adc	r15, r15
  3a:	1a 95       	dec	r17
  3c:	02 f4       	brpl	.+0      	; 0x3e <setPinsVal+0x3e>
  3e:	8e 29       	or	r24, r14
  40:	6f 5f       	subi	r22, 0xFF	; 255
  42:	7f 4f       	sbci	r23, 0xFF	; 255
  44:	00 c0       	rjmp	.+0      	; 0x46 <setPinsVal+0x46>
  46:	92 34       	cpi	r25, 0x42	; 66
  48:	01 f0       	breq	.+0      	; 0x4a <setPinsVal+0x4a>
  4a:	00 f4       	brcc	.+0      	; 0x4c <setPinsVal+0x4c>
  4c:	91 34       	cpi	r25, 0x41	; 65
  4e:	01 f0       	breq	.+0      	; 0x50 <setPinsVal+0x50>
  50:	00 c0       	rjmp	.+0      	; 0x52 <setPinsVal+0x52>
  52:	93 34       	cpi	r25, 0x43	; 67
  54:	01 f0       	breq	.+0      	; 0x56 <setPinsVal+0x56>
  56:	94 34       	cpi	r25, 0x44	; 68
  58:	01 f0       	breq	.+0      	; 0x5a <setPinsVal+0x5a>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <setPinsVal+0x5c>
  5c:	92 b1       	in	r25, 0x02	; 2
  5e:	23 2b       	or	r18, r19
  60:	01 f0       	breq	.+0      	; 0x62 <setPinsVal+0x62>
  62:	89 2b       	or	r24, r25
  64:	00 c0       	rjmp	.+0      	; 0x66 <setPinsVal+0x66>
  66:	80 95       	com	r24
  68:	89 23       	and	r24, r25
  6a:	82 b9       	out	0x02, r24	; 2
  6c:	00 c0       	rjmp	.+0      	; 0x6e <setPinsVal+0x6e>
  6e:	95 b1       	in	r25, 0x05	; 5
  70:	23 2b       	or	r18, r19
  72:	01 f0       	breq	.+0      	; 0x74 <setPinsVal+0x74>
  74:	89 2b       	or	r24, r25
  76:	00 c0       	rjmp	.+0      	; 0x78 <setPinsVal+0x78>
  78:	80 95       	com	r24
  7a:	89 23       	and	r24, r25
  7c:	85 b9       	out	0x05, r24	; 5
  7e:	00 c0       	rjmp	.+0      	; 0x80 <setPinsVal+0x80>
  80:	98 b1       	in	r25, 0x08	; 8
  82:	23 2b       	or	r18, r19
  84:	01 f0       	breq	.+0      	; 0x86 <setPinsVal+0x86>
  86:	89 2b       	or	r24, r25
  88:	00 c0       	rjmp	.+0      	; 0x8a <setPinsVal+0x8a>
  8a:	80 95       	com	r24
  8c:	89 23       	and	r24, r25
  8e:	88 b9       	out	0x08, r24	; 8
  90:	00 c0       	rjmp	.+0      	; 0x92 <setPinsVal+0x92>
  92:	9b b1       	in	r25, 0x0b	; 11
  94:	23 2b       	or	r18, r19
  96:	01 f0       	breq	.+0      	; 0x98 <setPinsVal+0x98>
  98:	89 2b       	or	r24, r25
  9a:	00 c0       	rjmp	.+0      	; 0x9c <setPinsVal+0x9c>
  9c:	80 95       	com	r24
  9e:	89 23       	and	r24, r25
  a0:	8b b9       	out	0x0b, r24	; 11
  a2:	df 91       	pop	r29
  a4:	cf 91       	pop	r28
  a6:	1f 91       	pop	r17
  a8:	0f 91       	pop	r16
  aa:	ff 90       	pop	r15
  ac:	ef 90       	pop	r14
  ae:	08 95       	ret

timer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initTimer 000000d6  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setCompValue 00000028  00000000  00000000  0000010a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  00000132  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initTimer:

00000000 <initTimer>:
   0:	f8 94       	cli
   2:	81 30       	cpi	r24, 0x01	; 1
   4:	01 f0       	breq	.+0      	; 0x6 <initTimer+0x6>
   6:	00 f0       	brcs	.+0      	; 0x8 <initTimer+0x8>
   8:	82 30       	cpi	r24, 0x02	; 2
   a:	01 f4       	brne	.+0      	; 0xc <initTimer+0xc>
   c:	00 c0       	rjmp	.+0      	; 0xe <initTimer+0xe>
   e:	00 c0       	rjmp	.+0      	; 0x10 <initTimer+0x10>
  10:	cb 01       	movw	r24, r22
  12:	56 e0       	ldi	r21, 0x06	; 6
  14:	88 0f       	add	r24, r24
  16:	99 1f       	adc	r25, r25
  18:	5a 95       	dec	r21
  1a:	01 f4       	brne	.+0      	; 0x1c <initTimer+0x1c>
  1c:	86 2b       	or	r24, r22
  1e:	84 bd       	out	0x24, r24	; 36
  20:	85 e0       	ldi	r24, 0x05	; 5
  22:	85 bd       	out	0x25, r24	; 37
  24:	80 91 6e 00 	lds	r24, 0x006E
  28:	82 60       	ori	r24, 0x02	; 2
  2a:	80 93 6e 00 	sts	0x006E, r24
  2e:	47 bd       	out	0x27, r20	; 39
  30:	61 30       	cpi	r22, 0x01	; 1
  32:	71 05       	cpc	r23, r1
  34:	01 f0       	breq	.+0      	; 0x36 <initTimer+0x36>
  36:	00 c0       	rjmp	.+0      	; 0x38 <initTimer+0x38>
  38:	84 b5       	in	r24, 0x24	; 36
  3a:	80 62       	ori	r24, 0x20	; 32
  3c:	84 bd       	out	0x24, r24	; 36
  3e:	85 b5       	in	r24, 0x25	; 37
  40:	88 60       	ori	r24, 0x08	; 8
  42:	85 bd       	out	0x25, r24	; 37
  44:	24 9a       	sbi	0x04, 4	; 4
  46:	00 c0       	rjmp	.+0      	; 0x48 <initTimer+0x48>
  48:	66 9f       	mul	r22, r22
  4a:	20 2d       	mov	r18, r0
  4c:	11 24       	eor	r1, r1
  4e:	cb 01       	movw	r24, r22
  50:	36 e0       	ldi	r19, 0x06	; 6
  52:	88 0f       	add	r24, r24
  54:	99 1f       	adc	r25, r25
  56:	3a 95       	dec	r19
  58:	01 f4       	brne	.+0      	; 0x5a <initTimer+0x5a>
  5a:	82 2b       	or	r24, r18
  5c:	80 93 80 00 	sts	0x0080, r24
  60:	8d e0       	ldi	r24, 0x0D	; 13
  62:	80 93 81 00 	sts	0x0081, r24
  66:	80 91 6f 00 	lds	r24, 0x006F
  6a:	82 60       	ori	r24, 0x02	; 2
  6c:	80 93 6f 00 	sts	0x006F, r24
  70:	40 93 88 00 	sts	0x0088, r20
  74:	61 30       	cpi	r22, 0x01	; 1
  76:	71 05       	cpc	r23, r1
  78:	01 f4       	brne	.+0      	; 0x7a <initTimer+0x7a>
  7a:	80 91 80 00 	lds	r24, 0x0080
  7e:	80 62       	ori	r24, 0x20	; 32
  80:	80 93 80 00 	sts	0x0080, r24
  84:	80 91 81 00 	lds	r24, 0x0081
  88:	80 61       	ori	r24, 0x10	; 16
  8a:	80 93 81 00 	sts	0x0081, r24
  8e:	54 9a       	sbi	0x0a, 4	; 10
  90:	00 c0       	rjmp	.+0      	; 0x92 <initTimer+0x92>
  92:	cb 01       	movw	r24, r22
  94:	26 e0       	ldi	r18, 0x06	; 6
  96:	88 0f       	add	r24, r24
  98:	99 1f       	adc	r25, r25
  9a:	2a 95       	dec	r18
  9c:	01 f4       	brne	.+0      	; 0x9e <initTimer+0x9e>
  9e:	86 2b       	or	r24, r22
  a0:	80 93 b0 00 	sts	0x00B0, r24
  a4:	10 92 b1 00 	sts	0x00B1, r1
  a8:	80 91 70 00 	lds	r24, 0x0070
  ac:	82 60       	ori	r24, 0x02	; 2
  ae:	80 93 70 00 	sts	0x0070, r24
  b2:	40 93 b3 00 	sts	0x00B3, r20
  b6:	61 30       	cpi	r22, 0x01	; 1
  b8:	71 05       	cpc	r23, r1
  ba:	01 f4       	brne	.+0      	; 0xbc <initTimer+0xbc>
  bc:	80 91 b0 00 	lds	r24, 0x00B0
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	80 93 b0 00 	sts	0x00B0, r24
  c6:	80 91 b1 00 	lds	r24, 0x00B1
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	80 93 b1 00 	sts	0x00B1, r24
  d0:	56 9a       	sbi	0x0a, 6	; 10
  d2:	78 94       	sei
  d4:	08 95       	ret

Disassembly of section .text.setCompValue:

00000000 <setCompValue>:
   0:	81 30       	cpi	r24, 0x01	; 1
   2:	01 f0       	breq	.+0      	; 0x4 <setCompValue+0x4>
   4:	00 f0       	brcs	.+0      	; 0x6 <setCompValue+0x6>
   6:	82 30       	cpi	r24, 0x02	; 2
   8:	01 f0       	breq	.+0      	; 0xa <setCompValue+0xa>
   a:	08 95       	ret
   c:	67 bd       	out	0x27, r22	; 39
   e:	08 95       	ret
  10:	70 e0       	ldi	r23, 0x00	; 0
  12:	70 93 89 00 	sts	0x0089, r23
  16:	60 93 88 00 	sts	0x0088, r22
  1a:	08 95       	ret
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	70 93 8b 00 	sts	0x008B, r23
  22:	60 93 8a 00 	sts	0x008A, r22
  26:	08 95       	ret

vals.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.getLinkAngle 00000046  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setPotVal 000000ba  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.setCurVal 00000032  00000000  00000000  00000134  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .rodata.str1.1 00000032  00000000  00000000  00000166  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .text.printMotor 0000007c  00000000  00000000  00000198  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .comment      00000012  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY

Disassembly of section .text.getLinkAngle:

00000000 <getLinkAngle>:
   0:	88 34       	cpi	r24, 0x48	; 72
   2:	01 f4       	brne	.+0      	; 0x4 <getLinkAngle+0x4>
   4:	83 e0       	ldi	r24, 0x03	; 3
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	00 c0       	rjmp	.+0      	; 0xa <getLinkAngle+0xa>
   a:	8c 34       	cpi	r24, 0x4C	; 76
   c:	01 f4       	brne	.+0      	; 0xe <getLinkAngle+0xe>
   e:	82 e0       	ldi	r24, 0x02	; 2
  10:	90 e0       	ldi	r25, 0x00	; 0
  12:	0e 94 00 00 	call	0	; 0x0 <getLinkAngle>
  16:	bc 01       	movw	r22, r24
  18:	80 e0       	ldi	r24, 0x00	; 0
  1a:	90 e0       	ldi	r25, 0x00	; 0
  1c:	0e 94 00 00 	call	0	; 0x0 <getLinkAngle>
  20:	28 ec       	ldi	r18, 0xC8	; 200
  22:	31 e2       	ldi	r19, 0x21	; 33
  24:	47 e8       	ldi	r20, 0x87	; 135
  26:	5e e3       	ldi	r21, 0x3E	; 62
  28:	0e 94 00 00 	call	0	; 0x0 <getLinkAngle>
  2c:	20 e0       	ldi	r18, 0x00	; 0
  2e:	30 e0       	ldi	r19, 0x00	; 0
  30:	40 eb       	ldi	r20, 0xB0	; 176
  32:	52 e4       	ldi	r21, 0x42	; 66
  34:	0e 94 00 00 	call	0	; 0x0 <getLinkAngle>
  38:	0e 94 00 00 	call	0	; 0x0 <getLinkAngle>
  3c:	cb 01       	movw	r24, r22
  3e:	08 95       	ret
  40:	80 e0       	ldi	r24, 0x00	; 0
  42:	90 e0       	ldi	r25, 0x00	; 0
  44:	08 95       	ret

Disassembly of section .text.setPotVal:

00000000 <setPotVal>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	59 83       	std	Y+1, r21	; 0x01
  10:	48 83       	st	Y, r20
  12:	68 34       	cpi	r22, 0x48	; 72
  14:	01 f4       	brne	.+0      	; 0x16 <setPotVal+0x16>
  16:	ba 01       	movw	r22, r20
  18:	55 0f       	add	r21, r21
  1a:	88 0b       	sbc	r24, r24
  1c:	99 0b       	sbc	r25, r25
  1e:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  22:	6b 01       	movw	r12, r22
  24:	7c 01       	movw	r14, r24
  26:	2a e1       	ldi	r18, 0x1A	; 26
  28:	37 e6       	ldi	r19, 0x67	; 103
  2a:	4c e9       	ldi	r20, 0x9C	; 156
  2c:	50 e4       	ldi	r21, 0x40	; 64
  2e:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  32:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  36:	7d 83       	std	Y+5, r23	; 0x05
  38:	6c 83       	std	Y+4, r22	; 0x04
  3a:	28 ec       	ldi	r18, 0xC8	; 200
  3c:	31 e2       	ldi	r19, 0x21	; 33
  3e:	47 e8       	ldi	r20, 0x87	; 135
  40:	5e e3       	ldi	r21, 0x3E	; 62
  42:	c7 01       	movw	r24, r14
  44:	b6 01       	movw	r22, r12
  46:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  4a:	20 e0       	ldi	r18, 0x00	; 0
  4c:	30 e0       	ldi	r19, 0x00	; 0
  4e:	40 eb       	ldi	r20, 0xB0	; 176
  50:	52 e4       	ldi	r21, 0x42	; 66
  52:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  56:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  5a:	7b 83       	std	Y+3, r23	; 0x03
  5c:	6a 83       	std	Y+2, r22	; 0x02
  5e:	00 c0       	rjmp	.+0      	; 0x60 <setPotVal+0x60>
  60:	6c 34       	cpi	r22, 0x4C	; 76
  62:	01 f4       	brne	.+0      	; 0x64 <setPotVal+0x64>
  64:	ba 01       	movw	r22, r20
  66:	55 0f       	add	r21, r21
  68:	88 0b       	sbc	r24, r24
  6a:	99 0b       	sbc	r25, r25
  6c:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  70:	6b 01       	movw	r12, r22
  72:	7c 01       	movw	r14, r24
  74:	20 e9       	ldi	r18, 0x90	; 144
  76:	3e e3       	ldi	r19, 0x3E	; 62
  78:	4a e7       	ldi	r20, 0x7A	; 122
  7a:	5e e3       	ldi	r21, 0x3E	; 62
  7c:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  80:	20 e0       	ldi	r18, 0x00	; 0
  82:	30 e0       	ldi	r19, 0x00	; 0
  84:	4e ea       	ldi	r20, 0xAE	; 174
  86:	52 e4       	ldi	r21, 0x42	; 66
  88:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  8c:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  90:	7b 83       	std	Y+3, r23	; 0x03
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	2a e1       	ldi	r18, 0x1A	; 26
  96:	37 e6       	ldi	r19, 0x67	; 103
  98:	4c e9       	ldi	r20, 0x9C	; 156
  9a:	50 e4       	ldi	r21, 0x40	; 64
  9c:	c7 01       	movw	r24, r14
  9e:	b6 01       	movw	r22, r12
  a0:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  a4:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  a8:	7d 83       	std	Y+5, r23	; 0x05
  aa:	6c 83       	std	Y+4, r22	; 0x04
  ac:	df 91       	pop	r29
  ae:	cf 91       	pop	r28
  b0:	ff 90       	pop	r15
  b2:	ef 90       	pop	r14
  b4:	df 90       	pop	r13
  b6:	cf 90       	pop	r12
  b8:	08 95       	ret

Disassembly of section .text.setCurVal:

00000000 <setCurVal>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	7f 83       	std	Y+7, r23	; 0x07
   8:	6e 83       	std	Y+6, r22	; 0x06
   a:	72 50       	subi	r23, 0x02	; 2
   c:	07 2e       	mov	r0, r23
   e:	00 0c       	add	r0, r0
  10:	88 0b       	sbc	r24, r24
  12:	99 0b       	sbc	r25, r25
  14:	0e 94 00 00 	call	0	; 0x0 <setCurVal>
  18:	26 ef       	ldi	r18, 0xF6	; 246
  1a:	38 e2       	ldi	r19, 0x28	; 40
  1c:	4c e9       	ldi	r20, 0x9C	; 156
  1e:	5f e3       	ldi	r21, 0x3F	; 63
  20:	0e 94 00 00 	call	0	; 0x0 <setCurVal>
  24:	0e 94 00 00 	call	0	; 0x0 <setCurVal>
  28:	79 87       	std	Y+9, r23	; 0x09
  2a:	68 87       	std	Y+8, r22	; 0x08
  2c:	df 91       	pop	r29
  2e:	cf 91       	pop	r28
  30:	08 95       	ret

Disassembly of section .text.printMotor:

00000000 <printMotor>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2a 97       	sbiw	r28, 0x0a	; 10
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	09 83       	std	Y+1, r16	; 0x01
  1a:	1a 83       	std	Y+2, r17	; 0x02
  1c:	2b 83       	std	Y+3, r18	; 0x03
  1e:	3c 83       	std	Y+4, r19	; 0x04
  20:	4d 83       	std	Y+5, r20	; 0x05
  22:	5e 83       	std	Y+6, r21	; 0x06
  24:	6f 83       	std	Y+7, r22	; 0x07
  26:	78 87       	std	Y+8, r23	; 0x08
  28:	89 87       	std	Y+9, r24	; 0x09
  2a:	9f 93       	push	r25
  2c:	89 85       	ldd	r24, Y+9	; 0x09
  2e:	8f 93       	push	r24
  30:	88 85       	ldd	r24, Y+8	; 0x08
  32:	8f 93       	push	r24
  34:	8f 81       	ldd	r24, Y+7	; 0x07
  36:	8f 93       	push	r24
  38:	8e 81       	ldd	r24, Y+6	; 0x06
  3a:	8f 93       	push	r24
  3c:	8d 81       	ldd	r24, Y+5	; 0x05
  3e:	8f 93       	push	r24
  40:	8c 81       	ldd	r24, Y+4	; 0x04
  42:	8f 93       	push	r24
  44:	8b 81       	ldd	r24, Y+3	; 0x03
  46:	8f 93       	push	r24
  48:	8a 81       	ldd	r24, Y+2	; 0x02
  4a:	8f 93       	push	r24
  4c:	89 81       	ldd	r24, Y+1	; 0x01
  4e:	8f 93       	push	r24
  50:	80 e0       	ldi	r24, 0x00	; 0
  52:	90 e0       	ldi	r25, 0x00	; 0
  54:	9f 93       	push	r25
  56:	8f 93       	push	r24
  58:	0e 94 00 00 	call	0	; 0x0 <printMotor>
  5c:	0f b6       	in	r0, 0x3f	; 63
  5e:	f8 94       	cli
  60:	de bf       	out	0x3e, r29	; 62
  62:	0f be       	out	0x3f, r0	; 63
  64:	cd bf       	out	0x3d, r28	; 61
  66:	2a 96       	adiw	r28, 0x0a	; 10
  68:	0f b6       	in	r0, 0x3f	; 63
  6a:	f8 94       	cli
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	0f be       	out	0x3f, r0	; 63
  70:	cd bf       	out	0x3d, r28	; 61
  72:	df 91       	pop	r29
  74:	cf 91       	pop	r28
  76:	1f 91       	pop	r17
  78:	0f 91       	pop	r16
  7a:	08 95       	ret
