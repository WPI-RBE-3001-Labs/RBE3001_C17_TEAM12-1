In archive libRBELib.a:

SetServo.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initAltCom 00000038  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setCharDebug 0000000e  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.coPrintf 00000018  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .rodata.str1.1 00000014  00000000  00000000  00000092  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .text.setServo 0000005c  00000000  00000000  000000a6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .comment      00000012  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initAltCom:

00000000 <initAltCom>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <initAltCom+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <initAltCom>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	31 09       	sbc	r19, r1
  22:	30 93 c5 00 	sts	0x00C5, r19
  26:	20 93 c4 00 	sts	0x00C4, r18
  2a:	88 e1       	ldi	r24, 0x18	; 24
  2c:	80 93 c1 00 	sts	0x00C1, r24
  30:	86 e0       	ldi	r24, 0x06	; 6
  32:	80 93 c2 00 	sts	0x00C2, r24
  36:	08 95       	ret

Disassembly of section .text.setCharDebug:

00000000 <setCharDebug>:
   0:	90 91 c0 00 	lds	r25, 0x00C0
   4:	95 ff       	sbrs	r25, 5
   6:	00 c0       	rjmp	.+0      	; 0x8 <setCharDebug+0x8>
   8:	80 93 c6 00 	sts	0x00C6, r24
   c:	08 95       	ret

Disassembly of section .text.coPrintf:

00000000 <coPrintf>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	89 91       	ld	r24, Y+
   8:	88 23       	and	r24, r24
   a:	01 f0       	breq	.+0      	; 0xc <coPrintf+0xc>
   c:	0e 94 00 00 	call	0	; 0x0 <coPrintf>
  10:	00 c0       	rjmp	.+0      	; 0x12 <coPrintf+0x12>
  12:	df 91       	pop	r29
  14:	cf 91       	pop	r28
  16:	08 95       	ret

Disassembly of section .text.setServo:

00000000 <setServo>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	64 97       	sbiw	r28, 0x14	; 20
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	7f 93       	push	r23
  1a:	6f 93       	push	r22
  1c:	9f 93       	push	r25
  1e:	8f 93       	push	r24
  20:	80 e0       	ldi	r24, 0x00	; 0
  22:	90 e0       	ldi	r25, 0x00	; 0
  24:	9f 93       	push	r25
  26:	8f 93       	push	r24
  28:	8e 01       	movw	r16, r28
  2a:	0f 5f       	subi	r16, 0xFF	; 255
  2c:	1f 4f       	sbci	r17, 0xFF	; 255
  2e:	1f 93       	push	r17
  30:	0f 93       	push	r16
  32:	0e 94 00 00 	call	0	; 0x0 <setServo>
  36:	c8 01       	movw	r24, r16
  38:	0e 94 00 00 	call	0	; 0x0 <setServo>
  3c:	0f b6       	in	r0, 0x3f	; 63
  3e:	f8 94       	cli
  40:	de bf       	out	0x3e, r29	; 62
  42:	0f be       	out	0x3f, r0	; 63
  44:	cd bf       	out	0x3d, r28	; 61
  46:	64 96       	adiw	r28, 0x14	; 20
  48:	0f b6       	in	r0, 0x3f	; 63
  4a:	f8 94       	cli
  4c:	de bf       	out	0x3e, r29	; 62
  4e:	0f be       	out	0x3f, r0	; 63
  50:	cd bf       	out	0x3d, r28	; 61
  52:	df 91       	pop	r29
  54:	cf 91       	pop	r28
  56:	1f 91       	pop	r17
  58:	0f 91       	pop	r16
  5a:	08 95       	ret

ADC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initADC 00000034  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.clearADC 00000014  00000000  00000000  00000068  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.getADC  0000003a  00000000  00000000  0000007c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.changeADC 00000012  00000000  00000000  000000b6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .comment      00000012  00000000  00000000  000000c8  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initADC:

00000000 <initADC>:
   0:	f8 94       	cli
   2:	91 b1       	in	r25, 0x01	; 1
   4:	21 e0       	ldi	r18, 0x01	; 1
   6:	30 e0       	ldi	r19, 0x00	; 0
   8:	08 2e       	mov	r0, r24
   a:	00 c0       	rjmp	.+0      	; 0xc <initADC+0xc>
   c:	22 0f       	add	r18, r18
   e:	0a 94       	dec	r0
  10:	02 f4       	brpl	.+0      	; 0x12 <initADC+0x12>
  12:	20 95       	com	r18
  14:	29 23       	and	r18, r25
  16:	21 b9       	out	0x01, r18	; 1
  18:	ea e7       	ldi	r30, 0x7A	; 122
  1a:	f0 e0       	ldi	r31, 0x00	; 0
  1c:	90 81       	ld	r25, Z
  1e:	97 68       	ori	r25, 0x87	; 135
  20:	90 83       	st	Z, r25
  22:	80 64       	ori	r24, 0x40	; 64
  24:	80 93 7c 00 	sts	0x007C, r24
  28:	ee e7       	ldi	r30, 0x7E	; 126
  2a:	f0 e0       	ldi	r31, 0x00	; 0
  2c:	80 81       	ld	r24, Z
  2e:	80 83       	st	Z, r24
  30:	78 94       	sei
  32:	08 95       	ret

Disassembly of section .text.clearADC:

00000000 <clearADC>:
   0:	ea e7       	ldi	r30, 0x7A	; 122
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	80 81       	ld	r24, Z
   6:	8f 77       	andi	r24, 0x7F	; 127
   8:	80 83       	st	Z, r24
   a:	10 92 79 00 	sts	0x0079, r1
   e:	10 92 78 00 	sts	0x0078, r1
  12:	08 95       	ret

Disassembly of section .text.getADC:

00000000 <getADC>:
   0:	90 91 7a 00 	lds	r25, 0x007A
   4:	9f 7d       	andi	r25, 0xDF	; 223
   6:	90 93 7a 00 	sts	0x007A, r25
   a:	90 91 7c 00 	lds	r25, 0x007C
   e:	90 7e       	andi	r25, 0xE0	; 224
  10:	90 93 7c 00 	sts	0x007C, r25
  14:	90 91 7c 00 	lds	r25, 0x007C
  18:	89 2b       	or	r24, r25
  1a:	80 93 7c 00 	sts	0x007C, r24
  1e:	80 91 7a 00 	lds	r24, 0x007A
  22:	80 64       	ori	r24, 0x40	; 64
  24:	80 93 7a 00 	sts	0x007A, r24
  28:	80 91 7a 00 	lds	r24, 0x007A
  2c:	86 fd       	sbrc	r24, 6
  2e:	00 c0       	rjmp	.+0      	; 0x30 <getADC+0x30>
  30:	80 91 78 00 	lds	r24, 0x0078
  34:	90 91 79 00 	lds	r25, 0x0079
  38:	08 95       	ret

Disassembly of section .text.changeADC:

00000000 <changeADC>:
   0:	ec e7       	ldi	r30, 0x7C	; 124
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	90 81       	ld	r25, Z
   6:	90 7e       	andi	r25, 0xE0	; 224
   8:	90 83       	st	Z, r25
   a:	90 81       	ld	r25, Z
   c:	89 2b       	or	r24, r25
   e:	80 83       	st	Z, r24
  10:	08 95       	ret

DAC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setDAC  000000aa  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .comment      00000012  00000000  00000000  000000de  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setDAC:

00000000 <setDAC>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	90 91 2a 00 	lds	r25, 0x002A
  14:	90 61       	ori	r25, 0x10	; 16
  16:	90 93 2a 00 	sts	0x002A, r25
  1a:	90 91 2b 00 	lds	r25, 0x002B
  1e:	90 61       	ori	r25, 0x10	; 16
  20:	90 93 2b 00 	sts	0x002B, r25
  24:	9b 01       	movw	r18, r22
  26:	61 15       	cp	r22, r1
  28:	70 41       	sbci	r23, 0x10	; 16
  2a:	04 f0       	brlt	.+0      	; 0x2c <setDAC+0x2c>
  2c:	2f ef       	ldi	r18, 0xFF	; 255
  2e:	3f e0       	ldi	r19, 0x0F	; 15
  30:	49 01       	movw	r8, r18
  32:	03 2e       	mov	r0, r19
  34:	00 0c       	add	r0, r0
  36:	aa 08       	sbc	r10, r10
  38:	bb 08       	sbc	r11, r11
  3a:	69 01       	movw	r12, r18
  3c:	9f e0       	ldi	r25, 0x0F	; 15
  3e:	c9 22       	and	r12, r25
  40:	dd 24       	eor	r13, r13
  42:	0d 2c       	mov	r0, r13
  44:	00 0c       	add	r0, r0
  46:	ee 08       	sbc	r14, r14
  48:	ff 08       	sbc	r15, r15
  4a:	90 91 2b 00 	lds	r25, 0x002B
  4e:	9f 7e       	andi	r25, 0xEF	; 239
  50:	90 93 2b 00 	sts	0x002B, r25
  54:	80 63       	ori	r24, 0x30	; 48
  56:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  5a:	d5 01       	movw	r26, r10
  5c:	c4 01       	movw	r24, r8
  5e:	24 e0       	ldi	r18, 0x04	; 4
  60:	b6 95       	lsr	r27
  62:	a7 95       	ror	r26
  64:	97 95       	ror	r25
  66:	87 95       	ror	r24
  68:	2a 95       	dec	r18
  6a:	01 f4       	brne	.+0      	; 0x6c <setDAC+0x6c>
  6c:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  70:	8c 2d       	mov	r24, r12
  72:	82 95       	swap	r24
  74:	80 7f       	andi	r24, 0xF0	; 240
  76:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  7a:	80 91 2b 00 	lds	r24, 0x002B
  7e:	80 61       	ori	r24, 0x10	; 16
  80:	80 93 2b 00 	sts	0x002B, r24
  84:	80 91 2b 00 	lds	r24, 0x002B
  88:	8f 7e       	andi	r24, 0xEF	; 239
  8a:	80 93 2b 00 	sts	0x002B, r24
  8e:	80 91 2b 00 	lds	r24, 0x002B
  92:	80 61       	ori	r24, 0x10	; 16
  94:	80 93 2b 00 	sts	0x002B, r24
  98:	ff 90       	pop	r15
  9a:	ef 90       	pop	r14
  9c:	df 90       	pop	r13
  9e:	cf 90       	pop	r12
  a0:	bf 90       	pop	r11
  a2:	af 90       	pop	r10
  a4:	9f 90       	pop	r9
  a6:	8f 90       	pop	r8
  a8:	08 95       	ret

Debug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.printfRBE 0000000a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.initRBELib 00000018  00000000  00000000  0000003e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .data.RBEOut  0000000e  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  6 .comment      00000012  00000000  00000000  00000064  2**0
                  CONTENTS, READONLY

Disassembly of section .text.printfRBE:

00000000 <printfRBE>:
   0:	0e 94 00 00 	call	0	; 0x0 <printfRBE>
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text.initRBELib:

00000000 <initRBELib>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	90 93 00 00 	sts	0x0000, r25
   8:	80 93 00 00 	sts	0x0000, r24
   c:	60 e0       	ldi	r22, 0x00	; 0
   e:	72 ec       	ldi	r23, 0xC2	; 194
  10:	81 e0       	ldi	r24, 0x01	; 1
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	0c 94 00 00 	jmp	0	; 0x0 <initRBELib>

PID.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setConst 00000084  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .rodata.str1.1 0000001f  00000000  00000000  000000b8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .text.calcPID 000002c6  00000000  00000000  000000d7  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  0000039d  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setConst:

00000000 <setConst>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	88 34       	cpi	r24, 0x48	; 72
   e:	01 f4       	brne	.+0      	; 0x10 <setConst+0x10>
  10:	40 93 00 00 	sts	0x0000, r20
  14:	50 93 00 00 	sts	0x0000, r21
  18:	60 93 00 00 	sts	0x0000, r22
  1c:	70 93 00 00 	sts	0x0000, r23
  20:	00 93 00 00 	sts	0x0000, r16
  24:	10 93 00 00 	sts	0x0000, r17
  28:	20 93 00 00 	sts	0x0000, r18
  2c:	30 93 00 00 	sts	0x0000, r19
  30:	c0 92 00 00 	sts	0x0000, r12
  34:	d0 92 00 00 	sts	0x0000, r13
  38:	e0 92 00 00 	sts	0x0000, r14
  3c:	f0 92 00 00 	sts	0x0000, r15
  40:	00 c0       	rjmp	.+0      	; 0x42 <setConst+0x42>
  42:	8c 34       	cpi	r24, 0x4C	; 76
  44:	01 f4       	brne	.+0      	; 0x46 <setConst+0x46>
  46:	40 93 00 00 	sts	0x0000, r20
  4a:	50 93 00 00 	sts	0x0000, r21
  4e:	60 93 00 00 	sts	0x0000, r22
  52:	70 93 00 00 	sts	0x0000, r23
  56:	00 93 00 00 	sts	0x0000, r16
  5a:	10 93 00 00 	sts	0x0000, r17
  5e:	20 93 00 00 	sts	0x0000, r18
  62:	30 93 00 00 	sts	0x0000, r19
  66:	c0 92 00 00 	sts	0x0000, r12
  6a:	d0 92 00 00 	sts	0x0000, r13
  6e:	e0 92 00 00 	sts	0x0000, r14
  72:	f0 92 00 00 	sts	0x0000, r15
  76:	1f 91       	pop	r17
  78:	0f 91       	pop	r16
  7a:	ff 90       	pop	r15
  7c:	ef 90       	pop	r14
  7e:	df 90       	pop	r13
  80:	cf 90       	pop	r12
  82:	08 95       	ret

Disassembly of section .text.calcPID:

00000000 <calcPID>:
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	cf 93       	push	r28
  1a:	df 93       	push	r29
  1c:	eb 01       	movw	r28, r22
  1e:	c4 1b       	sub	r28, r20
  20:	d5 0b       	sbc	r29, r21
  22:	88 34       	cpi	r24, 0x48	; 72
  24:	01 f0       	breq	.+0      	; 0x26 <calcPID+0x26>
  26:	00 c0       	rjmp	.+0      	; 0x28 <calcPID+0x28>
  28:	e0 e0       	ldi	r30, 0x00	; 0
  2a:	f0 e0       	ldi	r31, 0x00	; 0
  2c:	a1 2c       	mov	r10, r1
  2e:	b1 2c       	mov	r11, r1
  30:	80 81       	ld	r24, Z
  32:	91 81       	ldd	r25, Z+1	; 0x01
  34:	a8 0e       	add	r10, r24
  36:	b9 1e       	adc	r11, r25
  38:	92 93       	st	-Z, r25
  3a:	82 93       	st	-Z, r24
  3c:	20 e0       	ldi	r18, 0x00	; 0
  3e:	e0 30       	cpi	r30, 0x00	; 0
  40:	f2 07       	cpc	r31, r18
  42:	01 f4       	brne	.+0      	; 0x44 <calcPID+0x44>
  44:	d0 93 00 00 	sts	0x0000, r29
  48:	c0 93 00 00 	sts	0x0000, r28
  4c:	be 01       	movw	r22, r28
  4e:	0d 2e       	mov	r0, r29
  50:	00 0c       	add	r0, r0
  52:	88 0b       	sbc	r24, r24
  54:	99 0b       	sbc	r25, r25
  56:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  5a:	20 91 00 00 	lds	r18, 0x0000
  5e:	30 91 00 00 	lds	r19, 0x0000
  62:	40 91 00 00 	lds	r20, 0x0000
  66:	50 91 00 00 	lds	r21, 0x0000
  6a:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  6e:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  72:	6b 01       	movw	r12, r22
  74:	7c 01       	movw	r14, r24
  76:	a5 01       	movw	r20, r10
  78:	4c 0f       	add	r20, r28
  7a:	5d 1f       	adc	r21, r29
  7c:	ba 01       	movw	r22, r20
  7e:	55 0f       	add	r21, r21
  80:	88 0b       	sbc	r24, r24
  82:	99 0b       	sbc	r25, r25
  84:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  88:	20 91 00 00 	lds	r18, 0x0000
  8c:	30 91 00 00 	lds	r19, 0x0000
  90:	40 91 00 00 	lds	r20, 0x0000
  94:	50 91 00 00 	lds	r21, 0x0000
  98:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  9c:	20 e0       	ldi	r18, 0x00	; 0
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	48 ec       	ldi	r20, 0xC8	; 200
  a2:	52 e4       	ldi	r21, 0x42	; 66
  a4:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  a8:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  ac:	2b 01       	movw	r4, r22
  ae:	3c 01       	movw	r6, r24
  b0:	80 91 00 00 	lds	r24, 0x0000
  b4:	90 91 00 00 	lds	r25, 0x0000
  b8:	c8 1b       	sub	r28, r24
  ba:	d9 0b       	sbc	r29, r25
  bc:	be 01       	movw	r22, r28
  be:	dd 0f       	add	r29, r29
  c0:	88 0b       	sbc	r24, r24
  c2:	99 0b       	sbc	r25, r25
  c4:	0e 94 00 00 	call	0	; 0x0 <calcPID>
  c8:	20 91 00 00 	lds	r18, 0x0000
  cc:	30 91 00 00 	lds	r19, 0x0000
  d0:	40 91 00 00 	lds	r20, 0x0000
  d4:	50 91 00 00 	lds	r21, 0x0000
  d8:	00 c0       	rjmp	.+0      	; 0xda <calcPID+0xda>
  da:	e0 e0       	ldi	r30, 0x00	; 0
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	a1 2c       	mov	r10, r1
  e0:	b1 2c       	mov	r11, r1
  e2:	80 81       	ld	r24, Z
  e4:	91 81       	ldd	r25, Z+1	; 0x01
  e6:	a8 0e       	add	r10, r24
  e8:	b9 1e       	adc	r11, r25
  ea:	92 91       	ld	r25, -Z
  ec:	82 91       	ld	r24, -Z
  ee:	93 83       	std	Z+3, r25	; 0x03
  f0:	82 83       	std	Z+2, r24	; 0x02
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	e0 30       	cpi	r30, 0x00	; 0
  f6:	f8 07       	cpc	r31, r24
  f8:	01 f4       	brne	.+0      	; 0xfa <calcPID+0xfa>
  fa:	d0 93 00 00 	sts	0x0000, r29
  fe:	c0 93 00 00 	sts	0x0000, r28
 102:	be 01       	movw	r22, r28
 104:	0d 2e       	mov	r0, r29
 106:	00 0c       	add	r0, r0
 108:	88 0b       	sbc	r24, r24
 10a:	99 0b       	sbc	r25, r25
 10c:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 110:	20 91 00 00 	lds	r18, 0x0000
 114:	30 91 00 00 	lds	r19, 0x0000
 118:	40 91 00 00 	lds	r20, 0x0000
 11c:	50 91 00 00 	lds	r21, 0x0000
 120:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 124:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 128:	6b 01       	movw	r12, r22
 12a:	7c 01       	movw	r14, r24
 12c:	b5 01       	movw	r22, r10
 12e:	6c 0f       	add	r22, r28
 130:	7d 1f       	adc	r23, r29
 132:	07 2e       	mov	r0, r23
 134:	00 0c       	add	r0, r0
 136:	88 0b       	sbc	r24, r24
 138:	99 0b       	sbc	r25, r25
 13a:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 13e:	20 91 00 00 	lds	r18, 0x0000
 142:	30 91 00 00 	lds	r19, 0x0000
 146:	40 91 00 00 	lds	r20, 0x0000
 14a:	50 91 00 00 	lds	r21, 0x0000
 14e:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	48 ec       	ldi	r20, 0xC8	; 200
 158:	52 e4       	ldi	r21, 0x42	; 66
 15a:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 15e:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 162:	2b 01       	movw	r4, r22
 164:	3c 01       	movw	r6, r24
 166:	80 91 00 00 	lds	r24, 0x0000
 16a:	90 91 00 00 	lds	r25, 0x0000
 16e:	c8 1b       	sub	r28, r24
 170:	d9 0b       	sbc	r29, r25
 172:	be 01       	movw	r22, r28
 174:	dd 0f       	add	r29, r29
 176:	88 0b       	sbc	r24, r24
 178:	99 0b       	sbc	r25, r25
 17a:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 17e:	20 91 00 00 	lds	r18, 0x0000
 182:	30 91 00 00 	lds	r19, 0x0000
 186:	40 91 00 00 	lds	r20, 0x0000
 18a:	50 91 00 00 	lds	r21, 0x0000
 18e:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 192:	20 e0       	ldi	r18, 0x00	; 0
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	48 ec       	ldi	r20, 0xC8	; 200
 198:	52 e4       	ldi	r21, 0x42	; 66
 19a:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 19e:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 1a2:	c1 14       	cp	r12, r1
 1a4:	20 e1       	ldi	r18, 0x10	; 16
 1a6:	d2 06       	cpc	r13, r18
 1a8:	e1 04       	cpc	r14, r1
 1aa:	f1 04       	cpc	r15, r1
 1ac:	04 f4       	brge	.+0      	; 0x1ae <calcPID+0x1ae>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <calcPID+0x1b0>
 1b0:	8c 34       	cpi	r24, 0x4C	; 76
 1b2:	01 f4       	brne	.+0      	; 0x1b4 <calcPID+0x1b4>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <calcPID+0x1b6>
 1b6:	60 e0       	ldi	r22, 0x00	; 0
 1b8:	70 e0       	ldi	r23, 0x00	; 0
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	41 2c       	mov	r4, r1
 1c0:	51 2c       	mov	r5, r1
 1c2:	61 2c       	mov	r6, r1
 1c4:	71 2c       	mov	r7, r1
 1c6:	c1 2c       	mov	r12, r1
 1c8:	d1 2c       	mov	r13, r1
 1ca:	76 01       	movw	r14, r12
 1cc:	21 e0       	ldi	r18, 0x01	; 1
 1ce:	c2 16       	cp	r12, r18
 1d0:	20 ef       	ldi	r18, 0xF0	; 240
 1d2:	d2 06       	cpc	r13, r18
 1d4:	2f ef       	ldi	r18, 0xFF	; 255
 1d6:	e2 06       	cpc	r14, r18
 1d8:	f2 06       	cpc	r15, r18
 1da:	04 f4       	brge	.+0      	; 0x1dc <calcPID+0x1dc>
 1dc:	cc 24       	eor	r12, r12
 1de:	c3 94       	inc	r12
 1e0:	50 ef       	ldi	r21, 0xF0	; 240
 1e2:	d5 2e       	mov	r13, r21
 1e4:	ee 24       	eor	r14, r14
 1e6:	ea 94       	dec	r14
 1e8:	fe 2c       	mov	r15, r14
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <calcPID+0x1ec>
 1ec:	cc 24       	eor	r12, r12
 1ee:	ca 94       	dec	r12
 1f0:	4f e0       	ldi	r20, 0x0F	; 15
 1f2:	d4 2e       	mov	r13, r20
 1f4:	e1 2c       	mov	r14, r1
 1f6:	f1 2c       	mov	r15, r1
 1f8:	42 01       	movw	r8, r4
 1fa:	53 01       	movw	r10, r6
 1fc:	21 e0       	ldi	r18, 0x01	; 1
 1fe:	82 16       	cp	r8, r18
 200:	20 ef       	ldi	r18, 0xF0	; 240
 202:	92 06       	cpc	r9, r18
 204:	2f ef       	ldi	r18, 0xFF	; 255
 206:	a2 06       	cpc	r10, r18
 208:	b2 06       	cpc	r11, r18
 20a:	04 f4       	brge	.+0      	; 0x20c <calcPID+0x20c>
 20c:	88 24       	eor	r8, r8
 20e:	83 94       	inc	r8
 210:	30 ef       	ldi	r19, 0xF0	; 240
 212:	93 2e       	mov	r9, r19
 214:	aa 24       	eor	r10, r10
 216:	aa 94       	dec	r10
 218:	ba 2c       	mov	r11, r10
 21a:	81 14       	cp	r8, r1
 21c:	20 e1       	ldi	r18, 0x10	; 16
 21e:	92 06       	cpc	r9, r18
 220:	a1 04       	cpc	r10, r1
 222:	b1 04       	cpc	r11, r1
 224:	04 f0       	brlt	.+0      	; 0x226 <calcPID+0x226>
 226:	88 24       	eor	r8, r8
 228:	8a 94       	dec	r8
 22a:	2f e0       	ldi	r18, 0x0F	; 15
 22c:	92 2e       	mov	r9, r18
 22e:	a1 2c       	mov	r10, r1
 230:	b1 2c       	mov	r11, r1
 232:	2b 01       	movw	r4, r22
 234:	3c 01       	movw	r6, r24
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	48 16       	cp	r4, r24
 23a:	80 ef       	ldi	r24, 0xF0	; 240
 23c:	58 06       	cpc	r5, r24
 23e:	8f ef       	ldi	r24, 0xFF	; 255
 240:	68 06       	cpc	r6, r24
 242:	78 06       	cpc	r7, r24
 244:	04 f4       	brge	.+0      	; 0x246 <calcPID+0x246>
 246:	44 24       	eor	r4, r4
 248:	43 94       	inc	r4
 24a:	90 ef       	ldi	r25, 0xF0	; 240
 24c:	59 2e       	mov	r5, r25
 24e:	66 24       	eor	r6, r6
 250:	6a 94       	dec	r6
 252:	76 2c       	mov	r7, r6
 254:	1f 92       	push	r1
 256:	84 e6       	ldi	r24, 0x64	; 100
 258:	8f 93       	push	r24
 25a:	bf 92       	push	r11
 25c:	af 92       	push	r10
 25e:	9f 92       	push	r9
 260:	8f 92       	push	r8
 262:	ff 92       	push	r15
 264:	ef 92       	push	r14
 266:	df 92       	push	r13
 268:	cf 92       	push	r12
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	9f 93       	push	r25
 270:	8f 93       	push	r24
 272:	0e 94 00 00 	call	0	; 0x0 <calcPID>
 276:	8d b7       	in	r24, 0x3d	; 61
 278:	9e b7       	in	r25, 0x3e	; 62
 27a:	0c 96       	adiw	r24, 0x0c	; 12
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	f8 94       	cli
 280:	9e bf       	out	0x3e, r25	; 62
 282:	0f be       	out	0x3f, r0	; 63
 284:	8d bf       	out	0x3d, r24	; 61
 286:	41 14       	cp	r4, r1
 288:	90 e1       	ldi	r25, 0x10	; 16
 28a:	59 06       	cpc	r5, r25
 28c:	61 04       	cpc	r6, r1
 28e:	71 04       	cpc	r7, r1
 290:	04 f0       	brlt	.+0      	; 0x292 <calcPID+0x292>
 292:	44 24       	eor	r4, r4
 294:	4a 94       	dec	r4
 296:	8f e0       	ldi	r24, 0x0F	; 15
 298:	58 2e       	mov	r5, r24
 29a:	61 2c       	mov	r6, r1
 29c:	71 2c       	mov	r7, r1
 29e:	48 0c       	add	r4, r8
 2a0:	59 1c       	adc	r5, r9
 2a2:	c2 01       	movw	r24, r4
 2a4:	8c 0d       	add	r24, r12
 2a6:	9d 1d       	adc	r25, r13
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	ff 90       	pop	r15
 2ae:	ef 90       	pop	r14
 2b0:	df 90       	pop	r13
 2b2:	cf 90       	pop	r12
 2b4:	bf 90       	pop	r11
 2b6:	af 90       	pop	r10
 2b8:	9f 90       	pop	r9
 2ba:	8f 90       	pop	r8
 2bc:	7f 90       	pop	r7
 2be:	6f 90       	pop	r6
 2c0:	5f 90       	pop	r5
 2c2:	4f 90       	pop	r4
 2c4:	08 95       	ret

SPI.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initSPI 0000001c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.spiTransceive 0000000c  00000000  00000000  00000050  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  0000005c  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initSPI:

00000000 <initSPI>:
   0:	10 92 64 00 	sts	0x0064, r1
   4:	84 b1       	in	r24, 0x04	; 4
   6:	80 6b       	ori	r24, 0xB0	; 176
   8:	84 b9       	out	0x04, r24	; 4
   a:	2c 9a       	sbi	0x05, 4	; 5
   c:	26 98       	cbi	0x04, 6	; 4
   e:	8c b5       	in	r24, 0x2c	; 44
  10:	83 65       	ori	r24, 0x53	; 83
  12:	8c bd       	out	0x2c, r24	; 44
  14:	8d b5       	in	r24, 0x2d	; 45
  16:	8e 7f       	andi	r24, 0xFE	; 254
  18:	8d bd       	out	0x2d, r24	; 45
  1a:	08 95       	ret

Disassembly of section .text.spiTransceive:

00000000 <spiTransceive>:
   0:	8e bd       	out	0x2e, r24	; 46
   2:	0d b4       	in	r0, 0x2d	; 45
   4:	07 fe       	sbrs	r0, 7
   6:	00 c0       	rjmp	.+0      	; 0x8 <spiTransceive+0x8>
   8:	8e b5       	in	r24, 0x2e	; 46
   a:	08 95       	ret

USARTDebug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.debugUSARTInit 0000003c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.putCharDebug 0000000e  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.getCharDebug 0000000e  00000000  00000000  0000007e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  0000008c  2**0
                  CONTENTS, READONLY

Disassembly of section .text.debugUSARTInit:

00000000 <debugUSARTInit>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <debugUSARTInit+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <debugUSARTInit>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	31 09       	sbc	r19, r1
  22:	83 2f       	mov	r24, r19
  24:	8f 70       	andi	r24, 0x0F	; 15
  26:	80 93 cd 00 	sts	0x00CD, r24
  2a:	20 93 cc 00 	sts	0x00CC, r18
  2e:	88 e1       	ldi	r24, 0x18	; 24
  30:	80 93 c9 00 	sts	0x00C9, r24
  34:	86 e0       	ldi	r24, 0x06	; 6
  36:	80 93 ca 00 	sts	0x00CA, r24
  3a:	08 95       	ret

Disassembly of section .text.putCharDebug:

00000000 <putCharDebug>:
   0:	90 91 c8 00 	lds	r25, 0x00C8
   4:	95 ff       	sbrs	r25, 5
   6:	00 c0       	rjmp	.+0      	; 0x8 <putCharDebug+0x8>
   8:	80 93 ce 00 	sts	0x00CE, r24
   c:	08 95       	ret

Disassembly of section .text.getCharDebug:

00000000 <getCharDebug>:
   0:	80 91 c8 00 	lds	r24, 0x00C8
   4:	87 ff       	sbrs	r24, 7
   6:	00 c0       	rjmp	.+0      	; 0x8 <getCharDebug+0x8>
   8:	80 91 ce 00 	lds	r24, 0x00CE
   c:	08 95       	ret

motors.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.stopMotors 00000002  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.gotoAngles 00000002  00000000  00000000  00000036  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.gotoXY  00000002  00000000  00000000  00000038  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.driveLink 00000058  00000000  00000000  0000003a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.homePos 00000002  00000000  00000000  00000092  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .comment      00000012  00000000  00000000  00000094  2**0
                  CONTENTS, READONLY

Disassembly of section .text.stopMotors:

00000000 <stopMotors>:
   0:	08 95       	ret

Disassembly of section .text.gotoAngles:

00000000 <gotoAngles>:
   0:	08 95       	ret

Disassembly of section .text.gotoXY:

00000000 <gotoXY>:
   0:	08 95       	ret

Disassembly of section .text.driveLink:

00000000 <driveLink>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	01 97       	sbiw	r24, 0x01	; 1
   6:	01 f4       	brne	.+0      	; 0x8 <driveLink+0x8>
   8:	eb 01       	movw	r28, r22
   a:	77 fd       	sbrc	r23, 7
   c:	00 c0       	rjmp	.+0      	; 0xe <driveLink+0xe>
   e:	60 e0       	ldi	r22, 0x00	; 0
  10:	70 e0       	ldi	r23, 0x00	; 0
  12:	80 e0       	ldi	r24, 0x00	; 0
  14:	90 e0       	ldi	r25, 0x00	; 0
  16:	0e 94 00 00 	call	0	; 0x0 <driveLink>
  1a:	be 01       	movw	r22, r28
  1c:	c1 15       	cp	r28, r1
  1e:	d0 41       	sbci	r29, 0x10	; 16
  20:	04 f0       	brlt	.+0      	; 0x22 <driveLink+0x22>
  22:	6f ef       	ldi	r22, 0xFF	; 255
  24:	7f e0       	ldi	r23, 0x0F	; 15
  26:	00 c0       	rjmp	.+0      	; 0x28 <driveLink+0x28>
  28:	61 30       	cpi	r22, 0x01	; 1
  2a:	70 4f       	sbci	r23, 0xF0	; 240
  2c:	04 f4       	brge	.+0      	; 0x2e <driveLink+0x2e>
  2e:	c1 e0       	ldi	r28, 0x01	; 1
  30:	d0 ef       	ldi	r29, 0xF0	; 240
  32:	66 27       	eor	r22, r22
  34:	77 27       	eor	r23, r23
  36:	6c 1b       	sub	r22, r28
  38:	7d 0b       	sbc	r23, r29
  3a:	80 e0       	ldi	r24, 0x00	; 0
  3c:	90 e0       	ldi	r25, 0x00	; 0
  3e:	0e 94 00 00 	call	0	; 0x0 <driveLink>
  42:	60 e0       	ldi	r22, 0x00	; 0
  44:	70 e0       	ldi	r23, 0x00	; 0
  46:	81 e0       	ldi	r24, 0x01	; 1
  48:	90 e0       	ldi	r25, 0x00	; 0
  4a:	df 91       	pop	r29
  4c:	cf 91       	pop	r28
  4e:	0c 94 00 00 	jmp	0	; 0x0 <driveLink>
  52:	df 91       	pop	r29
  54:	cf 91       	pop	r28
  56:	08 95       	ret

Disassembly of section .text.homePos:

00000000 <homePos>:
   0:	08 95       	ret

ports.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setPinsDir 000000b0  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.getPinsVal 0000005e  00000000  00000000  000000e4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.setPinsVal 000000b0  00000000  00000000  00000142  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  000001f2  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setPinsDir:

00000000 <setPinsDir>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	99 85       	ldd	r25, Y+9	; 0x09
  12:	2a 85       	ldd	r18, Y+10	; 0x0a
  14:	3b 85       	ldd	r19, Y+11	; 0x0b
  16:	fe 01       	movw	r30, r28
  18:	3d 96       	adiw	r30, 0x0d	; 13
  1a:	60 e0       	ldi	r22, 0x00	; 0
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	80 e0       	ldi	r24, 0x00	; 0
  20:	4c 85       	ldd	r20, Y+12	; 0x0c
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	a1 e0       	ldi	r26, 0x01	; 1
  26:	b0 e0       	ldi	r27, 0x00	; 0
  28:	64 17       	cp	r22, r20
  2a:	75 07       	cpc	r23, r21
  2c:	04 f4       	brge	.+0      	; 0x2e <setPinsDir+0x2e>
  2e:	10 81       	ld	r17, Z
  30:	32 96       	adiw	r30, 0x02	; 2
  32:	7d 01       	movw	r14, r26
  34:	00 c0       	rjmp	.+0      	; 0x36 <setPinsDir+0x36>
  36:	ee 0c       	add	r14, r14
  38:	ff 1c       	adc	r15, r15
  3a:	1a 95       	dec	r17
  3c:	02 f4       	brpl	.+0      	; 0x3e <setPinsDir+0x3e>
  3e:	8e 29       	or	r24, r14
  40:	6f 5f       	subi	r22, 0xFF	; 255
  42:	7f 4f       	sbci	r23, 0xFF	; 255
  44:	00 c0       	rjmp	.+0      	; 0x46 <setPinsDir+0x46>
  46:	92 34       	cpi	r25, 0x42	; 66
  48:	01 f0       	breq	.+0      	; 0x4a <setPinsDir+0x4a>
  4a:	00 f4       	brcc	.+0      	; 0x4c <setPinsDir+0x4c>
  4c:	91 34       	cpi	r25, 0x41	; 65
  4e:	01 f0       	breq	.+0      	; 0x50 <setPinsDir+0x50>
  50:	00 c0       	rjmp	.+0      	; 0x52 <setPinsDir+0x52>
  52:	93 34       	cpi	r25, 0x43	; 67
  54:	01 f0       	breq	.+0      	; 0x56 <setPinsDir+0x56>
  56:	94 34       	cpi	r25, 0x44	; 68
  58:	01 f0       	breq	.+0      	; 0x5a <setPinsDir+0x5a>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <setPinsDir+0x5c>
  5c:	91 b1       	in	r25, 0x01	; 1
  5e:	23 2b       	or	r18, r19
  60:	01 f0       	breq	.+0      	; 0x62 <setPinsDir+0x62>
  62:	89 2b       	or	r24, r25
  64:	00 c0       	rjmp	.+0      	; 0x66 <setPinsDir+0x66>
  66:	80 95       	com	r24
  68:	89 23       	and	r24, r25
  6a:	81 b9       	out	0x01, r24	; 1
  6c:	00 c0       	rjmp	.+0      	; 0x6e <setPinsDir+0x6e>
  6e:	94 b1       	in	r25, 0x04	; 4
  70:	23 2b       	or	r18, r19
  72:	01 f0       	breq	.+0      	; 0x74 <setPinsDir+0x74>
  74:	89 2b       	or	r24, r25
  76:	00 c0       	rjmp	.+0      	; 0x78 <setPinsDir+0x78>
  78:	80 95       	com	r24
  7a:	89 23       	and	r24, r25
  7c:	84 b9       	out	0x04, r24	; 4
  7e:	00 c0       	rjmp	.+0      	; 0x80 <setPinsDir+0x80>
  80:	97 b1       	in	r25, 0x07	; 7
  82:	23 2b       	or	r18, r19
  84:	01 f0       	breq	.+0      	; 0x86 <setPinsDir+0x86>
  86:	89 2b       	or	r24, r25
  88:	00 c0       	rjmp	.+0      	; 0x8a <setPinsDir+0x8a>
  8a:	80 95       	com	r24
  8c:	89 23       	and	r24, r25
  8e:	87 b9       	out	0x07, r24	; 7
  90:	00 c0       	rjmp	.+0      	; 0x92 <setPinsDir+0x92>
  92:	9a b1       	in	r25, 0x0a	; 10
  94:	23 2b       	or	r18, r19
  96:	01 f0       	breq	.+0      	; 0x98 <setPinsDir+0x98>
  98:	89 2b       	or	r24, r25
  9a:	00 c0       	rjmp	.+0      	; 0x9c <setPinsDir+0x9c>
  9c:	80 95       	com	r24
  9e:	89 23       	and	r24, r25
  a0:	8a b9       	out	0x0a, r24	; 10
  a2:	df 91       	pop	r29
  a4:	cf 91       	pop	r28
  a6:	1f 91       	pop	r17
  a8:	0f 91       	pop	r16
  aa:	ff 90       	pop	r15
  ac:	ef 90       	pop	r14
  ae:	08 95       	ret

Disassembly of section .text.getPinsVal:

00000000 <getPinsVal>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	8d 81       	ldd	r24, Y+5	; 0x05
   a:	3e 81       	ldd	r19, Y+6	; 0x06
   c:	fe 01       	movw	r30, r28
   e:	37 96       	adiw	r30, 0x07	; 7
  10:	20 e0       	ldi	r18, 0x00	; 0
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	41 e0       	ldi	r20, 0x01	; 1
  16:	50 e0       	ldi	r21, 0x00	; 0
  18:	23 17       	cp	r18, r19
  1a:	01 f0       	breq	.+0      	; 0x1c <getPinsVal+0x1c>
  1c:	60 81       	ld	r22, Z
  1e:	32 96       	adiw	r30, 0x02	; 2
  20:	da 01       	movw	r26, r20
  22:	00 c0       	rjmp	.+0      	; 0x24 <getPinsVal+0x24>
  24:	aa 0f       	add	r26, r26
  26:	bb 1f       	adc	r27, r27
  28:	6a 95       	dec	r22
  2a:	02 f4       	brpl	.+0      	; 0x2c <getPinsVal+0x2c>
  2c:	9a 2b       	or	r25, r26
  2e:	2f 5f       	subi	r18, 0xFF	; 255
  30:	00 c0       	rjmp	.+0      	; 0x32 <getPinsVal+0x32>
  32:	82 34       	cpi	r24, 0x42	; 66
  34:	01 f0       	breq	.+0      	; 0x36 <getPinsVal+0x36>
  36:	00 f4       	brcc	.+0      	; 0x38 <getPinsVal+0x38>
  38:	81 34       	cpi	r24, 0x41	; 65
  3a:	01 f4       	brne	.+0      	; 0x3c <getPinsVal+0x3c>
  3c:	80 b1       	in	r24, 0x00	; 0
  3e:	00 c0       	rjmp	.+0      	; 0x40 <getPinsVal+0x40>
  40:	83 34       	cpi	r24, 0x43	; 67
  42:	01 f0       	breq	.+0      	; 0x44 <getPinsVal+0x44>
  44:	84 34       	cpi	r24, 0x44	; 68
  46:	01 f4       	brne	.+0      	; 0x48 <getPinsVal+0x48>
  48:	89 b1       	in	r24, 0x09	; 9
  4a:	00 c0       	rjmp	.+0      	; 0x4c <getPinsVal+0x4c>
  4c:	83 b1       	in	r24, 0x03	; 3
  4e:	00 c0       	rjmp	.+0      	; 0x50 <getPinsVal+0x50>
  50:	86 b1       	in	r24, 0x06	; 6
  52:	89 23       	and	r24, r25
  54:	00 c0       	rjmp	.+0      	; 0x56 <getPinsVal+0x56>
  56:	80 e0       	ldi	r24, 0x00	; 0
  58:	df 91       	pop	r29
  5a:	cf 91       	pop	r28
  5c:	08 95       	ret

Disassembly of section .text.setPinsVal:

00000000 <setPinsVal>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	99 85       	ldd	r25, Y+9	; 0x09
  12:	2a 85       	ldd	r18, Y+10	; 0x0a
  14:	3b 85       	ldd	r19, Y+11	; 0x0b
  16:	fe 01       	movw	r30, r28
  18:	3d 96       	adiw	r30, 0x0d	; 13
  1a:	60 e0       	ldi	r22, 0x00	; 0
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	80 e0       	ldi	r24, 0x00	; 0
  20:	4c 85       	ldd	r20, Y+12	; 0x0c
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	a1 e0       	ldi	r26, 0x01	; 1
  26:	b0 e0       	ldi	r27, 0x00	; 0
  28:	64 17       	cp	r22, r20
  2a:	75 07       	cpc	r23, r21
  2c:	04 f4       	brge	.+0      	; 0x2e <setPinsVal+0x2e>
  2e:	10 81       	ld	r17, Z
  30:	32 96       	adiw	r30, 0x02	; 2
  32:	7d 01       	movw	r14, r26
  34:	00 c0       	rjmp	.+0      	; 0x36 <setPinsVal+0x36>
  36:	ee 0c       	add	r14, r14
  38:	ff 1c       	adc	r15, r15
  3a:	1a 95       	dec	r17
  3c:	02 f4       	brpl	.+0      	; 0x3e <setPinsVal+0x3e>
  3e:	8e 29       	or	r24, r14
  40:	6f 5f       	subi	r22, 0xFF	; 255
  42:	7f 4f       	sbci	r23, 0xFF	; 255
  44:	00 c0       	rjmp	.+0      	; 0x46 <setPinsVal+0x46>
  46:	92 34       	cpi	r25, 0x42	; 66
  48:	01 f0       	breq	.+0      	; 0x4a <setPinsVal+0x4a>
  4a:	00 f4       	brcc	.+0      	; 0x4c <setPinsVal+0x4c>
  4c:	91 34       	cpi	r25, 0x41	; 65
  4e:	01 f0       	breq	.+0      	; 0x50 <setPinsVal+0x50>
  50:	00 c0       	rjmp	.+0      	; 0x52 <setPinsVal+0x52>
  52:	93 34       	cpi	r25, 0x43	; 67
  54:	01 f0       	breq	.+0      	; 0x56 <setPinsVal+0x56>
  56:	94 34       	cpi	r25, 0x44	; 68
  58:	01 f0       	breq	.+0      	; 0x5a <setPinsVal+0x5a>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <setPinsVal+0x5c>
  5c:	92 b1       	in	r25, 0x02	; 2
  5e:	23 2b       	or	r18, r19
  60:	01 f0       	breq	.+0      	; 0x62 <setPinsVal+0x62>
  62:	89 2b       	or	r24, r25
  64:	00 c0       	rjmp	.+0      	; 0x66 <setPinsVal+0x66>
  66:	80 95       	com	r24
  68:	89 23       	and	r24, r25
  6a:	82 b9       	out	0x02, r24	; 2
  6c:	00 c0       	rjmp	.+0      	; 0x6e <setPinsVal+0x6e>
  6e:	95 b1       	in	r25, 0x05	; 5
  70:	23 2b       	or	r18, r19
  72:	01 f0       	breq	.+0      	; 0x74 <setPinsVal+0x74>
  74:	89 2b       	or	r24, r25
  76:	00 c0       	rjmp	.+0      	; 0x78 <setPinsVal+0x78>
  78:	80 95       	com	r24
  7a:	89 23       	and	r24, r25
  7c:	85 b9       	out	0x05, r24	; 5
  7e:	00 c0       	rjmp	.+0      	; 0x80 <setPinsVal+0x80>
  80:	98 b1       	in	r25, 0x08	; 8
  82:	23 2b       	or	r18, r19
  84:	01 f0       	breq	.+0      	; 0x86 <setPinsVal+0x86>
  86:	89 2b       	or	r24, r25
  88:	00 c0       	rjmp	.+0      	; 0x8a <setPinsVal+0x8a>
  8a:	80 95       	com	r24
  8c:	89 23       	and	r24, r25
  8e:	88 b9       	out	0x08, r24	; 8
  90:	00 c0       	rjmp	.+0      	; 0x92 <setPinsVal+0x92>
  92:	9b b1       	in	r25, 0x0b	; 11
  94:	23 2b       	or	r18, r19
  96:	01 f0       	breq	.+0      	; 0x98 <setPinsVal+0x98>
  98:	89 2b       	or	r24, r25
  9a:	00 c0       	rjmp	.+0      	; 0x9c <setPinsVal+0x9c>
  9c:	80 95       	com	r24
  9e:	89 23       	and	r24, r25
  a0:	8b b9       	out	0x0b, r24	; 11
  a2:	df 91       	pop	r29
  a4:	cf 91       	pop	r28
  a6:	1f 91       	pop	r17
  a8:	0f 91       	pop	r16
  aa:	ff 90       	pop	r15
  ac:	ef 90       	pop	r14
  ae:	08 95       	ret

timer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initTimer 000000d6  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setCompValue 00000028  00000000  00000000  0000010a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  00000132  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initTimer:

00000000 <initTimer>:
   0:	f8 94       	cli
   2:	81 30       	cpi	r24, 0x01	; 1
   4:	01 f0       	breq	.+0      	; 0x6 <initTimer+0x6>
   6:	00 f0       	brcs	.+0      	; 0x8 <initTimer+0x8>
   8:	82 30       	cpi	r24, 0x02	; 2
   a:	01 f4       	brne	.+0      	; 0xc <initTimer+0xc>
   c:	00 c0       	rjmp	.+0      	; 0xe <initTimer+0xe>
   e:	00 c0       	rjmp	.+0      	; 0x10 <initTimer+0x10>
  10:	cb 01       	movw	r24, r22
  12:	56 e0       	ldi	r21, 0x06	; 6
  14:	88 0f       	add	r24, r24
  16:	99 1f       	adc	r25, r25
  18:	5a 95       	dec	r21
  1a:	01 f4       	brne	.+0      	; 0x1c <initTimer+0x1c>
  1c:	86 2b       	or	r24, r22
  1e:	84 bd       	out	0x24, r24	; 36
  20:	85 e0       	ldi	r24, 0x05	; 5
  22:	85 bd       	out	0x25, r24	; 37
  24:	80 91 6e 00 	lds	r24, 0x006E
  28:	82 60       	ori	r24, 0x02	; 2
  2a:	80 93 6e 00 	sts	0x006E, r24
  2e:	47 bd       	out	0x27, r20	; 39
  30:	61 30       	cpi	r22, 0x01	; 1
  32:	71 05       	cpc	r23, r1
  34:	01 f0       	breq	.+0      	; 0x36 <initTimer+0x36>
  36:	00 c0       	rjmp	.+0      	; 0x38 <initTimer+0x38>
  38:	84 b5       	in	r24, 0x24	; 36
  3a:	80 62       	ori	r24, 0x20	; 32
  3c:	84 bd       	out	0x24, r24	; 36
  3e:	85 b5       	in	r24, 0x25	; 37
  40:	88 60       	ori	r24, 0x08	; 8
  42:	85 bd       	out	0x25, r24	; 37
  44:	24 9a       	sbi	0x04, 4	; 4
  46:	00 c0       	rjmp	.+0      	; 0x48 <initTimer+0x48>
  48:	66 9f       	mul	r22, r22
  4a:	20 2d       	mov	r18, r0
  4c:	11 24       	eor	r1, r1
  4e:	cb 01       	movw	r24, r22
  50:	36 e0       	ldi	r19, 0x06	; 6
  52:	88 0f       	add	r24, r24
  54:	99 1f       	adc	r25, r25
  56:	3a 95       	dec	r19
  58:	01 f4       	brne	.+0      	; 0x5a <initTimer+0x5a>
  5a:	82 2b       	or	r24, r18
  5c:	80 93 80 00 	sts	0x0080, r24
  60:	8d e0       	ldi	r24, 0x0D	; 13
  62:	80 93 81 00 	sts	0x0081, r24
  66:	80 91 6f 00 	lds	r24, 0x006F
  6a:	82 60       	ori	r24, 0x02	; 2
  6c:	80 93 6f 00 	sts	0x006F, r24
  70:	40 93 88 00 	sts	0x0088, r20
  74:	61 30       	cpi	r22, 0x01	; 1
  76:	71 05       	cpc	r23, r1
  78:	01 f4       	brne	.+0      	; 0x7a <initTimer+0x7a>
  7a:	80 91 80 00 	lds	r24, 0x0080
  7e:	80 62       	ori	r24, 0x20	; 32
  80:	80 93 80 00 	sts	0x0080, r24
  84:	80 91 81 00 	lds	r24, 0x0081
  88:	80 61       	ori	r24, 0x10	; 16
  8a:	80 93 81 00 	sts	0x0081, r24
  8e:	54 9a       	sbi	0x0a, 4	; 10
  90:	00 c0       	rjmp	.+0      	; 0x92 <initTimer+0x92>
  92:	cb 01       	movw	r24, r22
  94:	26 e0       	ldi	r18, 0x06	; 6
  96:	88 0f       	add	r24, r24
  98:	99 1f       	adc	r25, r25
  9a:	2a 95       	dec	r18
  9c:	01 f4       	brne	.+0      	; 0x9e <initTimer+0x9e>
  9e:	86 2b       	or	r24, r22
  a0:	80 93 b0 00 	sts	0x00B0, r24
  a4:	10 92 b1 00 	sts	0x00B1, r1
  a8:	80 91 70 00 	lds	r24, 0x0070
  ac:	82 60       	ori	r24, 0x02	; 2
  ae:	80 93 70 00 	sts	0x0070, r24
  b2:	40 93 b3 00 	sts	0x00B3, r20
  b6:	61 30       	cpi	r22, 0x01	; 1
  b8:	71 05       	cpc	r23, r1
  ba:	01 f4       	brne	.+0      	; 0xbc <initTimer+0xbc>
  bc:	80 91 b0 00 	lds	r24, 0x00B0
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	80 93 b0 00 	sts	0x00B0, r24
  c6:	80 91 b1 00 	lds	r24, 0x00B1
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	80 93 b1 00 	sts	0x00B1, r24
  d0:	56 9a       	sbi	0x0a, 6	; 10
  d2:	78 94       	sei
  d4:	08 95       	ret

Disassembly of section .text.setCompValue:

00000000 <setCompValue>:
   0:	81 30       	cpi	r24, 0x01	; 1
   2:	01 f0       	breq	.+0      	; 0x4 <setCompValue+0x4>
   4:	00 f0       	brcs	.+0      	; 0x6 <setCompValue+0x6>
   6:	82 30       	cpi	r24, 0x02	; 2
   8:	01 f0       	breq	.+0      	; 0xa <setCompValue+0xa>
   a:	08 95       	ret
   c:	67 bd       	out	0x27, r22	; 39
   e:	08 95       	ret
  10:	70 e0       	ldi	r23, 0x00	; 0
  12:	70 93 89 00 	sts	0x0089, r23
  16:	60 93 88 00 	sts	0x0088, r22
  1a:	08 95       	ret
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	70 93 8b 00 	sts	0x008B, r23
  22:	60 93 8a 00 	sts	0x008A, r22
  26:	08 95       	ret

vals.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .rodata.str1.1 00000055  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text.printPotVal 00000056  00000000  00000000  00000089  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.setPotVal 0000011c  00000000  00000000  000000df  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  000001fb  2**0
                  CONTENTS, READONLY

Disassembly of section .text.printPotVal:

00000000 <printPotVal>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	00 d0       	rcall	.+0      	; 0x6 <printPotVal+0x6>
   6:	00 d0       	rcall	.+0      	; 0x8 <printPotVal+0x8>
   8:	00 d0       	rcall	.+0      	; 0xa <printPotVal+0xa>
   a:	cd b7       	in	r28, 0x3d	; 61
   c:	de b7       	in	r29, 0x3e	; 62
   e:	49 83       	std	Y+1, r20	; 0x01
  10:	5a 83       	std	Y+2, r21	; 0x02
  12:	6b 83       	std	Y+3, r22	; 0x03
  14:	7c 83       	std	Y+4, r23	; 0x04
  16:	8d 83       	std	Y+5, r24	; 0x05
  18:	9f 93       	push	r25
  1a:	8d 81       	ldd	r24, Y+5	; 0x05
  1c:	8f 93       	push	r24
  1e:	8c 81       	ldd	r24, Y+4	; 0x04
  20:	8f 93       	push	r24
  22:	8b 81       	ldd	r24, Y+3	; 0x03
  24:	8f 93       	push	r24
  26:	8a 81       	ldd	r24, Y+2	; 0x02
  28:	8f 93       	push	r24
  2a:	89 81       	ldd	r24, Y+1	; 0x01
  2c:	8f 93       	push	r24
  2e:	80 e0       	ldi	r24, 0x00	; 0
  30:	90 e0       	ldi	r25, 0x00	; 0
  32:	9f 93       	push	r25
  34:	8f 93       	push	r24
  36:	0e 94 00 00 	call	0	; 0x0 <printPotVal>
  3a:	0f b6       	in	r0, 0x3f	; 63
  3c:	f8 94       	cli
  3e:	de bf       	out	0x3e, r29	; 62
  40:	0f be       	out	0x3f, r0	; 63
  42:	cd bf       	out	0x3d, r28	; 61
  44:	26 96       	adiw	r28, 0x06	; 6
  46:	0f b6       	in	r0, 0x3f	; 63
  48:	f8 94       	cli
  4a:	de bf       	out	0x3e, r29	; 62
  4c:	0f be       	out	0x3f, r0	; 63
  4e:	cd bf       	out	0x3d, r28	; 61
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	08 95       	ret

Disassembly of section .text.setPotVal:

00000000 <setPotVal>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	ec 01       	movw	r28, r24
  1a:	8a 01       	movw	r16, r20
  1c:	48 83       	st	Y, r20
  1e:	19 83       	std	Y+1, r17	; 0x01
  20:	68 34       	cpi	r22, 0x48	; 72
  22:	01 f4       	brne	.+0      	; 0x24 <setPotVal+0x24>
  24:	ba 01       	movw	r22, r20
  26:	55 0f       	add	r21, r21
  28:	88 0b       	sbc	r24, r24
  2a:	99 0b       	sbc	r25, r25
  2c:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  30:	4b 01       	movw	r8, r22
  32:	5c 01       	movw	r10, r24
  34:	2a e1       	ldi	r18, 0x1A	; 26
  36:	37 e6       	ldi	r19, 0x67	; 103
  38:	4c e9       	ldi	r20, 0x9C	; 156
  3a:	50 e4       	ldi	r21, 0x40	; 64
  3c:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  40:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  44:	f6 2e       	mov	r15, r22
  46:	e7 2e       	mov	r14, r23
  48:	6c 83       	std	Y+4, r22	; 0x04
  4a:	7d 83       	std	Y+5, r23	; 0x05
  4c:	28 e2       	ldi	r18, 0x28	; 40
  4e:	31 ea       	ldi	r19, 0xA1	; 161
  50:	44 e8       	ldi	r20, 0x84	; 132
  52:	5e e3       	ldi	r21, 0x3E	; 62
  54:	c5 01       	movw	r24, r10
  56:	b4 01       	movw	r22, r8
  58:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  5c:	20 e0       	ldi	r18, 0x00	; 0
  5e:	30 e0       	ldi	r19, 0x00	; 0
  60:	46 ea       	ldi	r20, 0xA6	; 166
  62:	52 e4       	ldi	r21, 0x42	; 66
  64:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  68:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  6c:	6a 83       	std	Y+2, r22	; 0x02
  6e:	7b 83       	std	Y+3, r23	; 0x03
  70:	ef 92       	push	r14
  72:	ff 92       	push	r15
  74:	7f 93       	push	r23
  76:	6f 93       	push	r22
  78:	1f 93       	push	r17
  7a:	0f 93       	push	r16
  7c:	80 e0       	ldi	r24, 0x00	; 0
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	9f 93       	push	r25
  82:	8f 93       	push	r24
  84:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  88:	8d b7       	in	r24, 0x3d	; 61
  8a:	9e b7       	in	r25, 0x3e	; 62
  8c:	08 96       	adiw	r24, 0x08	; 8
  8e:	0f b6       	in	r0, 0x3f	; 63
  90:	f8 94       	cli
  92:	9e bf       	out	0x3e, r25	; 62
  94:	0f be       	out	0x3f, r0	; 63
  96:	8d bf       	out	0x3d, r24	; 61
  98:	00 c0       	rjmp	.+0      	; 0x9a <setPotVal+0x9a>
  9a:	6c 34       	cpi	r22, 0x4C	; 76
  9c:	01 f4       	brne	.+0      	; 0x9e <setPotVal+0x9e>
  9e:	ba 01       	movw	r22, r20
  a0:	55 0f       	add	r21, r21
  a2:	88 0b       	sbc	r24, r24
  a4:	99 0b       	sbc	r25, r25
  a6:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  aa:	6b 01       	movw	r12, r22
  ac:	7c 01       	movw	r14, r24
  ae:	20 e9       	ldi	r18, 0x90	; 144
  b0:	3e e3       	ldi	r19, 0x3E	; 62
  b2:	4a e7       	ldi	r20, 0x7A	; 122
  b4:	5e e3       	ldi	r21, 0x3E	; 62
  b6:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  ba:	20 e0       	ldi	r18, 0x00	; 0
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	44 eb       	ldi	r20, 0xB4	; 180
  c0:	52 e4       	ldi	r21, 0x42	; 66
  c2:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  c6:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  ca:	7b 83       	std	Y+3, r23	; 0x03
  cc:	6a 83       	std	Y+2, r22	; 0x02
  ce:	2a e1       	ldi	r18, 0x1A	; 26
  d0:	37 e6       	ldi	r19, 0x67	; 103
  d2:	4c e9       	ldi	r20, 0x9C	; 156
  d4:	50 e4       	ldi	r21, 0x40	; 64
  d6:	c7 01       	movw	r24, r14
  d8:	b6 01       	movw	r22, r12
  da:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  de:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  e2:	7d 83       	std	Y+5, r23	; 0x05
  e4:	6c 83       	std	Y+4, r22	; 0x04
  e6:	8b 81       	ldd	r24, Y+3	; 0x03
  e8:	8f 93       	push	r24
  ea:	8a 81       	ldd	r24, Y+2	; 0x02
  ec:	8f 93       	push	r24
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	9f 93       	push	r25
  f4:	8f 93       	push	r24
  f6:	0e 94 00 00 	call	0	; 0x0 <setPotVal>
  fa:	0f 90       	pop	r0
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	0f 90       	pop	r0
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	1f 91       	pop	r17
 108:	0f 91       	pop	r16
 10a:	ff 90       	pop	r15
 10c:	ef 90       	pop	r14
 10e:	df 90       	pop	r13
 110:	cf 90       	pop	r12
 112:	bf 90       	pop	r11
 114:	af 90       	pop	r10
 116:	9f 90       	pop	r9
 118:	8f 90       	pop	r8
 11a:	08 95       	ret
