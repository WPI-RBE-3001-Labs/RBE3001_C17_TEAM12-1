
Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  0000194e  000019e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000194e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800156  00800156  00001a38  2**0
                  ALLOC
  3 .stab         00000cfc  00000000  00000000  00001a38  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000db5  00000000  00000000  00002734  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bf 00 	jmp	0x17e	; 0x17e <__ctors_end>
       4:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
       8:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
       c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      10:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      14:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      18:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      1c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      20:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      24:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      28:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      2c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      30:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      34:	0c 94 15 08 	jmp	0x102a	; 0x102a <__vector_13>
      38:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      3c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      40:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      44:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      48:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      4c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      50:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      54:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      58:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      5c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      60:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      64:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      68:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      6c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      70:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      74:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
      78:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>

0000007c <__c.1790>:
      7c:	6e 61 6e 00                                         nan.

00000080 <__c.1788>:
      80:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      90:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      a0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      b0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      c0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      d0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      e0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      f0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     100:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     110:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     120:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     130:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     140:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     150:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     160:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     170:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000017e <__ctors_end>:
     17e:	11 24       	eor	r1, r1
     180:	1f be       	out	0x3f, r1	; 63
     182:	cf ef       	ldi	r28, 0xFF	; 255
     184:	d0 e1       	ldi	r29, 0x10	; 16
     186:	de bf       	out	0x3e, r29	; 62
     188:	cd bf       	out	0x3d, r28	; 61

0000018a <__do_copy_data>:
     18a:	11 e0       	ldi	r17, 0x01	; 1
     18c:	a0 e0       	ldi	r26, 0x00	; 0
     18e:	b1 e0       	ldi	r27, 0x01	; 1
     190:	ee e4       	ldi	r30, 0x4E	; 78
     192:	f9 e1       	ldi	r31, 0x19	; 25
     194:	02 c0       	rjmp	.+4      	; 0x19a <.do_copy_data_start>

00000196 <.do_copy_data_loop>:
     196:	05 90       	lpm	r0, Z+
     198:	0d 92       	st	X+, r0

0000019a <.do_copy_data_start>:
     19a:	a6 35       	cpi	r26, 0x56	; 86
     19c:	b1 07       	cpc	r27, r17
     19e:	d9 f7       	brne	.-10     	; 0x196 <.do_copy_data_loop>

000001a0 <__do_clear_bss>:
     1a0:	11 e0       	ldi	r17, 0x01	; 1
     1a2:	a6 e5       	ldi	r26, 0x56	; 86
     1a4:	b1 e0       	ldi	r27, 0x01	; 1
     1a6:	01 c0       	rjmp	.+2      	; 0x1aa <.do_clear_bss_start>

000001a8 <.do_clear_bss_loop>:
     1a8:	1d 92       	st	X+, r1

000001aa <.do_clear_bss_start>:
     1aa:	a0 36       	cpi	r26, 0x60	; 96
     1ac:	b1 07       	cpc	r27, r17
     1ae:	e1 f7       	brne	.-8      	; 0x1a8 <.do_clear_bss_loop>
     1b0:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <main>
     1b4:	0c 94 a5 0c 	jmp	0x194a	; 0x194a <_exit>

000001b8 <__bad_interrupt>:
     1b8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001bc <vfprintf>:
     1bc:	a1 e1       	ldi	r26, 0x11	; 17
     1be:	b0 e0       	ldi	r27, 0x00	; 0
     1c0:	e4 ee       	ldi	r30, 0xE4	; 228
     1c2:	f0 e0       	ldi	r31, 0x00	; 0
     1c4:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__prologue_saves__>
     1c8:	3c 01       	movw	r6, r24
     1ca:	7f 87       	std	Y+15, r23	; 0x0f
     1cc:	6e 87       	std	Y+14, r22	; 0x0e
     1ce:	6a 01       	movw	r12, r20
     1d0:	fc 01       	movw	r30, r24
     1d2:	17 82       	std	Z+7, r1	; 0x07
     1d4:	16 82       	std	Z+6, r1	; 0x06
     1d6:	83 81       	ldd	r24, Z+3	; 0x03
     1d8:	81 fd       	sbrc	r24, 1
     1da:	03 c0       	rjmp	.+6      	; 0x1e2 <vfprintf+0x26>
     1dc:	6f ef       	ldi	r22, 0xFF	; 255
     1de:	7f ef       	ldi	r23, 0xFF	; 255
     1e0:	6f c3       	rjmp	.+1758   	; 0x8c0 <vfprintf+0x704>
     1e2:	9e 01       	movw	r18, r28
     1e4:	2f 5f       	subi	r18, 0xFF	; 255
     1e6:	3f 4f       	sbci	r19, 0xFF	; 255
     1e8:	39 8b       	std	Y+17, r19	; 0x11
     1ea:	28 8b       	std	Y+16, r18	; 0x10
     1ec:	f3 01       	movw	r30, r6
     1ee:	23 81       	ldd	r18, Z+3	; 0x03
     1f0:	ee 85       	ldd	r30, Y+14	; 0x0e
     1f2:	ff 85       	ldd	r31, Y+15	; 0x0f
     1f4:	23 fd       	sbrc	r18, 3
     1f6:	85 91       	lpm	r24, Z+
     1f8:	23 ff       	sbrs	r18, 3
     1fa:	81 91       	ld	r24, Z+
     1fc:	ff 87       	std	Y+15, r31	; 0x0f
     1fe:	ee 87       	std	Y+14, r30	; 0x0e
     200:	88 23       	and	r24, r24
     202:	09 f4       	brne	.+2      	; 0x206 <vfprintf+0x4a>
     204:	5a c3       	rjmp	.+1716   	; 0x8ba <vfprintf+0x6fe>
     206:	85 32       	cpi	r24, 0x25	; 37
     208:	51 f4       	brne	.+20     	; 0x21e <vfprintf+0x62>
     20a:	ee 85       	ldd	r30, Y+14	; 0x0e
     20c:	ff 85       	ldd	r31, Y+15	; 0x0f
     20e:	23 fd       	sbrc	r18, 3
     210:	85 91       	lpm	r24, Z+
     212:	23 ff       	sbrs	r18, 3
     214:	81 91       	ld	r24, Z+
     216:	ff 87       	std	Y+15, r31	; 0x0f
     218:	ee 87       	std	Y+14, r30	; 0x0e
     21a:	85 32       	cpi	r24, 0x25	; 37
     21c:	29 f4       	brne	.+10     	; 0x228 <vfprintf+0x6c>
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	b3 01       	movw	r22, r6
     222:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     226:	e2 cf       	rjmp	.-60     	; 0x1ec <vfprintf+0x30>
     228:	98 2f       	mov	r25, r24
     22a:	10 e0       	ldi	r17, 0x00	; 0
     22c:	88 24       	eor	r8, r8
     22e:	99 24       	eor	r9, r9
     230:	10 32       	cpi	r17, 0x20	; 32
     232:	b0 f4       	brcc	.+44     	; 0x260 <vfprintf+0xa4>
     234:	9b 32       	cpi	r25, 0x2B	; 43
     236:	69 f0       	breq	.+26     	; 0x252 <vfprintf+0x96>
     238:	9c 32       	cpi	r25, 0x2C	; 44
     23a:	28 f4       	brcc	.+10     	; 0x246 <vfprintf+0x8a>
     23c:	90 32       	cpi	r25, 0x20	; 32
     23e:	51 f0       	breq	.+20     	; 0x254 <vfprintf+0x98>
     240:	93 32       	cpi	r25, 0x23	; 35
     242:	71 f4       	brne	.+28     	; 0x260 <vfprintf+0xa4>
     244:	0b c0       	rjmp	.+22     	; 0x25c <vfprintf+0xa0>
     246:	9d 32       	cpi	r25, 0x2D	; 45
     248:	39 f0       	breq	.+14     	; 0x258 <vfprintf+0x9c>
     24a:	90 33       	cpi	r25, 0x30	; 48
     24c:	49 f4       	brne	.+18     	; 0x260 <vfprintf+0xa4>
     24e:	11 60       	ori	r17, 0x01	; 1
     250:	28 c0       	rjmp	.+80     	; 0x2a2 <vfprintf+0xe6>
     252:	12 60       	ori	r17, 0x02	; 2
     254:	14 60       	ori	r17, 0x04	; 4
     256:	25 c0       	rjmp	.+74     	; 0x2a2 <vfprintf+0xe6>
     258:	18 60       	ori	r17, 0x08	; 8
     25a:	23 c0       	rjmp	.+70     	; 0x2a2 <vfprintf+0xe6>
     25c:	10 61       	ori	r17, 0x10	; 16
     25e:	21 c0       	rjmp	.+66     	; 0x2a2 <vfprintf+0xe6>
     260:	17 fd       	sbrc	r17, 7
     262:	2a c0       	rjmp	.+84     	; 0x2b8 <vfprintf+0xfc>
     264:	89 2f       	mov	r24, r25
     266:	80 53       	subi	r24, 0x30	; 48
     268:	8a 30       	cpi	r24, 0x0A	; 10
     26a:	78 f4       	brcc	.+30     	; 0x28a <vfprintf+0xce>
     26c:	16 ff       	sbrs	r17, 6
     26e:	06 c0       	rjmp	.+12     	; 0x27c <vfprintf+0xc0>
     270:	fa e0       	ldi	r31, 0x0A	; 10
     272:	9f 9e       	mul	r9, r31
     274:	90 2c       	mov	r9, r0
     276:	11 24       	eor	r1, r1
     278:	98 0e       	add	r9, r24
     27a:	13 c0       	rjmp	.+38     	; 0x2a2 <vfprintf+0xe6>
     27c:	3a e0       	ldi	r19, 0x0A	; 10
     27e:	83 9e       	mul	r8, r19
     280:	80 2c       	mov	r8, r0
     282:	11 24       	eor	r1, r1
     284:	88 0e       	add	r8, r24
     286:	10 62       	ori	r17, 0x20	; 32
     288:	0c c0       	rjmp	.+24     	; 0x2a2 <vfprintf+0xe6>
     28a:	9e 32       	cpi	r25, 0x2E	; 46
     28c:	21 f4       	brne	.+8      	; 0x296 <vfprintf+0xda>
     28e:	16 fd       	sbrc	r17, 6
     290:	14 c3       	rjmp	.+1576   	; 0x8ba <vfprintf+0x6fe>
     292:	10 64       	ori	r17, 0x40	; 64
     294:	06 c0       	rjmp	.+12     	; 0x2a2 <vfprintf+0xe6>
     296:	9c 36       	cpi	r25, 0x6C	; 108
     298:	11 f4       	brne	.+4      	; 0x29e <vfprintf+0xe2>
     29a:	10 68       	ori	r17, 0x80	; 128
     29c:	02 c0       	rjmp	.+4      	; 0x2a2 <vfprintf+0xe6>
     29e:	98 36       	cpi	r25, 0x68	; 104
     2a0:	59 f4       	brne	.+22     	; 0x2b8 <vfprintf+0xfc>
     2a2:	ee 85       	ldd	r30, Y+14	; 0x0e
     2a4:	ff 85       	ldd	r31, Y+15	; 0x0f
     2a6:	23 fd       	sbrc	r18, 3
     2a8:	95 91       	lpm	r25, Z+
     2aa:	23 ff       	sbrs	r18, 3
     2ac:	91 91       	ld	r25, Z+
     2ae:	ff 87       	std	Y+15, r31	; 0x0f
     2b0:	ee 87       	std	Y+14, r30	; 0x0e
     2b2:	99 23       	and	r25, r25
     2b4:	09 f0       	breq	.+2      	; 0x2b8 <vfprintf+0xfc>
     2b6:	bc cf       	rjmp	.-136    	; 0x230 <vfprintf+0x74>
     2b8:	89 2f       	mov	r24, r25
     2ba:	85 54       	subi	r24, 0x45	; 69
     2bc:	83 30       	cpi	r24, 0x03	; 3
     2be:	20 f4       	brcc	.+8      	; 0x2c8 <vfprintf+0x10c>
     2c0:	81 2f       	mov	r24, r17
     2c2:	80 61       	ori	r24, 0x10	; 16
     2c4:	90 5e       	subi	r25, 0xE0	; 224
     2c6:	07 c0       	rjmp	.+14     	; 0x2d6 <vfprintf+0x11a>
     2c8:	89 2f       	mov	r24, r25
     2ca:	85 56       	subi	r24, 0x65	; 101
     2cc:	83 30       	cpi	r24, 0x03	; 3
     2ce:	08 f0       	brcs	.+2      	; 0x2d2 <vfprintf+0x116>
     2d0:	9f c1       	rjmp	.+830    	; 0x610 <vfprintf+0x454>
     2d2:	81 2f       	mov	r24, r17
     2d4:	8f 7e       	andi	r24, 0xEF	; 239
     2d6:	86 fd       	sbrc	r24, 6
     2d8:	02 c0       	rjmp	.+4      	; 0x2de <vfprintf+0x122>
     2da:	76 e0       	ldi	r23, 0x06	; 6
     2dc:	97 2e       	mov	r9, r23
     2de:	6f e3       	ldi	r22, 0x3F	; 63
     2e0:	f6 2e       	mov	r15, r22
     2e2:	f8 22       	and	r15, r24
     2e4:	95 36       	cpi	r25, 0x65	; 101
     2e6:	19 f4       	brne	.+6      	; 0x2ee <vfprintf+0x132>
     2e8:	f0 e4       	ldi	r31, 0x40	; 64
     2ea:	ff 2a       	or	r15, r31
     2ec:	07 c0       	rjmp	.+14     	; 0x2fc <vfprintf+0x140>
     2ee:	96 36       	cpi	r25, 0x66	; 102
     2f0:	19 f4       	brne	.+6      	; 0x2f8 <vfprintf+0x13c>
     2f2:	20 e8       	ldi	r18, 0x80	; 128
     2f4:	f2 2a       	or	r15, r18
     2f6:	02 c0       	rjmp	.+4      	; 0x2fc <vfprintf+0x140>
     2f8:	91 10       	cpse	r9, r1
     2fa:	9a 94       	dec	r9
     2fc:	f7 fe       	sbrs	r15, 7
     2fe:	0a c0       	rjmp	.+20     	; 0x314 <vfprintf+0x158>
     300:	3b e3       	ldi	r19, 0x3B	; 59
     302:	39 15       	cp	r19, r9
     304:	18 f4       	brcc	.+6      	; 0x30c <vfprintf+0x150>
     306:	5c e3       	ldi	r21, 0x3C	; 60
     308:	b5 2e       	mov	r11, r21
     30a:	02 c0       	rjmp	.+4      	; 0x310 <vfprintf+0x154>
     30c:	b9 2c       	mov	r11, r9
     30e:	b3 94       	inc	r11
     310:	27 e0       	ldi	r18, 0x07	; 7
     312:	09 c0       	rjmp	.+18     	; 0x326 <vfprintf+0x16a>
     314:	47 e0       	ldi	r20, 0x07	; 7
     316:	49 15       	cp	r20, r9
     318:	20 f4       	brcc	.+8      	; 0x322 <vfprintf+0x166>
     31a:	bb 24       	eor	r11, r11
     31c:	47 e0       	ldi	r20, 0x07	; 7
     31e:	94 2e       	mov	r9, r20
     320:	f7 cf       	rjmp	.-18     	; 0x310 <vfprintf+0x154>
     322:	29 2d       	mov	r18, r9
     324:	bb 24       	eor	r11, r11
     326:	c6 01       	movw	r24, r12
     328:	04 96       	adiw	r24, 0x04	; 4
     32a:	9d 87       	std	Y+13, r25	; 0x0d
     32c:	8c 87       	std	Y+12, r24	; 0x0c
     32e:	f6 01       	movw	r30, r12
     330:	60 81       	ld	r22, Z
     332:	71 81       	ldd	r23, Z+1	; 0x01
     334:	82 81       	ldd	r24, Z+2	; 0x02
     336:	93 81       	ldd	r25, Z+3	; 0x03
     338:	ae 01       	movw	r20, r28
     33a:	4f 5f       	subi	r20, 0xFF	; 255
     33c:	5f 4f       	sbci	r21, 0xFF	; 255
     33e:	0b 2d       	mov	r16, r11
     340:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__ftoa_engine>
     344:	6c 01       	movw	r12, r24
     346:	09 81       	ldd	r16, Y+1	; 0x01
     348:	20 2e       	mov	r2, r16
     34a:	33 24       	eor	r3, r3
     34c:	00 ff       	sbrs	r16, 0
     34e:	04 c0       	rjmp	.+8      	; 0x358 <vfprintf+0x19c>
     350:	03 fd       	sbrc	r16, 3
     352:	02 c0       	rjmp	.+4      	; 0x358 <vfprintf+0x19c>
     354:	1d e2       	ldi	r17, 0x2D	; 45
     356:	09 c0       	rjmp	.+18     	; 0x36a <vfprintf+0x1ae>
     358:	f1 fe       	sbrs	r15, 1
     35a:	02 c0       	rjmp	.+4      	; 0x360 <vfprintf+0x1a4>
     35c:	1b e2       	ldi	r17, 0x2B	; 43
     35e:	05 c0       	rjmp	.+10     	; 0x36a <vfprintf+0x1ae>
     360:	f2 fc       	sbrc	r15, 2
     362:	02 c0       	rjmp	.+4      	; 0x368 <vfprintf+0x1ac>
     364:	10 e0       	ldi	r17, 0x00	; 0
     366:	01 c0       	rjmp	.+2      	; 0x36a <vfprintf+0x1ae>
     368:	10 e2       	ldi	r17, 0x20	; 32
     36a:	c1 01       	movw	r24, r2
     36c:	8c 70       	andi	r24, 0x0C	; 12
     36e:	90 70       	andi	r25, 0x00	; 0
     370:	89 2b       	or	r24, r25
     372:	b9 f1       	breq	.+110    	; 0x3e2 <vfprintf+0x226>
     374:	11 23       	and	r17, r17
     376:	11 f4       	brne	.+4      	; 0x37c <vfprintf+0x1c0>
     378:	83 e0       	ldi	r24, 0x03	; 3
     37a:	01 c0       	rjmp	.+2      	; 0x37e <vfprintf+0x1c2>
     37c:	84 e0       	ldi	r24, 0x04	; 4
     37e:	88 15       	cp	r24, r8
     380:	10 f0       	brcs	.+4      	; 0x386 <vfprintf+0x1ca>
     382:	88 24       	eor	r8, r8
     384:	0a c0       	rjmp	.+20     	; 0x39a <vfprintf+0x1de>
     386:	88 1a       	sub	r8, r24
     388:	f3 fc       	sbrc	r15, 3
     38a:	07 c0       	rjmp	.+14     	; 0x39a <vfprintf+0x1de>
     38c:	80 e2       	ldi	r24, 0x20	; 32
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	b3 01       	movw	r22, r6
     392:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     396:	8a 94       	dec	r8
     398:	c9 f7       	brne	.-14     	; 0x38c <vfprintf+0x1d0>
     39a:	11 23       	and	r17, r17
     39c:	29 f0       	breq	.+10     	; 0x3a8 <vfprintf+0x1ec>
     39e:	81 2f       	mov	r24, r17
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	b3 01       	movw	r22, r6
     3a4:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     3a8:	23 fe       	sbrs	r2, 3
     3aa:	03 c0       	rjmp	.+6      	; 0x3b2 <vfprintf+0x1f6>
     3ac:	0c e7       	ldi	r16, 0x7C	; 124
     3ae:	10 e0       	ldi	r17, 0x00	; 0
     3b0:	0e c0       	rjmp	.+28     	; 0x3ce <vfprintf+0x212>
     3b2:	00 e8       	ldi	r16, 0x80	; 128
     3b4:	10 e0       	ldi	r17, 0x00	; 0
     3b6:	0b c0       	rjmp	.+22     	; 0x3ce <vfprintf+0x212>
     3b8:	e1 14       	cp	r14, r1
     3ba:	f1 04       	cpc	r15, r1
     3bc:	09 f0       	breq	.+2      	; 0x3c0 <vfprintf+0x204>
     3be:	80 52       	subi	r24, 0x20	; 32
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	b3 01       	movw	r22, r6
     3c4:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     3c8:	0f 5f       	subi	r16, 0xFF	; 255
     3ca:	1f 4f       	sbci	r17, 0xFF	; 255
     3cc:	05 c0       	rjmp	.+10     	; 0x3d8 <vfprintf+0x21c>
     3ce:	ef 2c       	mov	r14, r15
     3d0:	ff 24       	eor	r15, r15
     3d2:	f0 e1       	ldi	r31, 0x10	; 16
     3d4:	ef 22       	and	r14, r31
     3d6:	ff 24       	eor	r15, r15
     3d8:	f8 01       	movw	r30, r16
     3da:	84 91       	lpm	r24, Z+
     3dc:	88 23       	and	r24, r24
     3de:	61 f7       	brne	.-40     	; 0x3b8 <vfprintf+0x1fc>
     3e0:	14 c1       	rjmp	.+552    	; 0x60a <vfprintf+0x44e>
     3e2:	f7 fe       	sbrs	r15, 7
     3e4:	12 c0       	rjmp	.+36     	; 0x40a <vfprintf+0x24e>
     3e6:	bc 0c       	add	r11, r12
     3e8:	24 fe       	sbrs	r2, 4
     3ea:	04 c0       	rjmp	.+8      	; 0x3f4 <vfprintf+0x238>
     3ec:	8a 81       	ldd	r24, Y+2	; 0x02
     3ee:	81 33       	cpi	r24, 0x31	; 49
     3f0:	09 f4       	brne	.+2      	; 0x3f4 <vfprintf+0x238>
     3f2:	ba 94       	dec	r11
     3f4:	1b 14       	cp	r1, r11
     3f6:	1c f0       	brlt	.+6      	; 0x3fe <vfprintf+0x242>
     3f8:	bb 24       	eor	r11, r11
     3fa:	b3 94       	inc	r11
     3fc:	2d c0       	rjmp	.+90     	; 0x458 <vfprintf+0x29c>
     3fe:	f8 e0       	ldi	r31, 0x08	; 8
     400:	fb 15       	cp	r31, r11
     402:	50 f5       	brcc	.+84     	; 0x458 <vfprintf+0x29c>
     404:	38 e0       	ldi	r19, 0x08	; 8
     406:	b3 2e       	mov	r11, r19
     408:	27 c0       	rjmp	.+78     	; 0x458 <vfprintf+0x29c>
     40a:	f6 fc       	sbrc	r15, 6
     40c:	25 c0       	rjmp	.+74     	; 0x458 <vfprintf+0x29c>
     40e:	89 2d       	mov	r24, r9
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	8c 15       	cp	r24, r12
     414:	9d 05       	cpc	r25, r13
     416:	4c f0       	brlt	.+18     	; 0x42a <vfprintf+0x26e>
     418:	2c ef       	ldi	r18, 0xFC	; 252
     41a:	c2 16       	cp	r12, r18
     41c:	2f ef       	ldi	r18, 0xFF	; 255
     41e:	d2 06       	cpc	r13, r18
     420:	24 f0       	brlt	.+8      	; 0x42a <vfprintf+0x26e>
     422:	30 e8       	ldi	r19, 0x80	; 128
     424:	f3 2a       	or	r15, r19
     426:	01 c0       	rjmp	.+2      	; 0x42a <vfprintf+0x26e>
     428:	9a 94       	dec	r9
     42a:	99 20       	and	r9, r9
     42c:	49 f0       	breq	.+18     	; 0x440 <vfprintf+0x284>
     42e:	e2 e0       	ldi	r30, 0x02	; 2
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	ec 0f       	add	r30, r28
     434:	fd 1f       	adc	r31, r29
     436:	e9 0d       	add	r30, r9
     438:	f1 1d       	adc	r31, r1
     43a:	80 81       	ld	r24, Z
     43c:	80 33       	cpi	r24, 0x30	; 48
     43e:	a1 f3       	breq	.-24     	; 0x428 <vfprintf+0x26c>
     440:	f7 fe       	sbrs	r15, 7
     442:	0a c0       	rjmp	.+20     	; 0x458 <vfprintf+0x29c>
     444:	b9 2c       	mov	r11, r9
     446:	b3 94       	inc	r11
     448:	89 2d       	mov	r24, r9
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	c8 16       	cp	r12, r24
     44e:	d9 06       	cpc	r13, r25
     450:	14 f0       	brlt	.+4      	; 0x456 <vfprintf+0x29a>
     452:	99 24       	eor	r9, r9
     454:	01 c0       	rjmp	.+2      	; 0x458 <vfprintf+0x29c>
     456:	9c 18       	sub	r9, r12
     458:	f7 fc       	sbrc	r15, 7
     45a:	03 c0       	rjmp	.+6      	; 0x462 <vfprintf+0x2a6>
     45c:	25 e0       	ldi	r18, 0x05	; 5
     45e:	30 e0       	ldi	r19, 0x00	; 0
     460:	09 c0       	rjmp	.+18     	; 0x474 <vfprintf+0x2b8>
     462:	1c 14       	cp	r1, r12
     464:	1d 04       	cpc	r1, r13
     466:	1c f0       	brlt	.+6      	; 0x46e <vfprintf+0x2b2>
     468:	21 e0       	ldi	r18, 0x01	; 1
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	03 c0       	rjmp	.+6      	; 0x474 <vfprintf+0x2b8>
     46e:	96 01       	movw	r18, r12
     470:	2f 5f       	subi	r18, 0xFF	; 255
     472:	3f 4f       	sbci	r19, 0xFF	; 255
     474:	11 23       	and	r17, r17
     476:	11 f0       	breq	.+4      	; 0x47c <vfprintf+0x2c0>
     478:	2f 5f       	subi	r18, 0xFF	; 255
     47a:	3f 4f       	sbci	r19, 0xFF	; 255
     47c:	99 20       	and	r9, r9
     47e:	29 f0       	breq	.+10     	; 0x48a <vfprintf+0x2ce>
     480:	89 2d       	mov	r24, r9
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	28 0f       	add	r18, r24
     488:	39 1f       	adc	r19, r25
     48a:	88 2d       	mov	r24, r8
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	28 17       	cp	r18, r24
     490:	39 07       	cpc	r19, r25
     492:	14 f0       	brlt	.+4      	; 0x498 <vfprintf+0x2dc>
     494:	88 24       	eor	r8, r8
     496:	01 c0       	rjmp	.+2      	; 0x49a <vfprintf+0x2de>
     498:	82 1a       	sub	r8, r18
     49a:	4f 2c       	mov	r4, r15
     49c:	55 24       	eor	r5, r5
     49e:	c2 01       	movw	r24, r4
     4a0:	89 70       	andi	r24, 0x09	; 9
     4a2:	90 70       	andi	r25, 0x00	; 0
     4a4:	89 2b       	or	r24, r25
     4a6:	39 f0       	breq	.+14     	; 0x4b6 <vfprintf+0x2fa>
     4a8:	08 c0       	rjmp	.+16     	; 0x4ba <vfprintf+0x2fe>
     4aa:	80 e2       	ldi	r24, 0x20	; 32
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	b3 01       	movw	r22, r6
     4b0:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     4b4:	8a 94       	dec	r8
     4b6:	88 20       	and	r8, r8
     4b8:	c1 f7       	brne	.-16     	; 0x4aa <vfprintf+0x2ee>
     4ba:	11 23       	and	r17, r17
     4bc:	29 f0       	breq	.+10     	; 0x4c8 <vfprintf+0x30c>
     4be:	81 2f       	mov	r24, r17
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	b3 01       	movw	r22, r6
     4c4:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     4c8:	43 fe       	sbrs	r4, 3
     4ca:	07 c0       	rjmp	.+14     	; 0x4da <vfprintf+0x31e>
     4cc:	08 c0       	rjmp	.+16     	; 0x4de <vfprintf+0x322>
     4ce:	80 e3       	ldi	r24, 0x30	; 48
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	b3 01       	movw	r22, r6
     4d4:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     4d8:	8a 94       	dec	r8
     4da:	88 20       	and	r8, r8
     4dc:	c1 f7       	brne	.-16     	; 0x4ce <vfprintf+0x312>
     4de:	f7 fe       	sbrs	r15, 7
     4e0:	46 c0       	rjmp	.+140    	; 0x56e <vfprintf+0x3b2>
     4e2:	86 01       	movw	r16, r12
     4e4:	d7 fe       	sbrs	r13, 7
     4e6:	02 c0       	rjmp	.+4      	; 0x4ec <vfprintf+0x330>
     4e8:	00 e0       	ldi	r16, 0x00	; 0
     4ea:	10 e0       	ldi	r17, 0x00	; 0
     4ec:	76 01       	movw	r14, r12
     4ee:	08 94       	sec
     4f0:	e1 1c       	adc	r14, r1
     4f2:	f1 1c       	adc	r15, r1
     4f4:	e0 1a       	sub	r14, r16
     4f6:	f1 0a       	sbc	r15, r17
     4f8:	41 e0       	ldi	r20, 0x01	; 1
     4fa:	50 e0       	ldi	r21, 0x00	; 0
     4fc:	4c 0f       	add	r20, r28
     4fe:	5d 1f       	adc	r21, r29
     500:	e4 0e       	add	r14, r20
     502:	f5 1e       	adc	r15, r21
     504:	26 01       	movw	r4, r12
     506:	4b 18       	sub	r4, r11
     508:	51 08       	sbc	r5, r1
     50a:	89 2d       	mov	r24, r9
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	aa 24       	eor	r10, r10
     510:	bb 24       	eor	r11, r11
     512:	a8 1a       	sub	r10, r24
     514:	b9 0a       	sbc	r11, r25
     516:	5f ef       	ldi	r21, 0xFF	; 255
     518:	0f 3f       	cpi	r16, 0xFF	; 255
     51a:	15 07       	cpc	r17, r21
     51c:	29 f4       	brne	.+10     	; 0x528 <vfprintf+0x36c>
     51e:	8e e2       	ldi	r24, 0x2E	; 46
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	b3 01       	movw	r22, r6
     524:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     528:	c0 16       	cp	r12, r16
     52a:	d1 06       	cpc	r13, r17
     52c:	34 f0       	brlt	.+12     	; 0x53a <vfprintf+0x37e>
     52e:	40 16       	cp	r4, r16
     530:	51 06       	cpc	r5, r17
     532:	1c f4       	brge	.+6      	; 0x53a <vfprintf+0x37e>
     534:	f7 01       	movw	r30, r14
     536:	80 81       	ld	r24, Z
     538:	01 c0       	rjmp	.+2      	; 0x53c <vfprintf+0x380>
     53a:	80 e3       	ldi	r24, 0x30	; 48
     53c:	01 50       	subi	r16, 0x01	; 1
     53e:	10 40       	sbci	r17, 0x00	; 0
     540:	08 94       	sec
     542:	e1 1c       	adc	r14, r1
     544:	f1 1c       	adc	r15, r1
     546:	0a 15       	cp	r16, r10
     548:	1b 05       	cpc	r17, r11
     54a:	2c f0       	brlt	.+10     	; 0x556 <vfprintf+0x39a>
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	b3 01       	movw	r22, r6
     550:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     554:	e0 cf       	rjmp	.-64     	; 0x516 <vfprintf+0x35a>
     556:	0c 15       	cp	r16, r12
     558:	1d 05       	cpc	r17, r13
     55a:	39 f4       	brne	.+14     	; 0x56a <vfprintf+0x3ae>
     55c:	9a 81       	ldd	r25, Y+2	; 0x02
     55e:	96 33       	cpi	r25, 0x36	; 54
     560:	18 f4       	brcc	.+6      	; 0x568 <vfprintf+0x3ac>
     562:	95 33       	cpi	r25, 0x35	; 53
     564:	11 f4       	brne	.+4      	; 0x56a <vfprintf+0x3ae>
     566:	24 fe       	sbrs	r2, 4
     568:	81 e3       	ldi	r24, 0x31	; 49
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	4b c0       	rjmp	.+150    	; 0x604 <vfprintf+0x448>
     56e:	8a 81       	ldd	r24, Y+2	; 0x02
     570:	81 33       	cpi	r24, 0x31	; 49
     572:	09 f0       	breq	.+2      	; 0x576 <vfprintf+0x3ba>
     574:	0f 7e       	andi	r16, 0xEF	; 239
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	b3 01       	movw	r22, r6
     57a:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     57e:	99 20       	and	r9, r9
     580:	a1 f0       	breq	.+40     	; 0x5aa <vfprintf+0x3ee>
     582:	8e e2       	ldi	r24, 0x2E	; 46
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	b3 01       	movw	r22, r6
     588:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     58c:	12 e0       	ldi	r17, 0x02	; 2
     58e:	e1 e0       	ldi	r30, 0x01	; 1
     590:	f0 e0       	ldi	r31, 0x00	; 0
     592:	ec 0f       	add	r30, r28
     594:	fd 1f       	adc	r31, r29
     596:	e1 0f       	add	r30, r17
     598:	f1 1d       	adc	r31, r1
     59a:	1f 5f       	subi	r17, 0xFF	; 255
     59c:	80 81       	ld	r24, Z
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	b3 01       	movw	r22, r6
     5a2:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     5a6:	9a 94       	dec	r9
     5a8:	91 f7       	brne	.-28     	; 0x58e <vfprintf+0x3d2>
     5aa:	44 fc       	sbrc	r4, 4
     5ac:	03 c0       	rjmp	.+6      	; 0x5b4 <vfprintf+0x3f8>
     5ae:	85 e6       	ldi	r24, 0x65	; 101
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <vfprintf+0x3fc>
     5b4:	85 e4       	ldi	r24, 0x45	; 69
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	b3 01       	movw	r22, r6
     5ba:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     5be:	d7 fc       	sbrc	r13, 7
     5c0:	05 c0       	rjmp	.+10     	; 0x5cc <vfprintf+0x410>
     5c2:	c1 14       	cp	r12, r1
     5c4:	d1 04       	cpc	r13, r1
     5c6:	41 f4       	brne	.+16     	; 0x5d8 <vfprintf+0x41c>
     5c8:	04 ff       	sbrs	r16, 4
     5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <vfprintf+0x41c>
     5cc:	d0 94       	com	r13
     5ce:	c1 94       	neg	r12
     5d0:	d1 08       	sbc	r13, r1
     5d2:	d3 94       	inc	r13
     5d4:	8d e2       	ldi	r24, 0x2D	; 45
     5d6:	01 c0       	rjmp	.+2      	; 0x5da <vfprintf+0x41e>
     5d8:	8b e2       	ldi	r24, 0x2B	; 43
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	b3 01       	movw	r22, r6
     5de:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     5e2:	80 e3       	ldi	r24, 0x30	; 48
     5e4:	05 c0       	rjmp	.+10     	; 0x5f0 <vfprintf+0x434>
     5e6:	8f 5f       	subi	r24, 0xFF	; 255
     5e8:	26 ef       	ldi	r18, 0xF6	; 246
     5ea:	3f ef       	ldi	r19, 0xFF	; 255
     5ec:	c2 0e       	add	r12, r18
     5ee:	d3 1e       	adc	r13, r19
     5f0:	3a e0       	ldi	r19, 0x0A	; 10
     5f2:	c3 16       	cp	r12, r19
     5f4:	d1 04       	cpc	r13, r1
     5f6:	bc f7       	brge	.-18     	; 0x5e6 <vfprintf+0x42a>
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	b3 01       	movw	r22, r6
     5fc:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     600:	c6 01       	movw	r24, r12
     602:	c0 96       	adiw	r24, 0x30	; 48
     604:	b3 01       	movw	r22, r6
     606:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     60a:	cc 84       	ldd	r12, Y+12	; 0x0c
     60c:	dd 84       	ldd	r13, Y+13	; 0x0d
     60e:	52 c1       	rjmp	.+676    	; 0x8b4 <vfprintf+0x6f8>
     610:	93 36       	cpi	r25, 0x63	; 99
     612:	31 f0       	breq	.+12     	; 0x620 <vfprintf+0x464>
     614:	93 37       	cpi	r25, 0x73	; 115
     616:	99 f0       	breq	.+38     	; 0x63e <vfprintf+0x482>
     618:	93 35       	cpi	r25, 0x53	; 83
     61a:	09 f0       	breq	.+2      	; 0x61e <vfprintf+0x462>
     61c:	59 c0       	rjmp	.+178    	; 0x6d0 <vfprintf+0x514>
     61e:	23 c0       	rjmp	.+70     	; 0x666 <vfprintf+0x4aa>
     620:	f6 01       	movw	r30, r12
     622:	80 81       	ld	r24, Z
     624:	89 83       	std	Y+1, r24	; 0x01
     626:	5e 01       	movw	r10, r28
     628:	08 94       	sec
     62a:	a1 1c       	adc	r10, r1
     62c:	b1 1c       	adc	r11, r1
     62e:	22 e0       	ldi	r18, 0x02	; 2
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	c2 0e       	add	r12, r18
     634:	d3 1e       	adc	r13, r19
     636:	21 e0       	ldi	r18, 0x01	; 1
     638:	e2 2e       	mov	r14, r18
     63a:	f1 2c       	mov	r15, r1
     63c:	12 c0       	rjmp	.+36     	; 0x662 <vfprintf+0x4a6>
     63e:	f6 01       	movw	r30, r12
     640:	a0 80       	ld	r10, Z
     642:	b1 80       	ldd	r11, Z+1	; 0x01
     644:	16 fd       	sbrc	r17, 6
     646:	03 c0       	rjmp	.+6      	; 0x64e <vfprintf+0x492>
     648:	6f ef       	ldi	r22, 0xFF	; 255
     64a:	7f ef       	ldi	r23, 0xFF	; 255
     64c:	02 c0       	rjmp	.+4      	; 0x652 <vfprintf+0x496>
     64e:	69 2d       	mov	r22, r9
     650:	70 e0       	ldi	r23, 0x00	; 0
     652:	22 e0       	ldi	r18, 0x02	; 2
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	c2 0e       	add	r12, r18
     658:	d3 1e       	adc	r13, r19
     65a:	c5 01       	movw	r24, r10
     65c:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <strnlen>
     660:	7c 01       	movw	r14, r24
     662:	1f 77       	andi	r17, 0x7F	; 127
     664:	13 c0       	rjmp	.+38     	; 0x68c <vfprintf+0x4d0>
     666:	f6 01       	movw	r30, r12
     668:	a0 80       	ld	r10, Z
     66a:	b1 80       	ldd	r11, Z+1	; 0x01
     66c:	16 fd       	sbrc	r17, 6
     66e:	03 c0       	rjmp	.+6      	; 0x676 <vfprintf+0x4ba>
     670:	6f ef       	ldi	r22, 0xFF	; 255
     672:	7f ef       	ldi	r23, 0xFF	; 255
     674:	02 c0       	rjmp	.+4      	; 0x67a <vfprintf+0x4be>
     676:	69 2d       	mov	r22, r9
     678:	70 e0       	ldi	r23, 0x00	; 0
     67a:	22 e0       	ldi	r18, 0x02	; 2
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	c2 0e       	add	r12, r18
     680:	d3 1e       	adc	r13, r19
     682:	c5 01       	movw	r24, r10
     684:	0e 94 cc 0b 	call	0x1798	; 0x1798 <strnlen_P>
     688:	7c 01       	movw	r14, r24
     68a:	10 68       	ori	r17, 0x80	; 128
     68c:	13 ff       	sbrs	r17, 3
     68e:	07 c0       	rjmp	.+14     	; 0x69e <vfprintf+0x4e2>
     690:	1b c0       	rjmp	.+54     	; 0x6c8 <vfprintf+0x50c>
     692:	80 e2       	ldi	r24, 0x20	; 32
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	b3 01       	movw	r22, r6
     698:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     69c:	8a 94       	dec	r8
     69e:	88 2d       	mov	r24, r8
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	e8 16       	cp	r14, r24
     6a4:	f9 06       	cpc	r15, r25
     6a6:	a8 f3       	brcs	.-22     	; 0x692 <vfprintf+0x4d6>
     6a8:	0f c0       	rjmp	.+30     	; 0x6c8 <vfprintf+0x50c>
     6aa:	f5 01       	movw	r30, r10
     6ac:	17 fd       	sbrc	r17, 7
     6ae:	85 91       	lpm	r24, Z+
     6b0:	17 ff       	sbrs	r17, 7
     6b2:	81 91       	ld	r24, Z+
     6b4:	5f 01       	movw	r10, r30
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	b3 01       	movw	r22, r6
     6ba:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     6be:	81 10       	cpse	r8, r1
     6c0:	8a 94       	dec	r8
     6c2:	08 94       	sec
     6c4:	e1 08       	sbc	r14, r1
     6c6:	f1 08       	sbc	r15, r1
     6c8:	e1 14       	cp	r14, r1
     6ca:	f1 04       	cpc	r15, r1
     6cc:	71 f7       	brne	.-36     	; 0x6aa <vfprintf+0x4ee>
     6ce:	f2 c0       	rjmp	.+484    	; 0x8b4 <vfprintf+0x6f8>
     6d0:	94 36       	cpi	r25, 0x64	; 100
     6d2:	11 f0       	breq	.+4      	; 0x6d8 <vfprintf+0x51c>
     6d4:	99 36       	cpi	r25, 0x69	; 105
     6d6:	89 f5       	brne	.+98     	; 0x73a <vfprintf+0x57e>
     6d8:	17 ff       	sbrs	r17, 7
     6da:	08 c0       	rjmp	.+16     	; 0x6ec <vfprintf+0x530>
     6dc:	f6 01       	movw	r30, r12
     6de:	20 81       	ld	r18, Z
     6e0:	31 81       	ldd	r19, Z+1	; 0x01
     6e2:	42 81       	ldd	r20, Z+2	; 0x02
     6e4:	53 81       	ldd	r21, Z+3	; 0x03
     6e6:	84 e0       	ldi	r24, 0x04	; 4
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	0a c0       	rjmp	.+20     	; 0x700 <vfprintf+0x544>
     6ec:	f6 01       	movw	r30, r12
     6ee:	80 81       	ld	r24, Z
     6f0:	91 81       	ldd	r25, Z+1	; 0x01
     6f2:	9c 01       	movw	r18, r24
     6f4:	44 27       	eor	r20, r20
     6f6:	37 fd       	sbrc	r19, 7
     6f8:	40 95       	com	r20
     6fa:	54 2f       	mov	r21, r20
     6fc:	82 e0       	ldi	r24, 0x02	; 2
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	c8 0e       	add	r12, r24
     702:	d9 1e       	adc	r13, r25
     704:	9f e6       	ldi	r25, 0x6F	; 111
     706:	f9 2e       	mov	r15, r25
     708:	f1 22       	and	r15, r17
     70a:	57 ff       	sbrs	r21, 7
     70c:	09 c0       	rjmp	.+18     	; 0x720 <vfprintf+0x564>
     70e:	50 95       	com	r21
     710:	40 95       	com	r20
     712:	30 95       	com	r19
     714:	21 95       	neg	r18
     716:	3f 4f       	sbci	r19, 0xFF	; 255
     718:	4f 4f       	sbci	r20, 0xFF	; 255
     71a:	5f 4f       	sbci	r21, 0xFF	; 255
     71c:	90 e8       	ldi	r25, 0x80	; 128
     71e:	f9 2a       	or	r15, r25
     720:	ca 01       	movw	r24, r20
     722:	b9 01       	movw	r22, r18
     724:	ae 01       	movw	r20, r28
     726:	4f 5f       	subi	r20, 0xFF	; 255
     728:	5f 4f       	sbci	r21, 0xFF	; 255
     72a:	2a e0       	ldi	r18, 0x0A	; 10
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	0e 94 47 0c 	call	0x188e	; 0x188e <__ultoa_invert>
     732:	e8 2e       	mov	r14, r24
     734:	e8 89       	ldd	r30, Y+16	; 0x10
     736:	ee 1a       	sub	r14, r30
     738:	41 c0       	rjmp	.+130    	; 0x7bc <vfprintf+0x600>
     73a:	95 37       	cpi	r25, 0x75	; 117
     73c:	21 f4       	brne	.+8      	; 0x746 <vfprintf+0x58a>
     73e:	1f 7e       	andi	r17, 0xEF	; 239
     740:	2a e0       	ldi	r18, 0x0A	; 10
     742:	30 e0       	ldi	r19, 0x00	; 0
     744:	1c c0       	rjmp	.+56     	; 0x77e <vfprintf+0x5c2>
     746:	19 7f       	andi	r17, 0xF9	; 249
     748:	9f 36       	cpi	r25, 0x6F	; 111
     74a:	61 f0       	breq	.+24     	; 0x764 <vfprintf+0x5a8>
     74c:	90 37       	cpi	r25, 0x70	; 112
     74e:	20 f4       	brcc	.+8      	; 0x758 <vfprintf+0x59c>
     750:	98 35       	cpi	r25, 0x58	; 88
     752:	09 f0       	breq	.+2      	; 0x756 <vfprintf+0x59a>
     754:	b2 c0       	rjmp	.+356    	; 0x8ba <vfprintf+0x6fe>
     756:	0f c0       	rjmp	.+30     	; 0x776 <vfprintf+0x5ba>
     758:	90 37       	cpi	r25, 0x70	; 112
     75a:	39 f0       	breq	.+14     	; 0x76a <vfprintf+0x5ae>
     75c:	98 37       	cpi	r25, 0x78	; 120
     75e:	09 f0       	breq	.+2      	; 0x762 <vfprintf+0x5a6>
     760:	ac c0       	rjmp	.+344    	; 0x8ba <vfprintf+0x6fe>
     762:	04 c0       	rjmp	.+8      	; 0x76c <vfprintf+0x5b0>
     764:	28 e0       	ldi	r18, 0x08	; 8
     766:	30 e0       	ldi	r19, 0x00	; 0
     768:	0a c0       	rjmp	.+20     	; 0x77e <vfprintf+0x5c2>
     76a:	10 61       	ori	r17, 0x10	; 16
     76c:	14 fd       	sbrc	r17, 4
     76e:	14 60       	ori	r17, 0x04	; 4
     770:	20 e1       	ldi	r18, 0x10	; 16
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	04 c0       	rjmp	.+8      	; 0x77e <vfprintf+0x5c2>
     776:	14 fd       	sbrc	r17, 4
     778:	16 60       	ori	r17, 0x06	; 6
     77a:	20 e1       	ldi	r18, 0x10	; 16
     77c:	32 e0       	ldi	r19, 0x02	; 2
     77e:	17 ff       	sbrs	r17, 7
     780:	08 c0       	rjmp	.+16     	; 0x792 <vfprintf+0x5d6>
     782:	f6 01       	movw	r30, r12
     784:	60 81       	ld	r22, Z
     786:	71 81       	ldd	r23, Z+1	; 0x01
     788:	82 81       	ldd	r24, Z+2	; 0x02
     78a:	93 81       	ldd	r25, Z+3	; 0x03
     78c:	44 e0       	ldi	r20, 0x04	; 4
     78e:	50 e0       	ldi	r21, 0x00	; 0
     790:	08 c0       	rjmp	.+16     	; 0x7a2 <vfprintf+0x5e6>
     792:	f6 01       	movw	r30, r12
     794:	80 81       	ld	r24, Z
     796:	91 81       	ldd	r25, Z+1	; 0x01
     798:	bc 01       	movw	r22, r24
     79a:	80 e0       	ldi	r24, 0x00	; 0
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	42 e0       	ldi	r20, 0x02	; 2
     7a0:	50 e0       	ldi	r21, 0x00	; 0
     7a2:	c4 0e       	add	r12, r20
     7a4:	d5 1e       	adc	r13, r21
     7a6:	ae 01       	movw	r20, r28
     7a8:	4f 5f       	subi	r20, 0xFF	; 255
     7aa:	5f 4f       	sbci	r21, 0xFF	; 255
     7ac:	0e 94 47 0c 	call	0x188e	; 0x188e <__ultoa_invert>
     7b0:	e8 2e       	mov	r14, r24
     7b2:	58 89       	ldd	r21, Y+16	; 0x10
     7b4:	e5 1a       	sub	r14, r21
     7b6:	8f e7       	ldi	r24, 0x7F	; 127
     7b8:	f8 2e       	mov	r15, r24
     7ba:	f1 22       	and	r15, r17
     7bc:	f6 fe       	sbrs	r15, 6
     7be:	0b c0       	rjmp	.+22     	; 0x7d6 <vfprintf+0x61a>
     7c0:	8e ef       	ldi	r24, 0xFE	; 254
     7c2:	f8 22       	and	r15, r24
     7c4:	e9 14       	cp	r14, r9
     7c6:	38 f4       	brcc	.+14     	; 0x7d6 <vfprintf+0x61a>
     7c8:	f4 fe       	sbrs	r15, 4
     7ca:	07 c0       	rjmp	.+14     	; 0x7da <vfprintf+0x61e>
     7cc:	f2 fc       	sbrc	r15, 2
     7ce:	05 c0       	rjmp	.+10     	; 0x7da <vfprintf+0x61e>
     7d0:	9f ee       	ldi	r25, 0xEF	; 239
     7d2:	f9 22       	and	r15, r25
     7d4:	02 c0       	rjmp	.+4      	; 0x7da <vfprintf+0x61e>
     7d6:	1e 2d       	mov	r17, r14
     7d8:	01 c0       	rjmp	.+2      	; 0x7dc <vfprintf+0x620>
     7da:	19 2d       	mov	r17, r9
     7dc:	f4 fe       	sbrs	r15, 4
     7de:	0d c0       	rjmp	.+26     	; 0x7fa <vfprintf+0x63e>
     7e0:	fe 01       	movw	r30, r28
     7e2:	ee 0d       	add	r30, r14
     7e4:	f1 1d       	adc	r31, r1
     7e6:	80 81       	ld	r24, Z
     7e8:	80 33       	cpi	r24, 0x30	; 48
     7ea:	19 f4       	brne	.+6      	; 0x7f2 <vfprintf+0x636>
     7ec:	e9 ee       	ldi	r30, 0xE9	; 233
     7ee:	fe 22       	and	r15, r30
     7f0:	08 c0       	rjmp	.+16     	; 0x802 <vfprintf+0x646>
     7f2:	1f 5f       	subi	r17, 0xFF	; 255
     7f4:	f2 fe       	sbrs	r15, 2
     7f6:	05 c0       	rjmp	.+10     	; 0x802 <vfprintf+0x646>
     7f8:	03 c0       	rjmp	.+6      	; 0x800 <vfprintf+0x644>
     7fa:	8f 2d       	mov	r24, r15
     7fc:	86 78       	andi	r24, 0x86	; 134
     7fe:	09 f0       	breq	.+2      	; 0x802 <vfprintf+0x646>
     800:	1f 5f       	subi	r17, 0xFF	; 255
     802:	0f 2d       	mov	r16, r15
     804:	f3 fc       	sbrc	r15, 3
     806:	14 c0       	rjmp	.+40     	; 0x830 <vfprintf+0x674>
     808:	f0 fe       	sbrs	r15, 0
     80a:	0f c0       	rjmp	.+30     	; 0x82a <vfprintf+0x66e>
     80c:	18 15       	cp	r17, r8
     80e:	10 f0       	brcs	.+4      	; 0x814 <vfprintf+0x658>
     810:	9e 2c       	mov	r9, r14
     812:	0b c0       	rjmp	.+22     	; 0x82a <vfprintf+0x66e>
     814:	9e 2c       	mov	r9, r14
     816:	98 0c       	add	r9, r8
     818:	91 1a       	sub	r9, r17
     81a:	18 2d       	mov	r17, r8
     81c:	06 c0       	rjmp	.+12     	; 0x82a <vfprintf+0x66e>
     81e:	80 e2       	ldi	r24, 0x20	; 32
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	b3 01       	movw	r22, r6
     824:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     828:	1f 5f       	subi	r17, 0xFF	; 255
     82a:	18 15       	cp	r17, r8
     82c:	c0 f3       	brcs	.-16     	; 0x81e <vfprintf+0x662>
     82e:	04 c0       	rjmp	.+8      	; 0x838 <vfprintf+0x67c>
     830:	18 15       	cp	r17, r8
     832:	10 f4       	brcc	.+4      	; 0x838 <vfprintf+0x67c>
     834:	81 1a       	sub	r8, r17
     836:	01 c0       	rjmp	.+2      	; 0x83a <vfprintf+0x67e>
     838:	88 24       	eor	r8, r8
     83a:	04 ff       	sbrs	r16, 4
     83c:	0f c0       	rjmp	.+30     	; 0x85c <vfprintf+0x6a0>
     83e:	80 e3       	ldi	r24, 0x30	; 48
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	b3 01       	movw	r22, r6
     844:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     848:	02 ff       	sbrs	r16, 2
     84a:	1d c0       	rjmp	.+58     	; 0x886 <vfprintf+0x6ca>
     84c:	01 fd       	sbrc	r16, 1
     84e:	03 c0       	rjmp	.+6      	; 0x856 <vfprintf+0x69a>
     850:	88 e7       	ldi	r24, 0x78	; 120
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	0e c0       	rjmp	.+28     	; 0x872 <vfprintf+0x6b6>
     856:	88 e5       	ldi	r24, 0x58	; 88
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	0b c0       	rjmp	.+22     	; 0x872 <vfprintf+0x6b6>
     85c:	80 2f       	mov	r24, r16
     85e:	86 78       	andi	r24, 0x86	; 134
     860:	91 f0       	breq	.+36     	; 0x886 <vfprintf+0x6ca>
     862:	01 ff       	sbrs	r16, 1
     864:	02 c0       	rjmp	.+4      	; 0x86a <vfprintf+0x6ae>
     866:	8b e2       	ldi	r24, 0x2B	; 43
     868:	01 c0       	rjmp	.+2      	; 0x86c <vfprintf+0x6b0>
     86a:	80 e2       	ldi	r24, 0x20	; 32
     86c:	f7 fc       	sbrc	r15, 7
     86e:	8d e2       	ldi	r24, 0x2D	; 45
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	b3 01       	movw	r22, r6
     874:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     878:	06 c0       	rjmp	.+12     	; 0x886 <vfprintf+0x6ca>
     87a:	80 e3       	ldi	r24, 0x30	; 48
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	b3 01       	movw	r22, r6
     880:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     884:	9a 94       	dec	r9
     886:	e9 14       	cp	r14, r9
     888:	c0 f3       	brcs	.-16     	; 0x87a <vfprintf+0x6be>
     88a:	ea 94       	dec	r14
     88c:	e1 e0       	ldi	r30, 0x01	; 1
     88e:	f0 e0       	ldi	r31, 0x00	; 0
     890:	ec 0f       	add	r30, r28
     892:	fd 1f       	adc	r31, r29
     894:	ee 0d       	add	r30, r14
     896:	f1 1d       	adc	r31, r1
     898:	80 81       	ld	r24, Z
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	b3 01       	movw	r22, r6
     89e:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     8a2:	ee 20       	and	r14, r14
     8a4:	91 f7       	brne	.-28     	; 0x88a <vfprintf+0x6ce>
     8a6:	06 c0       	rjmp	.+12     	; 0x8b4 <vfprintf+0x6f8>
     8a8:	80 e2       	ldi	r24, 0x20	; 32
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	b3 01       	movw	r22, r6
     8ae:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <fputc>
     8b2:	8a 94       	dec	r8
     8b4:	88 20       	and	r8, r8
     8b6:	c1 f7       	brne	.-16     	; 0x8a8 <vfprintf+0x6ec>
     8b8:	99 cc       	rjmp	.-1742   	; 0x1ec <vfprintf+0x30>
     8ba:	f3 01       	movw	r30, r6
     8bc:	66 81       	ldd	r22, Z+6	; 0x06
     8be:	77 81       	ldd	r23, Z+7	; 0x07
     8c0:	cb 01       	movw	r24, r22
     8c2:	61 96       	adiw	r28, 0x11	; 17
     8c4:	e2 e1       	ldi	r30, 0x12	; 18
     8c6:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__epilogue_restores__>

000008ca <debugUSARTInit>:


#include <RBELib/RBELib.h>
#include <avr/io.h>

void debugUSARTInit(unsigned long baudrate) {
     8ca:	0f 93       	push	r16
     8cc:	1f 93       	push	r17
     8ce:	df 93       	push	r29
     8d0:	cf 93       	push	r28
     8d2:	00 d0       	rcall	.+0      	; 0x8d4 <debugUSARTInit+0xa>
     8d4:	00 d0       	rcall	.+0      	; 0x8d6 <debugUSARTInit+0xc>
     8d6:	cd b7       	in	r28, 0x3d	; 61
     8d8:	de b7       	in	r29, 0x3e	; 62
     8da:	69 83       	std	Y+1, r22	; 0x01
     8dc:	7a 83       	std	Y+2, r23	; 0x02
     8de:	8b 83       	std	Y+3, r24	; 0x03
     8e0:	9c 83       	std	Y+4, r25	; 0x04
	/*Set baud rate */
	 UBRR0H = (unsigned char)((18432000/(16 * (baudrate))-1)>>8);
     8e2:	05 ec       	ldi	r16, 0xC5	; 197
     8e4:	10 e0       	ldi	r17, 0x00	; 0
     8e6:	89 81       	ldd	r24, Y+1	; 0x01
     8e8:	9a 81       	ldd	r25, Y+2	; 0x02
     8ea:	ab 81       	ldd	r26, Y+3	; 0x03
     8ec:	bc 81       	ldd	r27, Y+4	; 0x04
     8ee:	88 0f       	add	r24, r24
     8f0:	99 1f       	adc	r25, r25
     8f2:	aa 1f       	adc	r26, r26
     8f4:	bb 1f       	adc	r27, r27
     8f6:	88 0f       	add	r24, r24
     8f8:	99 1f       	adc	r25, r25
     8fa:	aa 1f       	adc	r26, r26
     8fc:	bb 1f       	adc	r27, r27
     8fe:	88 0f       	add	r24, r24
     900:	99 1f       	adc	r25, r25
     902:	aa 1f       	adc	r26, r26
     904:	bb 1f       	adc	r27, r27
     906:	88 0f       	add	r24, r24
     908:	99 1f       	adc	r25, r25
     90a:	aa 1f       	adc	r26, r26
     90c:	bb 1f       	adc	r27, r27
     90e:	9c 01       	movw	r18, r24
     910:	ad 01       	movw	r20, r26
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e4       	ldi	r25, 0x40	; 64
     916:	a9 e1       	ldi	r26, 0x19	; 25
     918:	b1 e0       	ldi	r27, 0x01	; 1
     91a:	bc 01       	movw	r22, r24
     91c:	cd 01       	movw	r24, r26
     91e:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__udivmodsi4>
     922:	da 01       	movw	r26, r20
     924:	c9 01       	movw	r24, r18
     926:	01 97       	sbiw	r24, 0x01	; 1
     928:	a1 09       	sbc	r26, r1
     92a:	b1 09       	sbc	r27, r1
     92c:	89 2f       	mov	r24, r25
     92e:	9a 2f       	mov	r25, r26
     930:	ab 2f       	mov	r26, r27
     932:	bb 27       	eor	r27, r27
     934:	f8 01       	movw	r30, r16
     936:	80 83       	st	Z, r24
	 UBRR0L = (unsigned char)((18432000/(16 * (baudrate))-1));
     938:	04 ec       	ldi	r16, 0xC4	; 196
     93a:	10 e0       	ldi	r17, 0x00	; 0
     93c:	89 81       	ldd	r24, Y+1	; 0x01
     93e:	9a 81       	ldd	r25, Y+2	; 0x02
     940:	ab 81       	ldd	r26, Y+3	; 0x03
     942:	bc 81       	ldd	r27, Y+4	; 0x04
     944:	88 0f       	add	r24, r24
     946:	99 1f       	adc	r25, r25
     948:	aa 1f       	adc	r26, r26
     94a:	bb 1f       	adc	r27, r27
     94c:	88 0f       	add	r24, r24
     94e:	99 1f       	adc	r25, r25
     950:	aa 1f       	adc	r26, r26
     952:	bb 1f       	adc	r27, r27
     954:	88 0f       	add	r24, r24
     956:	99 1f       	adc	r25, r25
     958:	aa 1f       	adc	r26, r26
     95a:	bb 1f       	adc	r27, r27
     95c:	88 0f       	add	r24, r24
     95e:	99 1f       	adc	r25, r25
     960:	aa 1f       	adc	r26, r26
     962:	bb 1f       	adc	r27, r27
     964:	9c 01       	movw	r18, r24
     966:	ad 01       	movw	r20, r26
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	90 e4       	ldi	r25, 0x40	; 64
     96c:	a9 e1       	ldi	r26, 0x19	; 25
     96e:	b1 e0       	ldi	r27, 0x01	; 1
     970:	bc 01       	movw	r22, r24
     972:	cd 01       	movw	r24, r26
     974:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__udivmodsi4>
     978:	da 01       	movw	r26, r20
     97a:	c9 01       	movw	r24, r18
     97c:	81 50       	subi	r24, 0x01	; 1
     97e:	f8 01       	movw	r30, r16
     980:	80 83       	st	Z, r24

	 UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     982:	e1 ec       	ldi	r30, 0xC1	; 193
     984:	f0 e0       	ldi	r31, 0x00	; 0
     986:	88 e1       	ldi	r24, 0x18	; 24
     988:	80 83       	st	Z, r24
	 /* Set frame format: 8data, 2stop bit */
	 UCSR0C = (1<<USBS0)|(3<<UCSZ00);
     98a:	e2 ec       	ldi	r30, 0xC2	; 194
     98c:	f0 e0       	ldi	r31, 0x00	; 0
     98e:	8e e0       	ldi	r24, 0x0E	; 14
     990:	80 83       	st	Z, r24

}
     992:	0f 90       	pop	r0
     994:	0f 90       	pop	r0
     996:	0f 90       	pop	r0
     998:	0f 90       	pop	r0
     99a:	cf 91       	pop	r28
     99c:	df 91       	pop	r29
     99e:	1f 91       	pop	r17
     9a0:	0f 91       	pop	r16
     9a2:	08 95       	ret

000009a4 <putCharDebug>:

void putCharDebug(char byteToSend){
     9a4:	df 93       	push	r29
     9a6:	cf 93       	push	r28
     9a8:	0f 92       	push	r0
     9aa:	cd b7       	in	r28, 0x3d	; 61
     9ac:	de b7       	in	r29, 0x3e	; 62
     9ae:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
	 while ( !( UCSR0A & (1<<UDRE0)) )
     9b0:	e0 ec       	ldi	r30, 0xC0	; 192
     9b2:	f0 e0       	ldi	r31, 0x00	; 0
     9b4:	80 81       	ld	r24, Z
     9b6:	88 2f       	mov	r24, r24
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	80 72       	andi	r24, 0x20	; 32
     9bc:	90 70       	andi	r25, 0x00	; 0
     9be:	00 97       	sbiw	r24, 0x00	; 0
     9c0:	b9 f3       	breq	.-18     	; 0x9b0 <putCharDebug+0xc>
	 ;
	 /* Put data into buffer, sends the data */
	 UDR0 = byteToSend;
     9c2:	e6 ec       	ldi	r30, 0xC6	; 198
     9c4:	f0 e0       	ldi	r31, 0x00	; 0
     9c6:	89 81       	ldd	r24, Y+1	; 0x01
     9c8:	80 83       	st	Z, r24


}
     9ca:	0f 90       	pop	r0
     9cc:	cf 91       	pop	r28
     9ce:	df 91       	pop	r29
     9d0:	08 95       	ret

000009d2 <getCharDebug>:

unsigned char getCharDebug(void) {
     9d2:	df 93       	push	r29
     9d4:	cf 93       	push	r28
     9d6:	cd b7       	in	r28, 0x3d	; 61
     9d8:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	 while ( !(UCSR0A & (1<<RXC0)) )
     9da:	e0 ec       	ldi	r30, 0xC0	; 192
     9dc:	f0 e0       	ldi	r31, 0x00	; 0
     9de:	80 81       	ld	r24, Z
     9e0:	88 23       	and	r24, r24
     9e2:	dc f7       	brge	.-10     	; 0x9da <getCharDebug+0x8>
	 ;
	 /* Get and return received data from buffer */
	 return UDR0;
     9e4:	e6 ec       	ldi	r30, 0xC6	; 198
     9e6:	f0 e0       	ldi	r31, 0x00	; 0
     9e8:	80 81       	ld	r24, Z

}
     9ea:	cf 91       	pop	r28
     9ec:	df 91       	pop	r29
     9ee:	08 95       	ret

000009f0 <blinkDebug>:
#define POT_CHANNEL 4

unsigned char mode, tog;
int maxCount;

void blinkDebug() {
     9f0:	df 93       	push	r29
     9f2:	cf 93       	push	r28
     9f4:	cd b7       	in	r28, 0x3d	; 61
     9f6:	de b7       	in	r29, 0x3e	; 62
     9f8:	6c 97       	sbiw	r28, 0x1c	; 28
     9fa:	0f b6       	in	r0, 0x3f	; 63
     9fc:	f8 94       	cli
     9fe:	de bf       	out	0x3e, r29	; 62
     a00:	0f be       	out	0x3f, r0	; 63
     a02:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF;
     a04:	e4 e2       	ldi	r30, 0x24	; 36
     a06:	f0 e0       	ldi	r31, 0x00	; 0
     a08:	8f ef       	ldi	r24, 0xFF	; 255
     a0a:	80 83       	st	Z, r24
	PORTB = 0xFF;
     a0c:	e5 e2       	ldi	r30, 0x25	; 37
     a0e:	f0 e0       	ldi	r31, 0x00	; 0
     a10:	8f ef       	ldi	r24, 0xFF	; 255
     a12:	80 83       	st	Z, r24
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	aa e7       	ldi	r26, 0x7A	; 122
     a1a:	b4 e4       	ldi	r27, 0x44	; 68
     a1c:	89 8f       	std	Y+25, r24	; 0x19
     a1e:	9a 8f       	std	Y+26, r25	; 0x1a
     a20:	ab 8f       	std	Y+27, r26	; 0x1b
     a22:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     a24:	69 8d       	ldd	r22, Y+25	; 0x19
     a26:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a28:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a2a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a2c:	20 e0       	ldi	r18, 0x00	; 0
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	40 e9       	ldi	r20, 0x90	; 144
     a32:	55 e4       	ldi	r21, 0x45	; 69
     a34:	0e 94 10 0a 	call	0x1420	; 0x1420 <__mulsf3>
     a38:	dc 01       	movw	r26, r24
     a3a:	cb 01       	movw	r24, r22
     a3c:	8d 8b       	std	Y+21, r24	; 0x15
     a3e:	9e 8b       	std	Y+22, r25	; 0x16
     a40:	af 8b       	std	Y+23, r26	; 0x17
     a42:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     a44:	6d 89       	ldd	r22, Y+21	; 0x15
     a46:	7e 89       	ldd	r23, Y+22	; 0x16
     a48:	8f 89       	ldd	r24, Y+23	; 0x17
     a4a:	98 8d       	ldd	r25, Y+24	; 0x18
     a4c:	20 e0       	ldi	r18, 0x00	; 0
     a4e:	30 e0       	ldi	r19, 0x00	; 0
     a50:	40 e8       	ldi	r20, 0x80	; 128
     a52:	5f e3       	ldi	r21, 0x3F	; 63
     a54:	0e 94 4d 09 	call	0x129a	; 0x129a <__cmpsf2>
     a58:	88 23       	and	r24, r24
     a5a:	2c f4       	brge	.+10     	; 0xa66 <blinkDebug+0x76>
		__ticks = 1;
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	9c 8b       	std	Y+20, r25	; 0x14
     a62:	8b 8b       	std	Y+19, r24	; 0x13
     a64:	3f c0       	rjmp	.+126    	; 0xae4 <blinkDebug+0xf4>
	else if (__tmp > 65535)
     a66:	6d 89       	ldd	r22, Y+21	; 0x15
     a68:	7e 89       	ldd	r23, Y+22	; 0x16
     a6a:	8f 89       	ldd	r24, Y+23	; 0x17
     a6c:	98 8d       	ldd	r25, Y+24	; 0x18
     a6e:	20 e0       	ldi	r18, 0x00	; 0
     a70:	3f ef       	ldi	r19, 0xFF	; 255
     a72:	4f e7       	ldi	r20, 0x7F	; 127
     a74:	57 e4       	ldi	r21, 0x47	; 71
     a76:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__gesf2>
     a7a:	18 16       	cp	r1, r24
     a7c:	4c f5       	brge	.+82     	; 0xad0 <blinkDebug+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a7e:	69 8d       	ldd	r22, Y+25	; 0x19
     a80:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a82:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a84:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 e2       	ldi	r20, 0x20	; 32
     a8c:	51 e4       	ldi	r21, 0x41	; 65
     a8e:	0e 94 10 0a 	call	0x1420	; 0x1420 <__mulsf3>
     a92:	dc 01       	movw	r26, r24
     a94:	cb 01       	movw	r24, r22
     a96:	bc 01       	movw	r22, r24
     a98:	cd 01       	movw	r24, r26
     a9a:	0e 94 56 09 	call	0x12ac	; 0x12ac <__fixunssfsi>
     a9e:	dc 01       	movw	r26, r24
     aa0:	cb 01       	movw	r24, r22
     aa2:	9c 8b       	std	Y+20, r25	; 0x14
     aa4:	8b 8b       	std	Y+19, r24	; 0x13
     aa6:	0f c0       	rjmp	.+30     	; 0xac6 <blinkDebug+0xd6>
     aa8:	8c ec       	ldi	r24, 0xCC	; 204
     aaa:	91 e0       	ldi	r25, 0x01	; 1
     aac:	9a 8b       	std	Y+18, r25	; 0x12
     aae:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     ab0:	89 89       	ldd	r24, Y+17	; 0x11
     ab2:	9a 89       	ldd	r25, Y+18	; 0x12
     ab4:	01 97       	sbiw	r24, 0x01	; 1
     ab6:	f1 f7       	brne	.-4      	; 0xab4 <blinkDebug+0xc4>
     ab8:	9a 8b       	std	Y+18, r25	; 0x12
     aba:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     abc:	8b 89       	ldd	r24, Y+19	; 0x13
     abe:	9c 89       	ldd	r25, Y+20	; 0x14
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	9c 8b       	std	Y+20, r25	; 0x14
     ac4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ac6:	8b 89       	ldd	r24, Y+19	; 0x13
     ac8:	9c 89       	ldd	r25, Y+20	; 0x14
     aca:	00 97       	sbiw	r24, 0x00	; 0
     acc:	69 f7       	brne	.-38     	; 0xaa8 <blinkDebug+0xb8>
     ace:	14 c0       	rjmp	.+40     	; 0xaf8 <blinkDebug+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ad0:	6d 89       	ldd	r22, Y+21	; 0x15
     ad2:	7e 89       	ldd	r23, Y+22	; 0x16
     ad4:	8f 89       	ldd	r24, Y+23	; 0x17
     ad6:	98 8d       	ldd	r25, Y+24	; 0x18
     ad8:	0e 94 56 09 	call	0x12ac	; 0x12ac <__fixunssfsi>
     adc:	dc 01       	movw	r26, r24
     ade:	cb 01       	movw	r24, r22
     ae0:	9c 8b       	std	Y+20, r25	; 0x14
     ae2:	8b 8b       	std	Y+19, r24	; 0x13
     ae4:	8b 89       	ldd	r24, Y+19	; 0x13
     ae6:	9c 89       	ldd	r25, Y+20	; 0x14
     ae8:	98 8b       	std	Y+16, r25	; 0x10
     aea:	8f 87       	std	Y+15, r24	; 0x0f
     aec:	8f 85       	ldd	r24, Y+15	; 0x0f
     aee:	98 89       	ldd	r25, Y+16	; 0x10
     af0:	01 97       	sbiw	r24, 0x01	; 1
     af2:	f1 f7       	brne	.-4      	; 0xaf0 <blinkDebug+0x100>
     af4:	98 8b       	std	Y+16, r25	; 0x10
     af6:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1000);
	PORTB = 0x00;
     af8:	e5 e2       	ldi	r30, 0x25	; 37
     afa:	f0 e0       	ldi	r31, 0x00	; 0
     afc:	10 82       	st	Z, r1
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	aa e7       	ldi	r26, 0x7A	; 122
     b04:	b4 e4       	ldi	r27, 0x44	; 68
     b06:	8b 87       	std	Y+11, r24	; 0x0b
     b08:	9c 87       	std	Y+12, r25	; 0x0c
     b0a:	ad 87       	std	Y+13, r26	; 0x0d
     b0c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b0e:	6b 85       	ldd	r22, Y+11	; 0x0b
     b10:	7c 85       	ldd	r23, Y+12	; 0x0c
     b12:	8d 85       	ldd	r24, Y+13	; 0x0d
     b14:	9e 85       	ldd	r25, Y+14	; 0x0e
     b16:	20 e0       	ldi	r18, 0x00	; 0
     b18:	30 e0       	ldi	r19, 0x00	; 0
     b1a:	40 e9       	ldi	r20, 0x90	; 144
     b1c:	55 e4       	ldi	r21, 0x45	; 69
     b1e:	0e 94 10 0a 	call	0x1420	; 0x1420 <__mulsf3>
     b22:	dc 01       	movw	r26, r24
     b24:	cb 01       	movw	r24, r22
     b26:	8f 83       	std	Y+7, r24	; 0x07
     b28:	98 87       	std	Y+8, r25	; 0x08
     b2a:	a9 87       	std	Y+9, r26	; 0x09
     b2c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     b2e:	6f 81       	ldd	r22, Y+7	; 0x07
     b30:	78 85       	ldd	r23, Y+8	; 0x08
     b32:	89 85       	ldd	r24, Y+9	; 0x09
     b34:	9a 85       	ldd	r25, Y+10	; 0x0a
     b36:	20 e0       	ldi	r18, 0x00	; 0
     b38:	30 e0       	ldi	r19, 0x00	; 0
     b3a:	40 e8       	ldi	r20, 0x80	; 128
     b3c:	5f e3       	ldi	r21, 0x3F	; 63
     b3e:	0e 94 4d 09 	call	0x129a	; 0x129a <__cmpsf2>
     b42:	88 23       	and	r24, r24
     b44:	2c f4       	brge	.+10     	; 0xb50 <blinkDebug+0x160>
		__ticks = 1;
     b46:	81 e0       	ldi	r24, 0x01	; 1
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	9e 83       	std	Y+6, r25	; 0x06
     b4c:	8d 83       	std	Y+5, r24	; 0x05
     b4e:	3f c0       	rjmp	.+126    	; 0xbce <blinkDebug+0x1de>
	else if (__tmp > 65535)
     b50:	6f 81       	ldd	r22, Y+7	; 0x07
     b52:	78 85       	ldd	r23, Y+8	; 0x08
     b54:	89 85       	ldd	r24, Y+9	; 0x09
     b56:	9a 85       	ldd	r25, Y+10	; 0x0a
     b58:	20 e0       	ldi	r18, 0x00	; 0
     b5a:	3f ef       	ldi	r19, 0xFF	; 255
     b5c:	4f e7       	ldi	r20, 0x7F	; 127
     b5e:	57 e4       	ldi	r21, 0x47	; 71
     b60:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__gesf2>
     b64:	18 16       	cp	r1, r24
     b66:	4c f5       	brge	.+82     	; 0xbba <blinkDebug+0x1ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b68:	6b 85       	ldd	r22, Y+11	; 0x0b
     b6a:	7c 85       	ldd	r23, Y+12	; 0x0c
     b6c:	8d 85       	ldd	r24, Y+13	; 0x0d
     b6e:	9e 85       	ldd	r25, Y+14	; 0x0e
     b70:	20 e0       	ldi	r18, 0x00	; 0
     b72:	30 e0       	ldi	r19, 0x00	; 0
     b74:	40 e2       	ldi	r20, 0x20	; 32
     b76:	51 e4       	ldi	r21, 0x41	; 65
     b78:	0e 94 10 0a 	call	0x1420	; 0x1420 <__mulsf3>
     b7c:	dc 01       	movw	r26, r24
     b7e:	cb 01       	movw	r24, r22
     b80:	bc 01       	movw	r22, r24
     b82:	cd 01       	movw	r24, r26
     b84:	0e 94 56 09 	call	0x12ac	; 0x12ac <__fixunssfsi>
     b88:	dc 01       	movw	r26, r24
     b8a:	cb 01       	movw	r24, r22
     b8c:	9e 83       	std	Y+6, r25	; 0x06
     b8e:	8d 83       	std	Y+5, r24	; 0x05
     b90:	0f c0       	rjmp	.+30     	; 0xbb0 <blinkDebug+0x1c0>
     b92:	8c ec       	ldi	r24, 0xCC	; 204
     b94:	91 e0       	ldi	r25, 0x01	; 1
     b96:	9c 83       	std	Y+4, r25	; 0x04
     b98:	8b 83       	std	Y+3, r24	; 0x03
     b9a:	8b 81       	ldd	r24, Y+3	; 0x03
     b9c:	9c 81       	ldd	r25, Y+4	; 0x04
     b9e:	01 97       	sbiw	r24, 0x01	; 1
     ba0:	f1 f7       	brne	.-4      	; 0xb9e <blinkDebug+0x1ae>
     ba2:	9c 83       	std	Y+4, r25	; 0x04
     ba4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ba6:	8d 81       	ldd	r24, Y+5	; 0x05
     ba8:	9e 81       	ldd	r25, Y+6	; 0x06
     baa:	01 97       	sbiw	r24, 0x01	; 1
     bac:	9e 83       	std	Y+6, r25	; 0x06
     bae:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bb0:	8d 81       	ldd	r24, Y+5	; 0x05
     bb2:	9e 81       	ldd	r25, Y+6	; 0x06
     bb4:	00 97       	sbiw	r24, 0x00	; 0
     bb6:	69 f7       	brne	.-38     	; 0xb92 <blinkDebug+0x1a2>
     bb8:	14 c0       	rjmp	.+40     	; 0xbe2 <blinkDebug+0x1f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bba:	6f 81       	ldd	r22, Y+7	; 0x07
     bbc:	78 85       	ldd	r23, Y+8	; 0x08
     bbe:	89 85       	ldd	r24, Y+9	; 0x09
     bc0:	9a 85       	ldd	r25, Y+10	; 0x0a
     bc2:	0e 94 56 09 	call	0x12ac	; 0x12ac <__fixunssfsi>
     bc6:	dc 01       	movw	r26, r24
     bc8:	cb 01       	movw	r24, r22
     bca:	9e 83       	std	Y+6, r25	; 0x06
     bcc:	8d 83       	std	Y+5, r24	; 0x05
     bce:	8d 81       	ldd	r24, Y+5	; 0x05
     bd0:	9e 81       	ldd	r25, Y+6	; 0x06
     bd2:	9a 83       	std	Y+2, r25	; 0x02
     bd4:	89 83       	std	Y+1, r24	; 0x01
     bd6:	89 81       	ldd	r24, Y+1	; 0x01
     bd8:	9a 81       	ldd	r25, Y+2	; 0x02
     bda:	01 97       	sbiw	r24, 0x01	; 1
     bdc:	f1 f7       	brne	.-4      	; 0xbda <blinkDebug+0x1ea>
     bde:	9a 83       	std	Y+2, r25	; 0x02
     be0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1000);
	DDRB = 0x00;
     be2:	e4 e2       	ldi	r30, 0x24	; 36
     be4:	f0 e0       	ldi	r31, 0x00	; 0
     be6:	10 82       	st	Z, r1
}
     be8:	6c 96       	adiw	r28, 0x1c	; 28
     bea:	0f b6       	in	r0, 0x3f	; 63
     bec:	f8 94       	cli
     bee:	de bf       	out	0x3e, r29	; 62
     bf0:	0f be       	out	0x3f, r0	; 63
     bf2:	cd bf       	out	0x3d, r28	; 61
     bf4:	cf 91       	pop	r28
     bf6:	df 91       	pop	r29
     bf8:	08 95       	ret

00000bfa <printData>:

void printData(int counter, unsigned int adcVal) {
     bfa:	df 93       	push	r29
     bfc:	cf 93       	push	r28
     bfe:	cd b7       	in	r28, 0x3d	; 61
     c00:	de b7       	in	r29, 0x3e	; 62
     c02:	28 97       	sbiw	r28, 0x08	; 8
     c04:	0f b6       	in	r0, 0x3f	; 63
     c06:	f8 94       	cli
     c08:	de bf       	out	0x3e, r29	; 62
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	cd bf       	out	0x3d, r28	; 61
     c0e:	9e 83       	std	Y+6, r25	; 0x06
     c10:	8d 83       	std	Y+5, r24	; 0x05
     c12:	78 87       	std	Y+8, r23	; 0x08
     c14:	6f 83       	std	Y+7, r22	; 0x07
	// data format: "[counter],[adcVal],[potOut_mVolts],[potAngle]\n"
	int potOut_mVolts = (int) (adcVal * (5000. / 1023.));
     c16:	8f 81       	ldd	r24, Y+7	; 0x07
     c18:	98 85       	ldd	r25, Y+8	; 0x08
     c1a:	cc 01       	movw	r24, r24
     c1c:	a0 e0       	ldi	r26, 0x00	; 0
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	bc 01       	movw	r22, r24
     c22:	cd 01       	movw	r24, r26
     c24:	0e 94 82 09 	call	0x1304	; 0x1304 <__floatunsisf>
     c28:	dc 01       	movw	r26, r24
     c2a:	cb 01       	movw	r24, r22
     c2c:	bc 01       	movw	r22, r24
     c2e:	cd 01       	movw	r24, r26
     c30:	2a e1       	ldi	r18, 0x1A	; 26
     c32:	37 e6       	ldi	r19, 0x67	; 103
     c34:	4c e9       	ldi	r20, 0x9C	; 156
     c36:	50 e4       	ldi	r21, 0x40	; 64
     c38:	0e 94 10 0a 	call	0x1420	; 0x1420 <__mulsf3>
     c3c:	dc 01       	movw	r26, r24
     c3e:	cb 01       	movw	r24, r22
     c40:	bc 01       	movw	r22, r24
     c42:	cd 01       	movw	r24, r26
     c44:	0e 94 51 09 	call	0x12a2	; 0x12a2 <__fixsfsi>
     c48:	dc 01       	movw	r26, r24
     c4a:	cb 01       	movw	r24, r22
     c4c:	9c 83       	std	Y+4, r25	; 0x04
     c4e:	8b 83       	std	Y+3, r24	; 0x03
	int potAngle = (int) (adcVal * (300. / 1023.));
     c50:	8f 81       	ldd	r24, Y+7	; 0x07
     c52:	98 85       	ldd	r25, Y+8	; 0x08
     c54:	cc 01       	movw	r24, r24
     c56:	a0 e0       	ldi	r26, 0x00	; 0
     c58:	b0 e0       	ldi	r27, 0x00	; 0
     c5a:	bc 01       	movw	r22, r24
     c5c:	cd 01       	movw	r24, r26
     c5e:	0e 94 82 09 	call	0x1304	; 0x1304 <__floatunsisf>
     c62:	dc 01       	movw	r26, r24
     c64:	cb 01       	movw	r24, r22
     c66:	bc 01       	movw	r22, r24
     c68:	cd 01       	movw	r24, r26
     c6a:	29 e8       	ldi	r18, 0x89	; 137
     c6c:	35 e2       	ldi	r19, 0x25	; 37
     c6e:	46 e9       	ldi	r20, 0x96	; 150
     c70:	5e e3       	ldi	r21, 0x3E	; 62
     c72:	0e 94 10 0a 	call	0x1420	; 0x1420 <__mulsf3>
     c76:	dc 01       	movw	r26, r24
     c78:	cb 01       	movw	r24, r22
     c7a:	bc 01       	movw	r22, r24
     c7c:	cd 01       	movw	r24, r26
     c7e:	0e 94 51 09 	call	0x12a2	; 0x12a2 <__fixsfsi>
     c82:	dc 01       	movw	r26, r24
     c84:	cb 01       	movw	r24, r22
     c86:	9a 83       	std	Y+2, r25	; 0x02
     c88:	89 83       	std	Y+1, r24	; 0x01

	printf("%d,%d,%d,%d\n\r", counter, adcVal, potOut_mVolts, potAngle);
     c8a:	8d b7       	in	r24, 0x3d	; 61
     c8c:	9e b7       	in	r25, 0x3e	; 62
     c8e:	0a 97       	sbiw	r24, 0x0a	; 10
     c90:	0f b6       	in	r0, 0x3f	; 63
     c92:	f8 94       	cli
     c94:	9e bf       	out	0x3e, r25	; 62
     c96:	0f be       	out	0x3f, r0	; 63
     c98:	8d bf       	out	0x3d, r24	; 61
     c9a:	ed b7       	in	r30, 0x3d	; 61
     c9c:	fe b7       	in	r31, 0x3e	; 62
     c9e:	31 96       	adiw	r30, 0x01	; 1
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	91 e0       	ldi	r25, 0x01	; 1
     ca4:	91 83       	std	Z+1, r25	; 0x01
     ca6:	80 83       	st	Z, r24
     ca8:	8d 81       	ldd	r24, Y+5	; 0x05
     caa:	9e 81       	ldd	r25, Y+6	; 0x06
     cac:	93 83       	std	Z+3, r25	; 0x03
     cae:	82 83       	std	Z+2, r24	; 0x02
     cb0:	8f 81       	ldd	r24, Y+7	; 0x07
     cb2:	98 85       	ldd	r25, Y+8	; 0x08
     cb4:	95 83       	std	Z+5, r25	; 0x05
     cb6:	84 83       	std	Z+4, r24	; 0x04
     cb8:	8b 81       	ldd	r24, Y+3	; 0x03
     cba:	9c 81       	ldd	r25, Y+4	; 0x04
     cbc:	97 83       	std	Z+7, r25	; 0x07
     cbe:	86 83       	std	Z+6, r24	; 0x06
     cc0:	89 81       	ldd	r24, Y+1	; 0x01
     cc2:	9a 81       	ldd	r25, Y+2	; 0x02
     cc4:	91 87       	std	Z+9, r25	; 0x09
     cc6:	80 87       	std	Z+8, r24	; 0x08
     cc8:	0e 94 0e 0c 	call	0x181c	; 0x181c <printf>
     ccc:	8d b7       	in	r24, 0x3d	; 61
     cce:	9e b7       	in	r25, 0x3e	; 62
     cd0:	0a 96       	adiw	r24, 0x0a	; 10
     cd2:	0f b6       	in	r0, 0x3f	; 63
     cd4:	f8 94       	cli
     cd6:	9e bf       	out	0x3e, r25	; 62
     cd8:	0f be       	out	0x3f, r0	; 63
     cda:	8d bf       	out	0x3d, r24	; 61
}
     cdc:	28 96       	adiw	r28, 0x08	; 8
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	f8 94       	cli
     ce2:	de bf       	out	0x3e, r29	; 62
     ce4:	0f be       	out	0x3f, r0	; 63
     ce6:	cd bf       	out	0x3d, r28	; 61
     ce8:	cf 91       	pop	r28
     cea:	df 91       	pop	r29
     cec:	08 95       	ret

00000cee <potRead>:

void potRead() {
     cee:	df 93       	push	r29
     cf0:	cf 93       	push	r28
     cf2:	cd b7       	in	r28, 0x3d	; 61
     cf4:	de b7       	in	r29, 0x3e	; 62
     cf6:	63 97       	sbiw	r28, 0x13	; 19
     cf8:	0f b6       	in	r0, 0x3f	; 63
     cfa:	f8 94       	cli
     cfc:	de bf       	out	0x3e, r29	; 62
     cfe:	0f be       	out	0x3f, r0	; 63
     d00:	cd bf       	out	0x3d, r28	; 61

	DDRB = 0xFF; //Set Port as output
     d02:	e4 e2       	ldi	r30, 0x24	; 36
     d04:	f0 e0       	ldi	r31, 0x00	; 0
     d06:	8f ef       	ldi	r24, 0xFF	; 255
     d08:	80 83       	st	Z, r24
	initADC(POT_CHANNEL);		// init ADC on port 4
     d0a:	84 e0       	ldi	r24, 0x04	; 4
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 2a 08 	call	0x1054	; 0x1054 <initADC>
	while (1) {
		printf("Input a command character: \n\r");
     d12:	00 d0       	rcall	.+0      	; 0xd14 <potRead+0x26>
     d14:	ed b7       	in	r30, 0x3d	; 61
     d16:	fe b7       	in	r31, 0x3e	; 62
     d18:	31 96       	adiw	r30, 0x01	; 1
     d1a:	8e e0       	ldi	r24, 0x0E	; 14
     d1c:	91 e0       	ldi	r25, 0x01	; 1
     d1e:	91 83       	std	Z+1, r25	; 0x01
     d20:	80 83       	st	Z, r24
     d22:	0e 94 0e 0c 	call	0x181c	; 0x181c <printf>
     d26:	0f 90       	pop	r0
     d28:	0f 90       	pop	r0
		char cmd = getCharDebug();			// polls for input, locks up program
     d2a:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <getCharDebug>
     d2e:	8b 8b       	std	Y+19, r24	; 0x13
		if (cmd == 'S') {
     d30:	8b 89       	ldd	r24, Y+19	; 0x13
     d32:	83 35       	cpi	r24, 0x53	; 83
     d34:	71 f7       	brne	.-36     	; 0xd12 <potRead+0x24>
			blinkDebug();		// blink to indicate action
     d36:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <blinkDebug>
			for (int i = 0; i < 250; i++) {
     d3a:	1a 8a       	std	Y+18, r1	; 0x12
     d3c:	19 8a       	std	Y+17, r1	; 0x11
     d3e:	84 c0       	rjmp	.+264    	; 0xe48 <potRead+0x15a>
				unsigned int adcVal = getADC(POT_CHANNEL);// implemented in adc.c
     d40:	84 e0       	ldi	r24, 0x04	; 4
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	0e 94 4a 08 	call	0x1094	; 0x1094 <getADC>
     d48:	98 8b       	std	Y+16, r25	; 0x10
     d4a:	8f 87       	std	Y+15, r24	; 0x0f
				printData(i, adcVal);
     d4c:	89 89       	ldd	r24, Y+17	; 0x11
     d4e:	9a 89       	ldd	r25, Y+18	; 0x12
     d50:	2f 85       	ldd	r18, Y+15	; 0x0f
     d52:	38 89       	ldd	r19, Y+16	; 0x10
     d54:	b9 01       	movw	r22, r18
     d56:	0e 94 fd 05 	call	0xbfa	; 0xbfa <printData>
     d5a:	80 e0       	ldi	r24, 0x00	; 0
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	aa e7       	ldi	r26, 0x7A	; 122
     d60:	b4 e4       	ldi	r27, 0x44	; 68
     d62:	8b 87       	std	Y+11, r24	; 0x0b
     d64:	9c 87       	std	Y+12, r25	; 0x0c
     d66:	ad 87       	std	Y+13, r26	; 0x0d
     d68:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d6a:	6b 85       	ldd	r22, Y+11	; 0x0b
     d6c:	7c 85       	ldd	r23, Y+12	; 0x0c
     d6e:	8d 85       	ldd	r24, Y+13	; 0x0d
     d70:	9e 85       	ldd	r25, Y+14	; 0x0e
     d72:	20 e0       	ldi	r18, 0x00	; 0
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	40 e9       	ldi	r20, 0x90	; 144
     d78:	55 e4       	ldi	r21, 0x45	; 69
     d7a:	0e 94 10 0a 	call	0x1420	; 0x1420 <__mulsf3>
     d7e:	dc 01       	movw	r26, r24
     d80:	cb 01       	movw	r24, r22
     d82:	8f 83       	std	Y+7, r24	; 0x07
     d84:	98 87       	std	Y+8, r25	; 0x08
     d86:	a9 87       	std	Y+9, r26	; 0x09
     d88:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d8a:	6f 81       	ldd	r22, Y+7	; 0x07
     d8c:	78 85       	ldd	r23, Y+8	; 0x08
     d8e:	89 85       	ldd	r24, Y+9	; 0x09
     d90:	9a 85       	ldd	r25, Y+10	; 0x0a
     d92:	20 e0       	ldi	r18, 0x00	; 0
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	40 e8       	ldi	r20, 0x80	; 128
     d98:	5f e3       	ldi	r21, 0x3F	; 63
     d9a:	0e 94 4d 09 	call	0x129a	; 0x129a <__cmpsf2>
     d9e:	88 23       	and	r24, r24
     da0:	2c f4       	brge	.+10     	; 0xdac <potRead+0xbe>
		__ticks = 1;
     da2:	81 e0       	ldi	r24, 0x01	; 1
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	9e 83       	std	Y+6, r25	; 0x06
     da8:	8d 83       	std	Y+5, r24	; 0x05
     daa:	3f c0       	rjmp	.+126    	; 0xe2a <potRead+0x13c>
	else if (__tmp > 65535)
     dac:	6f 81       	ldd	r22, Y+7	; 0x07
     dae:	78 85       	ldd	r23, Y+8	; 0x08
     db0:	89 85       	ldd	r24, Y+9	; 0x09
     db2:	9a 85       	ldd	r25, Y+10	; 0x0a
     db4:	20 e0       	ldi	r18, 0x00	; 0
     db6:	3f ef       	ldi	r19, 0xFF	; 255
     db8:	4f e7       	ldi	r20, 0x7F	; 127
     dba:	57 e4       	ldi	r21, 0x47	; 71
     dbc:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__gesf2>
     dc0:	18 16       	cp	r1, r24
     dc2:	4c f5       	brge	.+82     	; 0xe16 <potRead+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dc4:	6b 85       	ldd	r22, Y+11	; 0x0b
     dc6:	7c 85       	ldd	r23, Y+12	; 0x0c
     dc8:	8d 85       	ldd	r24, Y+13	; 0x0d
     dca:	9e 85       	ldd	r25, Y+14	; 0x0e
     dcc:	20 e0       	ldi	r18, 0x00	; 0
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	40 e2       	ldi	r20, 0x20	; 32
     dd2:	51 e4       	ldi	r21, 0x41	; 65
     dd4:	0e 94 10 0a 	call	0x1420	; 0x1420 <__mulsf3>
     dd8:	dc 01       	movw	r26, r24
     dda:	cb 01       	movw	r24, r22
     ddc:	bc 01       	movw	r22, r24
     dde:	cd 01       	movw	r24, r26
     de0:	0e 94 56 09 	call	0x12ac	; 0x12ac <__fixunssfsi>
     de4:	dc 01       	movw	r26, r24
     de6:	cb 01       	movw	r24, r22
     de8:	9e 83       	std	Y+6, r25	; 0x06
     dea:	8d 83       	std	Y+5, r24	; 0x05
     dec:	0f c0       	rjmp	.+30     	; 0xe0c <potRead+0x11e>
     dee:	8c ec       	ldi	r24, 0xCC	; 204
     df0:	91 e0       	ldi	r25, 0x01	; 1
     df2:	9c 83       	std	Y+4, r25	; 0x04
     df4:	8b 83       	std	Y+3, r24	; 0x03
     df6:	8b 81       	ldd	r24, Y+3	; 0x03
     df8:	9c 81       	ldd	r25, Y+4	; 0x04
     dfa:	01 97       	sbiw	r24, 0x01	; 1
     dfc:	f1 f7       	brne	.-4      	; 0xdfa <potRead+0x10c>
     dfe:	9c 83       	std	Y+4, r25	; 0x04
     e00:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e02:	8d 81       	ldd	r24, Y+5	; 0x05
     e04:	9e 81       	ldd	r25, Y+6	; 0x06
     e06:	01 97       	sbiw	r24, 0x01	; 1
     e08:	9e 83       	std	Y+6, r25	; 0x06
     e0a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e0c:	8d 81       	ldd	r24, Y+5	; 0x05
     e0e:	9e 81       	ldd	r25, Y+6	; 0x06
     e10:	00 97       	sbiw	r24, 0x00	; 0
     e12:	69 f7       	brne	.-38     	; 0xdee <potRead+0x100>
     e14:	14 c0       	rjmp	.+40     	; 0xe3e <potRead+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e16:	6f 81       	ldd	r22, Y+7	; 0x07
     e18:	78 85       	ldd	r23, Y+8	; 0x08
     e1a:	89 85       	ldd	r24, Y+9	; 0x09
     e1c:	9a 85       	ldd	r25, Y+10	; 0x0a
     e1e:	0e 94 56 09 	call	0x12ac	; 0x12ac <__fixunssfsi>
     e22:	dc 01       	movw	r26, r24
     e24:	cb 01       	movw	r24, r22
     e26:	9e 83       	std	Y+6, r25	; 0x06
     e28:	8d 83       	std	Y+5, r24	; 0x05
     e2a:	8d 81       	ldd	r24, Y+5	; 0x05
     e2c:	9e 81       	ldd	r25, Y+6	; 0x06
     e2e:	9a 83       	std	Y+2, r25	; 0x02
     e30:	89 83       	std	Y+1, r24	; 0x01
     e32:	89 81       	ldd	r24, Y+1	; 0x01
     e34:	9a 81       	ldd	r25, Y+2	; 0x02
     e36:	01 97       	sbiw	r24, 0x01	; 1
     e38:	f1 f7       	brne	.-4      	; 0xe36 <potRead+0x148>
     e3a:	9a 83       	std	Y+2, r25	; 0x02
     e3c:	89 83       	std	Y+1, r24	; 0x01
	while (1) {
		printf("Input a command character: \n\r");
		char cmd = getCharDebug();			// polls for input, locks up program
		if (cmd == 'S') {
			blinkDebug();		// blink to indicate action
			for (int i = 0; i < 250; i++) {
     e3e:	89 89       	ldd	r24, Y+17	; 0x11
     e40:	9a 89       	ldd	r25, Y+18	; 0x12
     e42:	01 96       	adiw	r24, 0x01	; 1
     e44:	9a 8b       	std	Y+18, r25	; 0x12
     e46:	89 8b       	std	Y+17, r24	; 0x11
     e48:	89 89       	ldd	r24, Y+17	; 0x11
     e4a:	9a 89       	ldd	r25, Y+18	; 0x12
     e4c:	8a 3f       	cpi	r24, 0xFA	; 250
     e4e:	91 05       	cpc	r25, r1
     e50:	0c f4       	brge	.+2      	; 0xe54 <potRead+0x166>
     e52:	76 cf       	rjmp	.-276    	; 0xd40 <potRead+0x52>
				unsigned int adcVal = getADC(POT_CHANNEL);// implemented in adc.c
				printData(i, adcVal);
				_delay_ms(1000);// for human readability, remove for burst mode
			}
			printf("DONE \n\r");
     e54:	00 d0       	rcall	.+0      	; 0xe56 <potRead+0x168>
     e56:	ed b7       	in	r30, 0x3d	; 61
     e58:	fe b7       	in	r31, 0x3e	; 62
     e5a:	31 96       	adiw	r30, 0x01	; 1
     e5c:	8c e2       	ldi	r24, 0x2C	; 44
     e5e:	91 e0       	ldi	r25, 0x01	; 1
     e60:	91 83       	std	Z+1, r25	; 0x01
     e62:	80 83       	st	Z, r24
     e64:	0e 94 0e 0c 	call	0x181c	; 0x181c <printf>
     e68:	0f 90       	pop	r0
     e6a:	0f 90       	pop	r0
			blinkDebug();
     e6c:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <blinkDebug>
     e70:	50 cf       	rjmp	.-352    	; 0xd12 <potRead+0x24>

00000e72 <initTimerFreq>:
		} else {
		}
	}
}

void initTimerFreq() {
     e72:	df 93       	push	r29
     e74:	cf 93       	push	r28
     e76:	cd b7       	in	r28, 0x3d	; 61
     e78:	de b7       	in	r29, 0x3e	; 62
	DDRB = 0x00;
     e7a:	e4 e2       	ldi	r30, 0x24	; 36
     e7c:	f0 e0       	ldi	r31, 0x00	; 0
     e7e:	10 82       	st	Z, r1
	DDRD = 0x01;
     e80:	ea e2       	ldi	r30, 0x2A	; 42
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	81 e0       	ldi	r24, 0x01	; 1
     e86:	80 83       	st	Z, r24
	PORTD = 0x00;
     e88:	eb e2       	ldi	r30, 0x2B	; 43
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	10 82       	st	Z, r1

	//initialize timer to 1Hz
	initTimer(1, CTC, 18000);
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	61 e0       	ldi	r22, 0x01	; 1
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	40 e5       	ldi	r20, 0x50	; 80
     e96:	0e 94 7f 08 	call	0x10fe	; 0x10fe <initTimer>
}
     e9a:	cf 91       	pop	r28
     e9c:	df 91       	pop	r29
     e9e:	08 95       	ret

00000ea0 <outputWave>:

void outputWave() {
     ea0:	df 93       	push	r29
     ea2:	cf 93       	push	r28
     ea4:	00 d0       	rcall	.+0      	; 0xea6 <outputWave+0x6>
     ea6:	00 d0       	rcall	.+0      	; 0xea8 <outputWave+0x8>
     ea8:	00 d0       	rcall	.+0      	; 0xeaa <outputWave+0xa>
     eaa:	cd b7       	in	r28, 0x3d	; 61
     eac:	de b7       	in	r29, 0x3e	; 62
	//set timer to count up to one of three values according to pushbuttons
	//pushbuttons on sw7, sw6, sw5
	switch (PINB) {
     eae:	e3 e2       	ldi	r30, 0x23	; 35
     eb0:	f0 e0       	ldi	r31, 0x00	; 0
     eb2:	80 81       	ld	r24, Z
     eb4:	28 2f       	mov	r18, r24
     eb6:	30 e0       	ldi	r19, 0x00	; 0
     eb8:	3e 83       	std	Y+6, r19	; 0x06
     eba:	2d 83       	std	Y+5, r18	; 0x05
     ebc:	8d 81       	ldd	r24, Y+5	; 0x05
     ebe:	9e 81       	ldd	r25, Y+6	; 0x06
     ec0:	80 34       	cpi	r24, 0x40	; 64
     ec2:	91 05       	cpc	r25, r1
     ec4:	19 f1       	breq	.+70     	; 0xf0c <outputWave+0x6c>
     ec6:	2d 81       	ldd	r18, Y+5	; 0x05
     ec8:	3e 81       	ldd	r19, Y+6	; 0x06
     eca:	20 38       	cpi	r18, 0x80	; 128
     ecc:	31 05       	cpc	r19, r1
     ece:	31 f0       	breq	.+12     	; 0xedc <outputWave+0x3c>
     ed0:	8d 81       	ldd	r24, Y+5	; 0x05
     ed2:	9e 81       	ldd	r25, Y+6	; 0x06
     ed4:	80 32       	cpi	r24, 0x20	; 32
     ed6:	91 05       	cpc	r25, r1
     ed8:	81 f1       	breq	.+96     	; 0xf3a <outputWave+0x9a>
     eda:	45 c0       	rjmp	.+138    	; 0xf66 <outputWave+0xc6>
	case 0x80:
		if (mode != 1) {
     edc:	80 91 59 01 	lds	r24, 0x0159
     ee0:	81 30       	cpi	r24, 0x01	; 1
     ee2:	09 f4       	brne	.+2      	; 0xee6 <outputWave+0x46>
     ee4:	40 c0       	rjmp	.+128    	; 0xf66 <outputWave+0xc6>
			maxCount = 18000;
     ee6:	80 e5       	ldi	r24, 0x50	; 80
     ee8:	96 e4       	ldi	r25, 0x46	; 70
     eea:	90 93 58 01 	sts	0x0158, r25
     eee:	80 93 57 01 	sts	0x0157, r24
			setCompValue(1, maxCount);
     ef2:	80 91 57 01 	lds	r24, 0x0157
     ef6:	90 91 58 01 	lds	r25, 0x0158
     efa:	98 2f       	mov	r25, r24
     efc:	81 e0       	ldi	r24, 0x01	; 1
     efe:	69 2f       	mov	r22, r25
     f00:	0e 94 c3 08 	call	0x1186	; 0x1186 <setCompValue>
			mode = 1;
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	80 93 59 01 	sts	0x0159, r24
     f0a:	2d c0       	rjmp	.+90     	; 0xf66 <outputWave+0xc6>
		}
		break;

	case 0x40:
		if (mode != 2) {
     f0c:	80 91 59 01 	lds	r24, 0x0159
     f10:	82 30       	cpi	r24, 0x02	; 2
     f12:	49 f1       	breq	.+82     	; 0xf66 <outputWave+0xc6>
			maxCount = 900;
     f14:	84 e8       	ldi	r24, 0x84	; 132
     f16:	93 e0       	ldi	r25, 0x03	; 3
     f18:	90 93 58 01 	sts	0x0158, r25
     f1c:	80 93 57 01 	sts	0x0157, r24
			setCompValue(1, maxCount);
     f20:	80 91 57 01 	lds	r24, 0x0157
     f24:	90 91 58 01 	lds	r25, 0x0158
     f28:	98 2f       	mov	r25, r24
     f2a:	81 e0       	ldi	r24, 0x01	; 1
     f2c:	69 2f       	mov	r22, r25
     f2e:	0e 94 c3 08 	call	0x1186	; 0x1186 <setCompValue>
			mode = 2;
     f32:	82 e0       	ldi	r24, 0x02	; 2
     f34:	80 93 59 01 	sts	0x0159, r24
     f38:	16 c0       	rjmp	.+44     	; 0xf66 <outputWave+0xc6>
		}
		break;

	case 0x20:
		if (mode != 3) {
     f3a:	80 91 59 01 	lds	r24, 0x0159
     f3e:	83 30       	cpi	r24, 0x03	; 3
     f40:	91 f0       	breq	.+36     	; 0xf66 <outputWave+0xc6>
			maxCount = 180;
     f42:	84 eb       	ldi	r24, 0xB4	; 180
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	90 93 58 01 	sts	0x0158, r25
     f4a:	80 93 57 01 	sts	0x0157, r24
			setCompValue(1, maxCount);
     f4e:	80 91 57 01 	lds	r24, 0x0157
     f52:	90 91 58 01 	lds	r25, 0x0158
     f56:	98 2f       	mov	r25, r24
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	69 2f       	mov	r22, r25
     f5c:	0e 94 c3 08 	call	0x1186	; 0x1186 <setCompValue>
			mode = 3;
     f60:	83 e0       	ldi	r24, 0x03	; 3
     f62:	80 93 59 01 	sts	0x0159, r24

		break;
	}

	//set the output high when timer1 resets
	if (tog) {
     f66:	80 91 56 01 	lds	r24, 0x0156
     f6a:	88 23       	and	r24, r24
     f6c:	49 f0       	breq	.+18     	; 0xf80 <outputWave+0xe0>
		tog = 0;
     f6e:	10 92 56 01 	sts	0x0156, r1
		PORTD |= 0x01;
     f72:	ab e2       	ldi	r26, 0x2B	; 43
     f74:	b0 e0       	ldi	r27, 0x00	; 0
     f76:	eb e2       	ldi	r30, 0x2B	; 43
     f78:	f0 e0       	ldi	r31, 0x00	; 0
     f7a:	80 81       	ld	r24, Z
     f7c:	81 60       	ori	r24, 0x01	; 1
     f7e:	8c 93       	st	X, r24
	}

	//read potentiometer and timer values
	unsigned short potVal = getADC(POT_CHANNEL);
     f80:	84 e0       	ldi	r24, 0x04	; 4
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 4a 08 	call	0x1094	; 0x1094 <getADC>
     f88:	9c 83       	std	Y+4, r25	; 0x04
     f8a:	8b 83       	std	Y+3, r24	; 0x03
	unsigned short timerVal = TCNT1L;
     f8c:	e4 e8       	ldi	r30, 0x84	; 132
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 81       	ld	r24, Z
     f92:	88 2f       	mov	r24, r24
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	9a 83       	std	Y+2, r25	; 0x02
     f98:	89 83       	std	Y+1, r24	; 0x01
	timerVal = TCNT1H << 8;
     f9a:	e5 e8       	ldi	r30, 0x85	; 133
     f9c:	f0 e0       	ldi	r31, 0x00	; 0
     f9e:	80 81       	ld	r24, Z
     fa0:	88 2f       	mov	r24, r24
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	98 2f       	mov	r25, r24
     fa6:	88 27       	eor	r24, r24
     fa8:	9a 83       	std	Y+2, r25	; 0x02
     faa:	89 83       	std	Y+1, r24	; 0x01

	//set pwm according to potentiometer
	if (timerVal > (maxCount>>1)) {
     fac:	80 91 57 01 	lds	r24, 0x0157
     fb0:	90 91 58 01 	lds	r25, 0x0158
     fb4:	95 95       	asr	r25
     fb6:	87 95       	ror	r24
     fb8:	9c 01       	movw	r18, r24
     fba:	89 81       	ldd	r24, Y+1	; 0x01
     fbc:	9a 81       	ldd	r25, Y+2	; 0x02
     fbe:	28 17       	cp	r18, r24
     fc0:	39 07       	cpc	r19, r25
     fc2:	38 f4       	brcc	.+14     	; 0xfd2 <outputWave+0x132>
		PORTD &= 0xFE;
     fc4:	ab e2       	ldi	r26, 0x2B	; 43
     fc6:	b0 e0       	ldi	r27, 0x00	; 0
     fc8:	eb e2       	ldi	r30, 0x2B	; 43
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	80 81       	ld	r24, Z
     fce:	8e 7f       	andi	r24, 0xFE	; 254
     fd0:	8c 93       	st	X, r24
	}
}
     fd2:	26 96       	adiw	r28, 0x06	; 6
     fd4:	0f b6       	in	r0, 0x3f	; 63
     fd6:	f8 94       	cli
     fd8:	de bf       	out	0x3e, r29	; 62
     fda:	0f be       	out	0x3f, r0	; 63
     fdc:	cd bf       	out	0x3d, r28	; 61
     fde:	cf 91       	pop	r28
     fe0:	df 91       	pop	r29
     fe2:	08 95       	ret

00000fe4 <main>:



int main(void) {
     fe4:	df 93       	push	r29
     fe6:	cf 93       	push	r28
     fe8:	00 d0       	rcall	.+0      	; 0xfea <main+0x6>
     fea:	cd b7       	in	r28, 0x3d	; 61
     fec:	de b7       	in	r29, 0x3e	; 62
	initRBELib();
     fee:	0e 94 6d 08 	call	0x10da	; 0x10da <initRBELib>
	initTimerFreq();
     ff2:	0e 94 39 07 	call	0xe72	; 0xe72 <initTimerFreq>

	//Set the baud rate of the UART
	debugUSARTInit(115200);
     ff6:	60 e0       	ldi	r22, 0x00	; 0
     ff8:	72 ec       	ldi	r23, 0xC2	; 194
     ffa:	81 e0       	ldi	r24, 0x01	; 1
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	0e 94 65 04 	call	0x8ca	; 0x8ca <debugUSARTInit>
	//different modes for sign-offs
	//mode/sign-off 1: sw1
	//mode/sign-off 2: sw2
	//mode/sign-off 3: sw3
	while (1) {
		switch (PINB) {
    1002:	e3 e2       	ldi	r30, 0x23	; 35
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	80 81       	ld	r24, Z
    1008:	28 2f       	mov	r18, r24
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	3a 83       	std	Y+2, r19	; 0x02
    100e:	29 83       	std	Y+1, r18	; 0x01
    1010:	89 81       	ldd	r24, Y+1	; 0x01
    1012:	9a 81       	ldd	r25, Y+2	; 0x02
    1014:	81 30       	cpi	r24, 0x01	; 1
    1016:	91 05       	cpc	r25, r1
    1018:	a1 f3       	breq	.-24     	; 0x1002 <main+0x1e>
    101a:	29 81       	ldd	r18, Y+1	; 0x01
    101c:	3a 81       	ldd	r19, Y+2	; 0x02
    101e:	22 30       	cpi	r18, 0x02	; 2
    1020:	31 05       	cpc	r19, r1
    1022:	79 f7       	brne	.-34     	; 0x1002 <main+0x1e>
			//loopPotRead();
			break;

		//digital waveform generator
		case 0x02:
			outputWave();
    1024:	0e 94 50 07 	call	0xea0	; 0xea0 <outputWave>
    1028:	ec cf       	rjmp	.-40     	; 0x1002 <main+0x1e>

0000102a <__vector_13>:

	return 0;
}


ISR(TIMER1_COMPA_vect) {
    102a:	1f 92       	push	r1
    102c:	0f 92       	push	r0
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	0f 92       	push	r0
    1032:	11 24       	eor	r1, r1
    1034:	8f 93       	push	r24
    1036:	df 93       	push	r29
    1038:	cf 93       	push	r28
    103a:	cd b7       	in	r28, 0x3d	; 61
    103c:	de b7       	in	r29, 0x3e	; 62
	tog = 1;
    103e:	81 e0       	ldi	r24, 0x01	; 1
    1040:	80 93 56 01 	sts	0x0156, r24
}
    1044:	cf 91       	pop	r28
    1046:	df 91       	pop	r29
    1048:	8f 91       	pop	r24
    104a:	0f 90       	pop	r0
    104c:	0f be       	out	0x3f, r0	; 63
    104e:	0f 90       	pop	r0
    1050:	1f 90       	pop	r1
    1052:	18 95       	reti

00001054 <initADC>:
    1054:	f8 94       	cli
    1056:	91 b1       	in	r25, 0x01	; 1
    1058:	21 e0       	ldi	r18, 0x01	; 1
    105a:	30 e0       	ldi	r19, 0x00	; 0
    105c:	02 c0       	rjmp	.+4      	; 0x1062 <initADC+0xe>
    105e:	22 0f       	add	r18, r18
    1060:	33 1f       	adc	r19, r19
    1062:	8a 95       	dec	r24
    1064:	e2 f7       	brpl	.-8      	; 0x105e <initADC+0xa>
    1066:	20 95       	com	r18
    1068:	29 23       	and	r18, r25
    106a:	21 b9       	out	0x01, r18	; 1
    106c:	80 e4       	ldi	r24, 0x40	; 64
    106e:	80 93 7c 00 	sts	0x007C, r24
    1072:	ea e7       	ldi	r30, 0x7A	; 122
    1074:	f0 e0       	ldi	r31, 0x00	; 0
    1076:	80 81       	ld	r24, Z
    1078:	8f 68       	ori	r24, 0x8F	; 143
    107a:	80 83       	st	Z, r24
    107c:	78 94       	sei
    107e:	08 95       	ret

00001080 <clearADC>:
    1080:	ea e7       	ldi	r30, 0x7A	; 122
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	80 81       	ld	r24, Z
    1086:	8f 77       	andi	r24, 0x7F	; 127
    1088:	80 83       	st	Z, r24
    108a:	10 92 79 00 	sts	0x0079, r1
    108e:	10 92 78 00 	sts	0x0078, r1
    1092:	08 95       	ret

00001094 <getADC>:
    1094:	90 91 7c 00 	lds	r25, 0x007C
    1098:	90 7e       	andi	r25, 0xE0	; 224
    109a:	90 93 7c 00 	sts	0x007C, r25
    109e:	90 91 7c 00 	lds	r25, 0x007C
    10a2:	8f 71       	andi	r24, 0x1F	; 31
    10a4:	89 2b       	or	r24, r25
    10a6:	80 93 7c 00 	sts	0x007C, r24
    10aa:	80 91 7a 00 	lds	r24, 0x007A
    10ae:	80 64       	ori	r24, 0x40	; 64
    10b0:	80 93 7a 00 	sts	0x007A, r24
    10b4:	80 91 7a 00 	lds	r24, 0x007A
    10b8:	86 fd       	sbrc	r24, 6
    10ba:	fc cf       	rjmp	.-8      	; 0x10b4 <getADC+0x20>
    10bc:	20 91 78 00 	lds	r18, 0x0078
    10c0:	30 91 79 00 	lds	r19, 0x0079
    10c4:	c9 01       	movw	r24, r18
    10c6:	08 95       	ret

000010c8 <changeADC>:
    10c8:	ec e7       	ldi	r30, 0x7C	; 124
    10ca:	f0 e0       	ldi	r31, 0x00	; 0
    10cc:	90 81       	ld	r25, Z
    10ce:	90 7e       	andi	r25, 0xE0	; 224
    10d0:	90 83       	st	Z, r25
    10d2:	90 81       	ld	r25, Z
    10d4:	98 2b       	or	r25, r24
    10d6:	90 83       	st	Z, r25
    10d8:	08 95       	ret

000010da <initRBELib>:
    10da:	88 e4       	ldi	r24, 0x48	; 72
    10dc:	91 e0       	ldi	r25, 0x01	; 1
    10de:	90 93 5d 01 	sts	0x015D, r25
    10e2:	80 93 5c 01 	sts	0x015C, r24
    10e6:	60 e0       	ldi	r22, 0x00	; 0
    10e8:	72 ec       	ldi	r23, 0xC2	; 194
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	0e 94 da 08 	call	0x11b4	; 0x11b4 <initAltCom>
    10f2:	08 95       	ret

000010f4 <printfRBE>:
    10f4:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <putCharDebug>
    10f8:	80 e0       	ldi	r24, 0x00	; 0
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	08 95       	ret

000010fe <initTimer>:
    10fe:	f8 94       	cli
    1100:	81 30       	cpi	r24, 0x01	; 1
    1102:	b1 f0       	breq	.+44     	; 0x1130 <__stack+0x31>
    1104:	81 30       	cpi	r24, 0x01	; 1
    1106:	18 f0       	brcs	.+6      	; 0x110e <__stack+0xf>
    1108:	82 30       	cpi	r24, 0x02	; 2
    110a:	d9 f5       	brne	.+118    	; 0x1182 <__stack+0x83>
    110c:	27 c0       	rjmp	.+78     	; 0x115c <__stack+0x5d>
    110e:	cb 01       	movw	r24, r22
    1110:	36 e0       	ldi	r19, 0x06	; 6
    1112:	88 0f       	add	r24, r24
    1114:	99 1f       	adc	r25, r25
    1116:	3a 95       	dec	r19
    1118:	e1 f7       	brne	.-8      	; 0x1112 <__stack+0x13>
    111a:	86 2b       	or	r24, r22
    111c:	84 bd       	out	0x24, r24	; 36
    111e:	85 e0       	ldi	r24, 0x05	; 5
    1120:	85 bd       	out	0x25, r24	; 37
    1122:	47 bd       	out	0x27, r20	; 39
    1124:	80 91 6e 00 	lds	r24, 0x006E
    1128:	82 60       	ori	r24, 0x02	; 2
    112a:	80 93 6e 00 	sts	0x006E, r24
    112e:	29 c0       	rjmp	.+82     	; 0x1182 <__stack+0x83>
    1130:	86 2f       	mov	r24, r22
    1132:	82 95       	swap	r24
    1134:	88 0f       	add	r24, r24
    1136:	88 0f       	add	r24, r24
    1138:	80 7c       	andi	r24, 0xC0	; 192
    113a:	80 93 80 00 	sts	0x0080, r24
    113e:	8d e0       	ldi	r24, 0x0D	; 13
    1140:	80 93 81 00 	sts	0x0081, r24
    1144:	84 2f       	mov	r24, r20
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	90 93 89 00 	sts	0x0089, r25
    114c:	80 93 88 00 	sts	0x0088, r24
    1150:	80 91 6f 00 	lds	r24, 0x006F
    1154:	82 60       	ori	r24, 0x02	; 2
    1156:	80 93 6f 00 	sts	0x006F, r24
    115a:	13 c0       	rjmp	.+38     	; 0x1182 <__stack+0x83>
    115c:	cb 01       	movw	r24, r22
    115e:	26 e0       	ldi	r18, 0x06	; 6
    1160:	88 0f       	add	r24, r24
    1162:	99 1f       	adc	r25, r25
    1164:	2a 95       	dec	r18
    1166:	e1 f7       	brne	.-8      	; 0x1160 <__stack+0x61>
    1168:	86 2b       	or	r24, r22
    116a:	80 93 b0 00 	sts	0x00B0, r24
    116e:	85 e0       	ldi	r24, 0x05	; 5
    1170:	80 93 b1 00 	sts	0x00B1, r24
    1174:	40 93 b3 00 	sts	0x00B3, r20
    1178:	80 91 70 00 	lds	r24, 0x0070
    117c:	82 60       	ori	r24, 0x02	; 2
    117e:	80 93 70 00 	sts	0x0070, r24
    1182:	78 94       	sei
    1184:	08 95       	ret

00001186 <setCompValue>:
    1186:	81 30       	cpi	r24, 0x01	; 1
    1188:	39 f0       	breq	.+14     	; 0x1198 <setCompValue+0x12>
    118a:	81 30       	cpi	r24, 0x01	; 1
    118c:	18 f0       	brcs	.+6      	; 0x1194 <setCompValue+0xe>
    118e:	82 30       	cpi	r24, 0x02	; 2
    1190:	81 f4       	brne	.+32     	; 0x11b2 <setCompValue+0x2c>
    1192:	09 c0       	rjmp	.+18     	; 0x11a6 <setCompValue+0x20>
    1194:	67 bd       	out	0x27, r22	; 39
    1196:	08 95       	ret
    1198:	86 2f       	mov	r24, r22
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	90 93 89 00 	sts	0x0089, r25
    11a0:	80 93 88 00 	sts	0x0088, r24
    11a4:	08 95       	ret
    11a6:	86 2f       	mov	r24, r22
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	90 93 8b 00 	sts	0x008B, r25
    11ae:	80 93 8a 00 	sts	0x008A, r24
    11b2:	08 95       	ret

000011b4 <initAltCom>:
    11b4:	9b 01       	movw	r18, r22
    11b6:	ac 01       	movw	r20, r24
    11b8:	84 e0       	ldi	r24, 0x04	; 4
    11ba:	22 0f       	add	r18, r18
    11bc:	33 1f       	adc	r19, r19
    11be:	44 1f       	adc	r20, r20
    11c0:	55 1f       	adc	r21, r21
    11c2:	8a 95       	dec	r24
    11c4:	d1 f7       	brne	.-12     	; 0x11ba <initAltCom+0x6>
    11c6:	60 e0       	ldi	r22, 0x00	; 0
    11c8:	70 e4       	ldi	r23, 0x40	; 64
    11ca:	89 e1       	ldi	r24, 0x19	; 25
    11cc:	91 e0       	ldi	r25, 0x01	; 1
    11ce:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__udivmodsi4>
    11d2:	21 50       	subi	r18, 0x01	; 1
    11d4:	30 40       	sbci	r19, 0x00	; 0
    11d6:	30 93 c5 00 	sts	0x00C5, r19
    11da:	20 93 c4 00 	sts	0x00C4, r18
    11de:	88 e1       	ldi	r24, 0x18	; 24
    11e0:	80 93 c1 00 	sts	0x00C1, r24
    11e4:	86 e0       	ldi	r24, 0x06	; 6
    11e6:	80 93 c2 00 	sts	0x00C2, r24
    11ea:	08 95       	ret

000011ec <setCharDebug>:
    11ec:	98 2f       	mov	r25, r24
    11ee:	80 91 c0 00 	lds	r24, 0x00C0
    11f2:	85 ff       	sbrs	r24, 5
    11f4:	fc cf       	rjmp	.-8      	; 0x11ee <setCharDebug+0x2>
    11f6:	90 93 c6 00 	sts	0x00C6, r25
    11fa:	08 95       	ret

000011fc <coPrintf>:
    11fc:	fc 01       	movw	r30, r24
    11fe:	07 c0       	rjmp	.+14     	; 0x120e <coPrintf+0x12>
    1200:	80 91 c0 00 	lds	r24, 0x00C0
    1204:	85 ff       	sbrs	r24, 5
    1206:	fc cf       	rjmp	.-8      	; 0x1200 <coPrintf+0x4>
    1208:	90 93 c6 00 	sts	0x00C6, r25
    120c:	31 96       	adiw	r30, 0x01	; 1
    120e:	90 81       	ld	r25, Z
    1210:	99 23       	and	r25, r25
    1212:	b1 f7       	brne	.-20     	; 0x1200 <coPrintf+0x4>
    1214:	08 95       	ret

00001216 <setServo>:
    1216:	0f 93       	push	r16
    1218:	1f 93       	push	r17
    121a:	df 93       	push	r29
    121c:	cf 93       	push	r28
    121e:	cd b7       	in	r28, 0x3d	; 61
    1220:	de b7       	in	r29, 0x3e	; 62
    1222:	64 97       	sbiw	r28, 0x14	; 20
    1224:	0f b6       	in	r0, 0x3f	; 63
    1226:	f8 94       	cli
    1228:	de bf       	out	0x3e, r29	; 62
    122a:	0f be       	out	0x3f, r0	; 63
    122c:	cd bf       	out	0x3d, r28	; 61
    122e:	2d b7       	in	r18, 0x3d	; 61
    1230:	3e b7       	in	r19, 0x3e	; 62
    1232:	28 50       	subi	r18, 0x08	; 8
    1234:	30 40       	sbci	r19, 0x00	; 0
    1236:	0f b6       	in	r0, 0x3f	; 63
    1238:	f8 94       	cli
    123a:	3e bf       	out	0x3e, r19	; 62
    123c:	0f be       	out	0x3f, r0	; 63
    123e:	2d bf       	out	0x3d, r18	; 61
    1240:	ed b7       	in	r30, 0x3d	; 61
    1242:	fe b7       	in	r31, 0x3e	; 62
    1244:	31 96       	adiw	r30, 0x01	; 1
    1246:	8e 01       	movw	r16, r28
    1248:	0f 5f       	subi	r16, 0xFF	; 255
    124a:	1f 4f       	sbci	r17, 0xFF	; 255
    124c:	ad b7       	in	r26, 0x3d	; 61
    124e:	be b7       	in	r27, 0x3e	; 62
    1250:	12 96       	adiw	r26, 0x02	; 2
    1252:	1c 93       	st	X, r17
    1254:	0e 93       	st	-X, r16
    1256:	11 97       	sbiw	r26, 0x01	; 1
    1258:	24 e3       	ldi	r18, 0x34	; 52
    125a:	31 e0       	ldi	r19, 0x01	; 1
    125c:	33 83       	std	Z+3, r19	; 0x03
    125e:	22 83       	std	Z+2, r18	; 0x02
    1260:	95 83       	std	Z+5, r25	; 0x05
    1262:	84 83       	std	Z+4, r24	; 0x04
    1264:	77 83       	std	Z+7, r23	; 0x07
    1266:	66 83       	std	Z+6, r22	; 0x06
    1268:	0e 94 23 0c 	call	0x1846	; 0x1846 <sprintf>
    126c:	2d b7       	in	r18, 0x3d	; 61
    126e:	3e b7       	in	r19, 0x3e	; 62
    1270:	28 5f       	subi	r18, 0xF8	; 248
    1272:	3f 4f       	sbci	r19, 0xFF	; 255
    1274:	0f b6       	in	r0, 0x3f	; 63
    1276:	f8 94       	cli
    1278:	3e bf       	out	0x3e, r19	; 62
    127a:	0f be       	out	0x3f, r0	; 63
    127c:	2d bf       	out	0x3d, r18	; 61
    127e:	c8 01       	movw	r24, r16
    1280:	0e 94 fe 08 	call	0x11fc	; 0x11fc <coPrintf>
    1284:	64 96       	adiw	r28, 0x14	; 20
    1286:	0f b6       	in	r0, 0x3f	; 63
    1288:	f8 94       	cli
    128a:	de bf       	out	0x3e, r29	; 62
    128c:	0f be       	out	0x3f, r0	; 63
    128e:	cd bf       	out	0x3d, r28	; 61
    1290:	cf 91       	pop	r28
    1292:	df 91       	pop	r29
    1294:	1f 91       	pop	r17
    1296:	0f 91       	pop	r16
    1298:	08 95       	ret

0000129a <__cmpsf2>:
    129a:	71 d0       	rcall	.+226    	; 0x137e <__fp_cmp>
    129c:	08 f4       	brcc	.+2      	; 0x12a0 <__cmpsf2+0x6>
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	08 95       	ret

000012a2 <__fixsfsi>:
    12a2:	04 d0       	rcall	.+8      	; 0x12ac <__fixunssfsi>
    12a4:	68 94       	set
    12a6:	b1 11       	cpse	r27, r1
    12a8:	b1 c0       	rjmp	.+354    	; 0x140c <__fp_szero>
    12aa:	08 95       	ret

000012ac <__fixunssfsi>:
    12ac:	94 d0       	rcall	.+296    	; 0x13d6 <__fp_splitA>
    12ae:	88 f0       	brcs	.+34     	; 0x12d2 <__fixunssfsi+0x26>
    12b0:	9f 57       	subi	r25, 0x7F	; 127
    12b2:	90 f0       	brcs	.+36     	; 0x12d8 <__fixunssfsi+0x2c>
    12b4:	b9 2f       	mov	r27, r25
    12b6:	99 27       	eor	r25, r25
    12b8:	b7 51       	subi	r27, 0x17	; 23
    12ba:	a0 f0       	brcs	.+40     	; 0x12e4 <__fixunssfsi+0x38>
    12bc:	d1 f0       	breq	.+52     	; 0x12f2 <__fixunssfsi+0x46>
    12be:	66 0f       	add	r22, r22
    12c0:	77 1f       	adc	r23, r23
    12c2:	88 1f       	adc	r24, r24
    12c4:	99 1f       	adc	r25, r25
    12c6:	1a f0       	brmi	.+6      	; 0x12ce <__fixunssfsi+0x22>
    12c8:	ba 95       	dec	r27
    12ca:	c9 f7       	brne	.-14     	; 0x12be <__fixunssfsi+0x12>
    12cc:	12 c0       	rjmp	.+36     	; 0x12f2 <__fixunssfsi+0x46>
    12ce:	b1 30       	cpi	r27, 0x01	; 1
    12d0:	81 f0       	breq	.+32     	; 0x12f2 <__fixunssfsi+0x46>
    12d2:	9b d0       	rcall	.+310    	; 0x140a <__fp_zero>
    12d4:	b1 e0       	ldi	r27, 0x01	; 1
    12d6:	08 95       	ret
    12d8:	98 c0       	rjmp	.+304    	; 0x140a <__fp_zero>
    12da:	67 2f       	mov	r22, r23
    12dc:	78 2f       	mov	r23, r24
    12de:	88 27       	eor	r24, r24
    12e0:	b8 5f       	subi	r27, 0xF8	; 248
    12e2:	39 f0       	breq	.+14     	; 0x12f2 <__fixunssfsi+0x46>
    12e4:	b9 3f       	cpi	r27, 0xF9	; 249
    12e6:	cc f3       	brlt	.-14     	; 0x12da <__fixunssfsi+0x2e>
    12e8:	86 95       	lsr	r24
    12ea:	77 95       	ror	r23
    12ec:	67 95       	ror	r22
    12ee:	b3 95       	inc	r27
    12f0:	d9 f7       	brne	.-10     	; 0x12e8 <__fixunssfsi+0x3c>
    12f2:	3e f4       	brtc	.+14     	; 0x1302 <__fixunssfsi+0x56>
    12f4:	90 95       	com	r25
    12f6:	80 95       	com	r24
    12f8:	70 95       	com	r23
    12fa:	61 95       	neg	r22
    12fc:	7f 4f       	sbci	r23, 0xFF	; 255
    12fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1300:	9f 4f       	sbci	r25, 0xFF	; 255
    1302:	08 95       	ret

00001304 <__floatunsisf>:
    1304:	e8 94       	clt
    1306:	09 c0       	rjmp	.+18     	; 0x131a <__floatsisf+0x12>

00001308 <__floatsisf>:
    1308:	97 fb       	bst	r25, 7
    130a:	3e f4       	brtc	.+14     	; 0x131a <__floatsisf+0x12>
    130c:	90 95       	com	r25
    130e:	80 95       	com	r24
    1310:	70 95       	com	r23
    1312:	61 95       	neg	r22
    1314:	7f 4f       	sbci	r23, 0xFF	; 255
    1316:	8f 4f       	sbci	r24, 0xFF	; 255
    1318:	9f 4f       	sbci	r25, 0xFF	; 255
    131a:	99 23       	and	r25, r25
    131c:	a9 f0       	breq	.+42     	; 0x1348 <__floatsisf+0x40>
    131e:	f9 2f       	mov	r31, r25
    1320:	96 e9       	ldi	r25, 0x96	; 150
    1322:	bb 27       	eor	r27, r27
    1324:	93 95       	inc	r25
    1326:	f6 95       	lsr	r31
    1328:	87 95       	ror	r24
    132a:	77 95       	ror	r23
    132c:	67 95       	ror	r22
    132e:	b7 95       	ror	r27
    1330:	f1 11       	cpse	r31, r1
    1332:	f8 cf       	rjmp	.-16     	; 0x1324 <__floatsisf+0x1c>
    1334:	fa f4       	brpl	.+62     	; 0x1374 <__floatsisf+0x6c>
    1336:	bb 0f       	add	r27, r27
    1338:	11 f4       	brne	.+4      	; 0x133e <__floatsisf+0x36>
    133a:	60 ff       	sbrs	r22, 0
    133c:	1b c0       	rjmp	.+54     	; 0x1374 <__floatsisf+0x6c>
    133e:	6f 5f       	subi	r22, 0xFF	; 255
    1340:	7f 4f       	sbci	r23, 0xFF	; 255
    1342:	8f 4f       	sbci	r24, 0xFF	; 255
    1344:	9f 4f       	sbci	r25, 0xFF	; 255
    1346:	16 c0       	rjmp	.+44     	; 0x1374 <__floatsisf+0x6c>
    1348:	88 23       	and	r24, r24
    134a:	11 f0       	breq	.+4      	; 0x1350 <__floatsisf+0x48>
    134c:	96 e9       	ldi	r25, 0x96	; 150
    134e:	11 c0       	rjmp	.+34     	; 0x1372 <__floatsisf+0x6a>
    1350:	77 23       	and	r23, r23
    1352:	21 f0       	breq	.+8      	; 0x135c <__floatsisf+0x54>
    1354:	9e e8       	ldi	r25, 0x8E	; 142
    1356:	87 2f       	mov	r24, r23
    1358:	76 2f       	mov	r23, r22
    135a:	05 c0       	rjmp	.+10     	; 0x1366 <__floatsisf+0x5e>
    135c:	66 23       	and	r22, r22
    135e:	71 f0       	breq	.+28     	; 0x137c <__floatsisf+0x74>
    1360:	96 e8       	ldi	r25, 0x86	; 134
    1362:	86 2f       	mov	r24, r22
    1364:	70 e0       	ldi	r23, 0x00	; 0
    1366:	60 e0       	ldi	r22, 0x00	; 0
    1368:	2a f0       	brmi	.+10     	; 0x1374 <__floatsisf+0x6c>
    136a:	9a 95       	dec	r25
    136c:	66 0f       	add	r22, r22
    136e:	77 1f       	adc	r23, r23
    1370:	88 1f       	adc	r24, r24
    1372:	da f7       	brpl	.-10     	; 0x136a <__floatsisf+0x62>
    1374:	88 0f       	add	r24, r24
    1376:	96 95       	lsr	r25
    1378:	87 95       	ror	r24
    137a:	97 f9       	bld	r25, 7
    137c:	08 95       	ret

0000137e <__fp_cmp>:
    137e:	99 0f       	add	r25, r25
    1380:	00 08       	sbc	r0, r0
    1382:	55 0f       	add	r21, r21
    1384:	aa 0b       	sbc	r26, r26
    1386:	e0 e8       	ldi	r30, 0x80	; 128
    1388:	fe ef       	ldi	r31, 0xFE	; 254
    138a:	16 16       	cp	r1, r22
    138c:	17 06       	cpc	r1, r23
    138e:	e8 07       	cpc	r30, r24
    1390:	f9 07       	cpc	r31, r25
    1392:	c0 f0       	brcs	.+48     	; 0x13c4 <__fp_cmp+0x46>
    1394:	12 16       	cp	r1, r18
    1396:	13 06       	cpc	r1, r19
    1398:	e4 07       	cpc	r30, r20
    139a:	f5 07       	cpc	r31, r21
    139c:	98 f0       	brcs	.+38     	; 0x13c4 <__fp_cmp+0x46>
    139e:	62 1b       	sub	r22, r18
    13a0:	73 0b       	sbc	r23, r19
    13a2:	84 0b       	sbc	r24, r20
    13a4:	95 0b       	sbc	r25, r21
    13a6:	39 f4       	brne	.+14     	; 0x13b6 <__fp_cmp+0x38>
    13a8:	0a 26       	eor	r0, r26
    13aa:	61 f0       	breq	.+24     	; 0x13c4 <__fp_cmp+0x46>
    13ac:	23 2b       	or	r18, r19
    13ae:	24 2b       	or	r18, r20
    13b0:	25 2b       	or	r18, r21
    13b2:	21 f4       	brne	.+8      	; 0x13bc <__fp_cmp+0x3e>
    13b4:	08 95       	ret
    13b6:	0a 26       	eor	r0, r26
    13b8:	09 f4       	brne	.+2      	; 0x13bc <__fp_cmp+0x3e>
    13ba:	a1 40       	sbci	r26, 0x01	; 1
    13bc:	a6 95       	lsr	r26
    13be:	8f ef       	ldi	r24, 0xFF	; 255
    13c0:	81 1d       	adc	r24, r1
    13c2:	81 1d       	adc	r24, r1
    13c4:	08 95       	ret

000013c6 <__fp_split3>:
    13c6:	57 fd       	sbrc	r21, 7
    13c8:	90 58       	subi	r25, 0x80	; 128
    13ca:	44 0f       	add	r20, r20
    13cc:	55 1f       	adc	r21, r21
    13ce:	59 f0       	breq	.+22     	; 0x13e6 <__fp_splitA+0x10>
    13d0:	5f 3f       	cpi	r21, 0xFF	; 255
    13d2:	71 f0       	breq	.+28     	; 0x13f0 <__fp_splitA+0x1a>
    13d4:	47 95       	ror	r20

000013d6 <__fp_splitA>:
    13d6:	88 0f       	add	r24, r24
    13d8:	97 fb       	bst	r25, 7
    13da:	99 1f       	adc	r25, r25
    13dc:	61 f0       	breq	.+24     	; 0x13f6 <__fp_splitA+0x20>
    13de:	9f 3f       	cpi	r25, 0xFF	; 255
    13e0:	79 f0       	breq	.+30     	; 0x1400 <__fp_splitA+0x2a>
    13e2:	87 95       	ror	r24
    13e4:	08 95       	ret
    13e6:	12 16       	cp	r1, r18
    13e8:	13 06       	cpc	r1, r19
    13ea:	14 06       	cpc	r1, r20
    13ec:	55 1f       	adc	r21, r21
    13ee:	f2 cf       	rjmp	.-28     	; 0x13d4 <__fp_split3+0xe>
    13f0:	46 95       	lsr	r20
    13f2:	f1 df       	rcall	.-30     	; 0x13d6 <__fp_splitA>
    13f4:	08 c0       	rjmp	.+16     	; 0x1406 <__fp_splitA+0x30>
    13f6:	16 16       	cp	r1, r22
    13f8:	17 06       	cpc	r1, r23
    13fa:	18 06       	cpc	r1, r24
    13fc:	99 1f       	adc	r25, r25
    13fe:	f1 cf       	rjmp	.-30     	; 0x13e2 <__fp_splitA+0xc>
    1400:	86 95       	lsr	r24
    1402:	71 05       	cpc	r23, r1
    1404:	61 05       	cpc	r22, r1
    1406:	08 94       	sec
    1408:	08 95       	ret

0000140a <__fp_zero>:
    140a:	e8 94       	clt

0000140c <__fp_szero>:
    140c:	bb 27       	eor	r27, r27
    140e:	66 27       	eor	r22, r22
    1410:	77 27       	eor	r23, r23
    1412:	cb 01       	movw	r24, r22
    1414:	97 f9       	bld	r25, 7
    1416:	08 95       	ret

00001418 <__gesf2>:
    1418:	b2 df       	rcall	.-156    	; 0x137e <__fp_cmp>
    141a:	08 f4       	brcc	.+2      	; 0x141e <__gesf2+0x6>
    141c:	8f ef       	ldi	r24, 0xFF	; 255
    141e:	08 95       	ret

00001420 <__mulsf3>:
    1420:	0b d0       	rcall	.+22     	; 0x1438 <__mulsf3x>
    1422:	78 c0       	rjmp	.+240    	; 0x1514 <__fp_round>
    1424:	69 d0       	rcall	.+210    	; 0x14f8 <__fp_pscA>
    1426:	28 f0       	brcs	.+10     	; 0x1432 <__mulsf3+0x12>
    1428:	6e d0       	rcall	.+220    	; 0x1506 <__fp_pscB>
    142a:	18 f0       	brcs	.+6      	; 0x1432 <__mulsf3+0x12>
    142c:	95 23       	and	r25, r21
    142e:	09 f0       	breq	.+2      	; 0x1432 <__mulsf3+0x12>
    1430:	5a c0       	rjmp	.+180    	; 0x14e6 <__fp_inf>
    1432:	5f c0       	rjmp	.+190    	; 0x14f2 <__fp_nan>
    1434:	11 24       	eor	r1, r1
    1436:	ea cf       	rjmp	.-44     	; 0x140c <__fp_szero>

00001438 <__mulsf3x>:
    1438:	c6 df       	rcall	.-116    	; 0x13c6 <__fp_split3>
    143a:	a0 f3       	brcs	.-24     	; 0x1424 <__mulsf3+0x4>

0000143c <__mulsf3_pse>:
    143c:	95 9f       	mul	r25, r21
    143e:	d1 f3       	breq	.-12     	; 0x1434 <__mulsf3+0x14>
    1440:	95 0f       	add	r25, r21
    1442:	50 e0       	ldi	r21, 0x00	; 0
    1444:	55 1f       	adc	r21, r21
    1446:	62 9f       	mul	r22, r18
    1448:	f0 01       	movw	r30, r0
    144a:	72 9f       	mul	r23, r18
    144c:	bb 27       	eor	r27, r27
    144e:	f0 0d       	add	r31, r0
    1450:	b1 1d       	adc	r27, r1
    1452:	63 9f       	mul	r22, r19
    1454:	aa 27       	eor	r26, r26
    1456:	f0 0d       	add	r31, r0
    1458:	b1 1d       	adc	r27, r1
    145a:	aa 1f       	adc	r26, r26
    145c:	64 9f       	mul	r22, r20
    145e:	66 27       	eor	r22, r22
    1460:	b0 0d       	add	r27, r0
    1462:	a1 1d       	adc	r26, r1
    1464:	66 1f       	adc	r22, r22
    1466:	82 9f       	mul	r24, r18
    1468:	22 27       	eor	r18, r18
    146a:	b0 0d       	add	r27, r0
    146c:	a1 1d       	adc	r26, r1
    146e:	62 1f       	adc	r22, r18
    1470:	73 9f       	mul	r23, r19
    1472:	b0 0d       	add	r27, r0
    1474:	a1 1d       	adc	r26, r1
    1476:	62 1f       	adc	r22, r18
    1478:	83 9f       	mul	r24, r19
    147a:	a0 0d       	add	r26, r0
    147c:	61 1d       	adc	r22, r1
    147e:	22 1f       	adc	r18, r18
    1480:	74 9f       	mul	r23, r20
    1482:	33 27       	eor	r19, r19
    1484:	a0 0d       	add	r26, r0
    1486:	61 1d       	adc	r22, r1
    1488:	23 1f       	adc	r18, r19
    148a:	84 9f       	mul	r24, r20
    148c:	60 0d       	add	r22, r0
    148e:	21 1d       	adc	r18, r1
    1490:	82 2f       	mov	r24, r18
    1492:	76 2f       	mov	r23, r22
    1494:	6a 2f       	mov	r22, r26
    1496:	11 24       	eor	r1, r1
    1498:	9f 57       	subi	r25, 0x7F	; 127
    149a:	50 40       	sbci	r21, 0x00	; 0
    149c:	8a f0       	brmi	.+34     	; 0x14c0 <__mulsf3_pse+0x84>
    149e:	e1 f0       	breq	.+56     	; 0x14d8 <__mulsf3_pse+0x9c>
    14a0:	88 23       	and	r24, r24
    14a2:	4a f0       	brmi	.+18     	; 0x14b6 <__mulsf3_pse+0x7a>
    14a4:	ee 0f       	add	r30, r30
    14a6:	ff 1f       	adc	r31, r31
    14a8:	bb 1f       	adc	r27, r27
    14aa:	66 1f       	adc	r22, r22
    14ac:	77 1f       	adc	r23, r23
    14ae:	88 1f       	adc	r24, r24
    14b0:	91 50       	subi	r25, 0x01	; 1
    14b2:	50 40       	sbci	r21, 0x00	; 0
    14b4:	a9 f7       	brne	.-22     	; 0x14a0 <__mulsf3_pse+0x64>
    14b6:	9e 3f       	cpi	r25, 0xFE	; 254
    14b8:	51 05       	cpc	r21, r1
    14ba:	70 f0       	brcs	.+28     	; 0x14d8 <__mulsf3_pse+0x9c>
    14bc:	14 c0       	rjmp	.+40     	; 0x14e6 <__fp_inf>
    14be:	a6 cf       	rjmp	.-180    	; 0x140c <__fp_szero>
    14c0:	5f 3f       	cpi	r21, 0xFF	; 255
    14c2:	ec f3       	brlt	.-6      	; 0x14be <__mulsf3_pse+0x82>
    14c4:	98 3e       	cpi	r25, 0xE8	; 232
    14c6:	dc f3       	brlt	.-10     	; 0x14be <__mulsf3_pse+0x82>
    14c8:	86 95       	lsr	r24
    14ca:	77 95       	ror	r23
    14cc:	67 95       	ror	r22
    14ce:	b7 95       	ror	r27
    14d0:	f7 95       	ror	r31
    14d2:	e7 95       	ror	r30
    14d4:	9f 5f       	subi	r25, 0xFF	; 255
    14d6:	c1 f7       	brne	.-16     	; 0x14c8 <__mulsf3_pse+0x8c>
    14d8:	fe 2b       	or	r31, r30
    14da:	88 0f       	add	r24, r24
    14dc:	91 1d       	adc	r25, r1
    14de:	96 95       	lsr	r25
    14e0:	87 95       	ror	r24
    14e2:	97 f9       	bld	r25, 7
    14e4:	08 95       	ret

000014e6 <__fp_inf>:
    14e6:	97 f9       	bld	r25, 7
    14e8:	9f 67       	ori	r25, 0x7F	; 127
    14ea:	80 e8       	ldi	r24, 0x80	; 128
    14ec:	70 e0       	ldi	r23, 0x00	; 0
    14ee:	60 e0       	ldi	r22, 0x00	; 0
    14f0:	08 95       	ret

000014f2 <__fp_nan>:
    14f2:	9f ef       	ldi	r25, 0xFF	; 255
    14f4:	80 ec       	ldi	r24, 0xC0	; 192
    14f6:	08 95       	ret

000014f8 <__fp_pscA>:
    14f8:	00 24       	eor	r0, r0
    14fa:	0a 94       	dec	r0
    14fc:	16 16       	cp	r1, r22
    14fe:	17 06       	cpc	r1, r23
    1500:	18 06       	cpc	r1, r24
    1502:	09 06       	cpc	r0, r25
    1504:	08 95       	ret

00001506 <__fp_pscB>:
    1506:	00 24       	eor	r0, r0
    1508:	0a 94       	dec	r0
    150a:	12 16       	cp	r1, r18
    150c:	13 06       	cpc	r1, r19
    150e:	14 06       	cpc	r1, r20
    1510:	05 06       	cpc	r0, r21
    1512:	08 95       	ret

00001514 <__fp_round>:
    1514:	09 2e       	mov	r0, r25
    1516:	03 94       	inc	r0
    1518:	00 0c       	add	r0, r0
    151a:	11 f4       	brne	.+4      	; 0x1520 <__fp_round+0xc>
    151c:	88 23       	and	r24, r24
    151e:	52 f0       	brmi	.+20     	; 0x1534 <__fp_round+0x20>
    1520:	bb 0f       	add	r27, r27
    1522:	40 f4       	brcc	.+16     	; 0x1534 <__fp_round+0x20>
    1524:	bf 2b       	or	r27, r31
    1526:	11 f4       	brne	.+4      	; 0x152c <__fp_round+0x18>
    1528:	60 ff       	sbrs	r22, 0
    152a:	04 c0       	rjmp	.+8      	; 0x1534 <__fp_round+0x20>
    152c:	6f 5f       	subi	r22, 0xFF	; 255
    152e:	7f 4f       	sbci	r23, 0xFF	; 255
    1530:	8f 4f       	sbci	r24, 0xFF	; 255
    1532:	9f 4f       	sbci	r25, 0xFF	; 255
    1534:	08 95       	ret

00001536 <__udivmodsi4>:
    1536:	a1 e2       	ldi	r26, 0x21	; 33
    1538:	1a 2e       	mov	r1, r26
    153a:	aa 1b       	sub	r26, r26
    153c:	bb 1b       	sub	r27, r27
    153e:	fd 01       	movw	r30, r26
    1540:	0d c0       	rjmp	.+26     	; 0x155c <__udivmodsi4_ep>

00001542 <__udivmodsi4_loop>:
    1542:	aa 1f       	adc	r26, r26
    1544:	bb 1f       	adc	r27, r27
    1546:	ee 1f       	adc	r30, r30
    1548:	ff 1f       	adc	r31, r31
    154a:	a2 17       	cp	r26, r18
    154c:	b3 07       	cpc	r27, r19
    154e:	e4 07       	cpc	r30, r20
    1550:	f5 07       	cpc	r31, r21
    1552:	20 f0       	brcs	.+8      	; 0x155c <__udivmodsi4_ep>
    1554:	a2 1b       	sub	r26, r18
    1556:	b3 0b       	sbc	r27, r19
    1558:	e4 0b       	sbc	r30, r20
    155a:	f5 0b       	sbc	r31, r21

0000155c <__udivmodsi4_ep>:
    155c:	66 1f       	adc	r22, r22
    155e:	77 1f       	adc	r23, r23
    1560:	88 1f       	adc	r24, r24
    1562:	99 1f       	adc	r25, r25
    1564:	1a 94       	dec	r1
    1566:	69 f7       	brne	.-38     	; 0x1542 <__udivmodsi4_loop>
    1568:	60 95       	com	r22
    156a:	70 95       	com	r23
    156c:	80 95       	com	r24
    156e:	90 95       	com	r25
    1570:	9b 01       	movw	r18, r22
    1572:	ac 01       	movw	r20, r24
    1574:	bd 01       	movw	r22, r26
    1576:	cf 01       	movw	r24, r30
    1578:	08 95       	ret

0000157a <__prologue_saves__>:
    157a:	2f 92       	push	r2
    157c:	3f 92       	push	r3
    157e:	4f 92       	push	r4
    1580:	5f 92       	push	r5
    1582:	6f 92       	push	r6
    1584:	7f 92       	push	r7
    1586:	8f 92       	push	r8
    1588:	9f 92       	push	r9
    158a:	af 92       	push	r10
    158c:	bf 92       	push	r11
    158e:	cf 92       	push	r12
    1590:	df 92       	push	r13
    1592:	ef 92       	push	r14
    1594:	ff 92       	push	r15
    1596:	0f 93       	push	r16
    1598:	1f 93       	push	r17
    159a:	cf 93       	push	r28
    159c:	df 93       	push	r29
    159e:	cd b7       	in	r28, 0x3d	; 61
    15a0:	de b7       	in	r29, 0x3e	; 62
    15a2:	ca 1b       	sub	r28, r26
    15a4:	db 0b       	sbc	r29, r27
    15a6:	0f b6       	in	r0, 0x3f	; 63
    15a8:	f8 94       	cli
    15aa:	de bf       	out	0x3e, r29	; 62
    15ac:	0f be       	out	0x3f, r0	; 63
    15ae:	cd bf       	out	0x3d, r28	; 61
    15b0:	09 94       	ijmp

000015b2 <__epilogue_restores__>:
    15b2:	2a 88       	ldd	r2, Y+18	; 0x12
    15b4:	39 88       	ldd	r3, Y+17	; 0x11
    15b6:	48 88       	ldd	r4, Y+16	; 0x10
    15b8:	5f 84       	ldd	r5, Y+15	; 0x0f
    15ba:	6e 84       	ldd	r6, Y+14	; 0x0e
    15bc:	7d 84       	ldd	r7, Y+13	; 0x0d
    15be:	8c 84       	ldd	r8, Y+12	; 0x0c
    15c0:	9b 84       	ldd	r9, Y+11	; 0x0b
    15c2:	aa 84       	ldd	r10, Y+10	; 0x0a
    15c4:	b9 84       	ldd	r11, Y+9	; 0x09
    15c6:	c8 84       	ldd	r12, Y+8	; 0x08
    15c8:	df 80       	ldd	r13, Y+7	; 0x07
    15ca:	ee 80       	ldd	r14, Y+6	; 0x06
    15cc:	fd 80       	ldd	r15, Y+5	; 0x05
    15ce:	0c 81       	ldd	r16, Y+4	; 0x04
    15d0:	1b 81       	ldd	r17, Y+3	; 0x03
    15d2:	aa 81       	ldd	r26, Y+2	; 0x02
    15d4:	b9 81       	ldd	r27, Y+1	; 0x01
    15d6:	ce 0f       	add	r28, r30
    15d8:	d1 1d       	adc	r29, r1
    15da:	0f b6       	in	r0, 0x3f	; 63
    15dc:	f8 94       	cli
    15de:	de bf       	out	0x3e, r29	; 62
    15e0:	0f be       	out	0x3f, r0	; 63
    15e2:	cd bf       	out	0x3d, r28	; 61
    15e4:	ed 01       	movw	r28, r26
    15e6:	08 95       	ret

000015e8 <__ftoa_engine>:
    15e8:	28 30       	cpi	r18, 0x08	; 8
    15ea:	08 f0       	brcs	.+2      	; 0x15ee <__ftoa_engine+0x6>
    15ec:	27 e0       	ldi	r18, 0x07	; 7
    15ee:	33 27       	eor	r19, r19
    15f0:	da 01       	movw	r26, r20
    15f2:	99 0f       	add	r25, r25
    15f4:	31 1d       	adc	r19, r1
    15f6:	87 fd       	sbrc	r24, 7
    15f8:	91 60       	ori	r25, 0x01	; 1
    15fa:	00 96       	adiw	r24, 0x00	; 0
    15fc:	61 05       	cpc	r22, r1
    15fe:	71 05       	cpc	r23, r1
    1600:	39 f4       	brne	.+14     	; 0x1610 <__ftoa_engine+0x28>
    1602:	32 60       	ori	r19, 0x02	; 2
    1604:	2e 5f       	subi	r18, 0xFE	; 254
    1606:	3d 93       	st	X+, r19
    1608:	30 e3       	ldi	r19, 0x30	; 48
    160a:	2a 95       	dec	r18
    160c:	e1 f7       	brne	.-8      	; 0x1606 <__ftoa_engine+0x1e>
    160e:	08 95       	ret
    1610:	9f 3f       	cpi	r25, 0xFF	; 255
    1612:	30 f0       	brcs	.+12     	; 0x1620 <__ftoa_engine+0x38>
    1614:	80 38       	cpi	r24, 0x80	; 128
    1616:	71 05       	cpc	r23, r1
    1618:	61 05       	cpc	r22, r1
    161a:	09 f0       	breq	.+2      	; 0x161e <__ftoa_engine+0x36>
    161c:	3c 5f       	subi	r19, 0xFC	; 252
    161e:	3c 5f       	subi	r19, 0xFC	; 252
    1620:	3d 93       	st	X+, r19
    1622:	91 30       	cpi	r25, 0x01	; 1
    1624:	08 f0       	brcs	.+2      	; 0x1628 <__ftoa_engine+0x40>
    1626:	80 68       	ori	r24, 0x80	; 128
    1628:	91 1d       	adc	r25, r1
    162a:	df 93       	push	r29
    162c:	cf 93       	push	r28
    162e:	1f 93       	push	r17
    1630:	0f 93       	push	r16
    1632:	ff 92       	push	r15
    1634:	ef 92       	push	r14
    1636:	19 2f       	mov	r17, r25
    1638:	98 7f       	andi	r25, 0xF8	; 248
    163a:	96 95       	lsr	r25
    163c:	e9 2f       	mov	r30, r25
    163e:	96 95       	lsr	r25
    1640:	96 95       	lsr	r25
    1642:	e9 0f       	add	r30, r25
    1644:	ff 27       	eor	r31, r31
    1646:	e2 52       	subi	r30, 0x22	; 34
    1648:	ff 4f       	sbci	r31, 0xFF	; 255
    164a:	99 27       	eor	r25, r25
    164c:	33 27       	eor	r19, r19
    164e:	ee 24       	eor	r14, r14
    1650:	ff 24       	eor	r15, r15
    1652:	a7 01       	movw	r20, r14
    1654:	e7 01       	movw	r28, r14
    1656:	05 90       	lpm	r0, Z+
    1658:	08 94       	sec
    165a:	07 94       	ror	r0
    165c:	28 f4       	brcc	.+10     	; 0x1668 <__ftoa_engine+0x80>
    165e:	36 0f       	add	r19, r22
    1660:	e7 1e       	adc	r14, r23
    1662:	f8 1e       	adc	r15, r24
    1664:	49 1f       	adc	r20, r25
    1666:	51 1d       	adc	r21, r1
    1668:	66 0f       	add	r22, r22
    166a:	77 1f       	adc	r23, r23
    166c:	88 1f       	adc	r24, r24
    166e:	99 1f       	adc	r25, r25
    1670:	06 94       	lsr	r0
    1672:	a1 f7       	brne	.-24     	; 0x165c <__ftoa_engine+0x74>
    1674:	05 90       	lpm	r0, Z+
    1676:	07 94       	ror	r0
    1678:	28 f4       	brcc	.+10     	; 0x1684 <__ftoa_engine+0x9c>
    167a:	e7 0e       	add	r14, r23
    167c:	f8 1e       	adc	r15, r24
    167e:	49 1f       	adc	r20, r25
    1680:	56 1f       	adc	r21, r22
    1682:	c1 1d       	adc	r28, r1
    1684:	77 0f       	add	r23, r23
    1686:	88 1f       	adc	r24, r24
    1688:	99 1f       	adc	r25, r25
    168a:	66 1f       	adc	r22, r22
    168c:	06 94       	lsr	r0
    168e:	a1 f7       	brne	.-24     	; 0x1678 <__ftoa_engine+0x90>
    1690:	05 90       	lpm	r0, Z+
    1692:	07 94       	ror	r0
    1694:	28 f4       	brcc	.+10     	; 0x16a0 <__ftoa_engine+0xb8>
    1696:	f8 0e       	add	r15, r24
    1698:	49 1f       	adc	r20, r25
    169a:	56 1f       	adc	r21, r22
    169c:	c7 1f       	adc	r28, r23
    169e:	d1 1d       	adc	r29, r1
    16a0:	88 0f       	add	r24, r24
    16a2:	99 1f       	adc	r25, r25
    16a4:	66 1f       	adc	r22, r22
    16a6:	77 1f       	adc	r23, r23
    16a8:	06 94       	lsr	r0
    16aa:	a1 f7       	brne	.-24     	; 0x1694 <__ftoa_engine+0xac>
    16ac:	05 90       	lpm	r0, Z+
    16ae:	07 94       	ror	r0
    16b0:	20 f4       	brcc	.+8      	; 0x16ba <__ftoa_engine+0xd2>
    16b2:	49 0f       	add	r20, r25
    16b4:	56 1f       	adc	r21, r22
    16b6:	c7 1f       	adc	r28, r23
    16b8:	d8 1f       	adc	r29, r24
    16ba:	99 0f       	add	r25, r25
    16bc:	66 1f       	adc	r22, r22
    16be:	77 1f       	adc	r23, r23
    16c0:	88 1f       	adc	r24, r24
    16c2:	06 94       	lsr	r0
    16c4:	a9 f7       	brne	.-22     	; 0x16b0 <__ftoa_engine+0xc8>
    16c6:	84 91       	lpm	r24, Z+
    16c8:	10 95       	com	r17
    16ca:	17 70       	andi	r17, 0x07	; 7
    16cc:	41 f0       	breq	.+16     	; 0x16de <__ftoa_engine+0xf6>
    16ce:	d6 95       	lsr	r29
    16d0:	c7 95       	ror	r28
    16d2:	57 95       	ror	r21
    16d4:	47 95       	ror	r20
    16d6:	f7 94       	ror	r15
    16d8:	e7 94       	ror	r14
    16da:	1a 95       	dec	r17
    16dc:	c1 f7       	brne	.-16     	; 0x16ce <__ftoa_engine+0xe6>
    16de:	e4 e8       	ldi	r30, 0x84	; 132
    16e0:	f0 e0       	ldi	r31, 0x00	; 0
    16e2:	68 94       	set
    16e4:	15 90       	lpm	r1, Z+
    16e6:	15 91       	lpm	r17, Z+
    16e8:	35 91       	lpm	r19, Z+
    16ea:	65 91       	lpm	r22, Z+
    16ec:	95 91       	lpm	r25, Z+
    16ee:	05 90       	lpm	r0, Z+
    16f0:	7f e2       	ldi	r23, 0x2F	; 47
    16f2:	73 95       	inc	r23
    16f4:	e1 18       	sub	r14, r1
    16f6:	f1 0a       	sbc	r15, r17
    16f8:	43 0b       	sbc	r20, r19
    16fa:	56 0b       	sbc	r21, r22
    16fc:	c9 0b       	sbc	r28, r25
    16fe:	d0 09       	sbc	r29, r0
    1700:	c0 f7       	brcc	.-16     	; 0x16f2 <__ftoa_engine+0x10a>
    1702:	e1 0c       	add	r14, r1
    1704:	f1 1e       	adc	r15, r17
    1706:	43 1f       	adc	r20, r19
    1708:	56 1f       	adc	r21, r22
    170a:	c9 1f       	adc	r28, r25
    170c:	d0 1d       	adc	r29, r0
    170e:	7e f4       	brtc	.+30     	; 0x172e <__ftoa_engine+0x146>
    1710:	70 33       	cpi	r23, 0x30	; 48
    1712:	11 f4       	brne	.+4      	; 0x1718 <__ftoa_engine+0x130>
    1714:	8a 95       	dec	r24
    1716:	e6 cf       	rjmp	.-52     	; 0x16e4 <__ftoa_engine+0xfc>
    1718:	e8 94       	clt
    171a:	01 50       	subi	r16, 0x01	; 1
    171c:	30 f0       	brcs	.+12     	; 0x172a <__ftoa_engine+0x142>
    171e:	08 0f       	add	r16, r24
    1720:	0a f4       	brpl	.+2      	; 0x1724 <__ftoa_engine+0x13c>
    1722:	00 27       	eor	r16, r16
    1724:	02 17       	cp	r16, r18
    1726:	08 f4       	brcc	.+2      	; 0x172a <__ftoa_engine+0x142>
    1728:	20 2f       	mov	r18, r16
    172a:	23 95       	inc	r18
    172c:	02 2f       	mov	r16, r18
    172e:	7a 33       	cpi	r23, 0x3A	; 58
    1730:	28 f0       	brcs	.+10     	; 0x173c <__ftoa_engine+0x154>
    1732:	79 e3       	ldi	r23, 0x39	; 57
    1734:	7d 93       	st	X+, r23
    1736:	2a 95       	dec	r18
    1738:	e9 f7       	brne	.-6      	; 0x1734 <__ftoa_engine+0x14c>
    173a:	10 c0       	rjmp	.+32     	; 0x175c <__ftoa_engine+0x174>
    173c:	7d 93       	st	X+, r23
    173e:	2a 95       	dec	r18
    1740:	89 f6       	brne	.-94     	; 0x16e4 <__ftoa_engine+0xfc>
    1742:	06 94       	lsr	r0
    1744:	97 95       	ror	r25
    1746:	67 95       	ror	r22
    1748:	37 95       	ror	r19
    174a:	17 95       	ror	r17
    174c:	17 94       	ror	r1
    174e:	e1 18       	sub	r14, r1
    1750:	f1 0a       	sbc	r15, r17
    1752:	43 0b       	sbc	r20, r19
    1754:	56 0b       	sbc	r21, r22
    1756:	c9 0b       	sbc	r28, r25
    1758:	d0 09       	sbc	r29, r0
    175a:	98 f0       	brcs	.+38     	; 0x1782 <__ftoa_engine+0x19a>
    175c:	23 95       	inc	r18
    175e:	7e 91       	ld	r23, -X
    1760:	73 95       	inc	r23
    1762:	7a 33       	cpi	r23, 0x3A	; 58
    1764:	08 f0       	brcs	.+2      	; 0x1768 <__ftoa_engine+0x180>
    1766:	70 e3       	ldi	r23, 0x30	; 48
    1768:	7c 93       	st	X, r23
    176a:	20 13       	cpse	r18, r16
    176c:	b8 f7       	brcc	.-18     	; 0x175c <__ftoa_engine+0x174>
    176e:	7e 91       	ld	r23, -X
    1770:	70 61       	ori	r23, 0x10	; 16
    1772:	7d 93       	st	X+, r23
    1774:	30 f0       	brcs	.+12     	; 0x1782 <__ftoa_engine+0x19a>
    1776:	83 95       	inc	r24
    1778:	71 e3       	ldi	r23, 0x31	; 49
    177a:	7d 93       	st	X+, r23
    177c:	70 e3       	ldi	r23, 0x30	; 48
    177e:	2a 95       	dec	r18
    1780:	e1 f7       	brne	.-8      	; 0x177a <__ftoa_engine+0x192>
    1782:	11 24       	eor	r1, r1
    1784:	ef 90       	pop	r14
    1786:	ff 90       	pop	r15
    1788:	0f 91       	pop	r16
    178a:	1f 91       	pop	r17
    178c:	cf 91       	pop	r28
    178e:	df 91       	pop	r29
    1790:	99 27       	eor	r25, r25
    1792:	87 fd       	sbrc	r24, 7
    1794:	90 95       	com	r25
    1796:	08 95       	ret

00001798 <strnlen_P>:
    1798:	fc 01       	movw	r30, r24
    179a:	05 90       	lpm	r0, Z+
    179c:	61 50       	subi	r22, 0x01	; 1
    179e:	70 40       	sbci	r23, 0x00	; 0
    17a0:	01 10       	cpse	r0, r1
    17a2:	d8 f7       	brcc	.-10     	; 0x179a <strnlen_P+0x2>
    17a4:	80 95       	com	r24
    17a6:	90 95       	com	r25
    17a8:	8e 0f       	add	r24, r30
    17aa:	9f 1f       	adc	r25, r31
    17ac:	08 95       	ret

000017ae <strnlen>:
    17ae:	fc 01       	movw	r30, r24
    17b0:	61 50       	subi	r22, 0x01	; 1
    17b2:	70 40       	sbci	r23, 0x00	; 0
    17b4:	01 90       	ld	r0, Z+
    17b6:	01 10       	cpse	r0, r1
    17b8:	d8 f7       	brcc	.-10     	; 0x17b0 <strnlen+0x2>
    17ba:	80 95       	com	r24
    17bc:	90 95       	com	r25
    17be:	8e 0f       	add	r24, r30
    17c0:	9f 1f       	adc	r25, r31
    17c2:	08 95       	ret

000017c4 <fputc>:
    17c4:	0f 93       	push	r16
    17c6:	1f 93       	push	r17
    17c8:	cf 93       	push	r28
    17ca:	df 93       	push	r29
    17cc:	8c 01       	movw	r16, r24
    17ce:	eb 01       	movw	r28, r22
    17d0:	8b 81       	ldd	r24, Y+3	; 0x03
    17d2:	81 ff       	sbrs	r24, 1
    17d4:	1b c0       	rjmp	.+54     	; 0x180c <fputc+0x48>
    17d6:	82 ff       	sbrs	r24, 2
    17d8:	0d c0       	rjmp	.+26     	; 0x17f4 <fputc+0x30>
    17da:	2e 81       	ldd	r18, Y+6	; 0x06
    17dc:	3f 81       	ldd	r19, Y+7	; 0x07
    17de:	8c 81       	ldd	r24, Y+4	; 0x04
    17e0:	9d 81       	ldd	r25, Y+5	; 0x05
    17e2:	28 17       	cp	r18, r24
    17e4:	39 07       	cpc	r19, r25
    17e6:	64 f4       	brge	.+24     	; 0x1800 <fputc+0x3c>
    17e8:	e8 81       	ld	r30, Y
    17ea:	f9 81       	ldd	r31, Y+1	; 0x01
    17ec:	01 93       	st	Z+, r16
    17ee:	f9 83       	std	Y+1, r31	; 0x01
    17f0:	e8 83       	st	Y, r30
    17f2:	06 c0       	rjmp	.+12     	; 0x1800 <fputc+0x3c>
    17f4:	e8 85       	ldd	r30, Y+8	; 0x08
    17f6:	f9 85       	ldd	r31, Y+9	; 0x09
    17f8:	80 2f       	mov	r24, r16
    17fa:	09 95       	icall
    17fc:	89 2b       	or	r24, r25
    17fe:	31 f4       	brne	.+12     	; 0x180c <fputc+0x48>
    1800:	8e 81       	ldd	r24, Y+6	; 0x06
    1802:	9f 81       	ldd	r25, Y+7	; 0x07
    1804:	01 96       	adiw	r24, 0x01	; 1
    1806:	9f 83       	std	Y+7, r25	; 0x07
    1808:	8e 83       	std	Y+6, r24	; 0x06
    180a:	02 c0       	rjmp	.+4      	; 0x1810 <fputc+0x4c>
    180c:	0f ef       	ldi	r16, 0xFF	; 255
    180e:	1f ef       	ldi	r17, 0xFF	; 255
    1810:	c8 01       	movw	r24, r16
    1812:	df 91       	pop	r29
    1814:	cf 91       	pop	r28
    1816:	1f 91       	pop	r17
    1818:	0f 91       	pop	r16
    181a:	08 95       	ret

0000181c <printf>:
    181c:	a0 e0       	ldi	r26, 0x00	; 0
    181e:	b0 e0       	ldi	r27, 0x00	; 0
    1820:	e4 e1       	ldi	r30, 0x14	; 20
    1822:	fc e0       	ldi	r31, 0x0C	; 12
    1824:	0c 94 cd 0a 	jmp	0x159a	; 0x159a <__prologue_saves__+0x20>
    1828:	fe 01       	movw	r30, r28
    182a:	35 96       	adiw	r30, 0x05	; 5
    182c:	61 91       	ld	r22, Z+
    182e:	71 91       	ld	r23, Z+
    1830:	80 91 5c 01 	lds	r24, 0x015C
    1834:	90 91 5d 01 	lds	r25, 0x015D
    1838:	af 01       	movw	r20, r30
    183a:	0e 94 de 00 	call	0x1bc	; 0x1bc <vfprintf>
    183e:	20 96       	adiw	r28, 0x00	; 0
    1840:	e2 e0       	ldi	r30, 0x02	; 2
    1842:	0c 94 e9 0a 	jmp	0x15d2	; 0x15d2 <__epilogue_restores__+0x20>

00001846 <sprintf>:
    1846:	ae e0       	ldi	r26, 0x0E	; 14
    1848:	b0 e0       	ldi	r27, 0x00	; 0
    184a:	e9 e2       	ldi	r30, 0x29	; 41
    184c:	fc e0       	ldi	r31, 0x0C	; 12
    184e:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <__prologue_saves__+0x1c>
    1852:	0d 89       	ldd	r16, Y+21	; 0x15
    1854:	1e 89       	ldd	r17, Y+22	; 0x16
    1856:	86 e0       	ldi	r24, 0x06	; 6
    1858:	8c 83       	std	Y+4, r24	; 0x04
    185a:	1a 83       	std	Y+2, r17	; 0x02
    185c:	09 83       	std	Y+1, r16	; 0x01
    185e:	8f ef       	ldi	r24, 0xFF	; 255
    1860:	9f e7       	ldi	r25, 0x7F	; 127
    1862:	9e 83       	std	Y+6, r25	; 0x06
    1864:	8d 83       	std	Y+5, r24	; 0x05
    1866:	9e 01       	movw	r18, r28
    1868:	27 5e       	subi	r18, 0xE7	; 231
    186a:	3f 4f       	sbci	r19, 0xFF	; 255
    186c:	ce 01       	movw	r24, r28
    186e:	01 96       	adiw	r24, 0x01	; 1
    1870:	6f 89       	ldd	r22, Y+23	; 0x17
    1872:	78 8d       	ldd	r23, Y+24	; 0x18
    1874:	a9 01       	movw	r20, r18
    1876:	0e 94 de 00 	call	0x1bc	; 0x1bc <vfprintf>
    187a:	2f 81       	ldd	r18, Y+7	; 0x07
    187c:	38 85       	ldd	r19, Y+8	; 0x08
    187e:	02 0f       	add	r16, r18
    1880:	13 1f       	adc	r17, r19
    1882:	f8 01       	movw	r30, r16
    1884:	10 82       	st	Z, r1
    1886:	2e 96       	adiw	r28, 0x0e	; 14
    1888:	e4 e0       	ldi	r30, 0x04	; 4
    188a:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__epilogue_restores__+0x1c>

0000188e <__ultoa_invert>:
    188e:	fa 01       	movw	r30, r20
    1890:	aa 27       	eor	r26, r26
    1892:	28 30       	cpi	r18, 0x08	; 8
    1894:	51 f1       	breq	.+84     	; 0x18ea <__ultoa_invert+0x5c>
    1896:	20 31       	cpi	r18, 0x10	; 16
    1898:	81 f1       	breq	.+96     	; 0x18fa <__ultoa_invert+0x6c>
    189a:	e8 94       	clt
    189c:	6f 93       	push	r22
    189e:	6e 7f       	andi	r22, 0xFE	; 254
    18a0:	6e 5f       	subi	r22, 0xFE	; 254
    18a2:	7f 4f       	sbci	r23, 0xFF	; 255
    18a4:	8f 4f       	sbci	r24, 0xFF	; 255
    18a6:	9f 4f       	sbci	r25, 0xFF	; 255
    18a8:	af 4f       	sbci	r26, 0xFF	; 255
    18aa:	b1 e0       	ldi	r27, 0x01	; 1
    18ac:	3e d0       	rcall	.+124    	; 0x192a <__ultoa_invert+0x9c>
    18ae:	b4 e0       	ldi	r27, 0x04	; 4
    18b0:	3c d0       	rcall	.+120    	; 0x192a <__ultoa_invert+0x9c>
    18b2:	67 0f       	add	r22, r23
    18b4:	78 1f       	adc	r23, r24
    18b6:	89 1f       	adc	r24, r25
    18b8:	9a 1f       	adc	r25, r26
    18ba:	a1 1d       	adc	r26, r1
    18bc:	68 0f       	add	r22, r24
    18be:	79 1f       	adc	r23, r25
    18c0:	8a 1f       	adc	r24, r26
    18c2:	91 1d       	adc	r25, r1
    18c4:	a1 1d       	adc	r26, r1
    18c6:	6a 0f       	add	r22, r26
    18c8:	71 1d       	adc	r23, r1
    18ca:	81 1d       	adc	r24, r1
    18cc:	91 1d       	adc	r25, r1
    18ce:	a1 1d       	adc	r26, r1
    18d0:	20 d0       	rcall	.+64     	; 0x1912 <__ultoa_invert+0x84>
    18d2:	09 f4       	brne	.+2      	; 0x18d6 <__ultoa_invert+0x48>
    18d4:	68 94       	set
    18d6:	3f 91       	pop	r19
    18d8:	2a e0       	ldi	r18, 0x0A	; 10
    18da:	26 9f       	mul	r18, r22
    18dc:	11 24       	eor	r1, r1
    18de:	30 19       	sub	r19, r0
    18e0:	30 5d       	subi	r19, 0xD0	; 208
    18e2:	31 93       	st	Z+, r19
    18e4:	de f6       	brtc	.-74     	; 0x189c <__ultoa_invert+0xe>
    18e6:	cf 01       	movw	r24, r30
    18e8:	08 95       	ret
    18ea:	46 2f       	mov	r20, r22
    18ec:	47 70       	andi	r20, 0x07	; 7
    18ee:	40 5d       	subi	r20, 0xD0	; 208
    18f0:	41 93       	st	Z+, r20
    18f2:	b3 e0       	ldi	r27, 0x03	; 3
    18f4:	0f d0       	rcall	.+30     	; 0x1914 <__ultoa_invert+0x86>
    18f6:	c9 f7       	brne	.-14     	; 0x18ea <__ultoa_invert+0x5c>
    18f8:	f6 cf       	rjmp	.-20     	; 0x18e6 <__ultoa_invert+0x58>
    18fa:	46 2f       	mov	r20, r22
    18fc:	4f 70       	andi	r20, 0x0F	; 15
    18fe:	40 5d       	subi	r20, 0xD0	; 208
    1900:	4a 33       	cpi	r20, 0x3A	; 58
    1902:	18 f0       	brcs	.+6      	; 0x190a <__ultoa_invert+0x7c>
    1904:	49 5d       	subi	r20, 0xD9	; 217
    1906:	31 fd       	sbrc	r19, 1
    1908:	40 52       	subi	r20, 0x20	; 32
    190a:	41 93       	st	Z+, r20
    190c:	02 d0       	rcall	.+4      	; 0x1912 <__ultoa_invert+0x84>
    190e:	a9 f7       	brne	.-22     	; 0x18fa <__ultoa_invert+0x6c>
    1910:	ea cf       	rjmp	.-44     	; 0x18e6 <__ultoa_invert+0x58>
    1912:	b4 e0       	ldi	r27, 0x04	; 4
    1914:	a6 95       	lsr	r26
    1916:	97 95       	ror	r25
    1918:	87 95       	ror	r24
    191a:	77 95       	ror	r23
    191c:	67 95       	ror	r22
    191e:	ba 95       	dec	r27
    1920:	c9 f7       	brne	.-14     	; 0x1914 <__ultoa_invert+0x86>
    1922:	00 97       	sbiw	r24, 0x00	; 0
    1924:	61 05       	cpc	r22, r1
    1926:	71 05       	cpc	r23, r1
    1928:	08 95       	ret
    192a:	9b 01       	movw	r18, r22
    192c:	ac 01       	movw	r20, r24
    192e:	0a 2e       	mov	r0, r26
    1930:	06 94       	lsr	r0
    1932:	57 95       	ror	r21
    1934:	47 95       	ror	r20
    1936:	37 95       	ror	r19
    1938:	27 95       	ror	r18
    193a:	ba 95       	dec	r27
    193c:	c9 f7       	brne	.-14     	; 0x1930 <__ultoa_invert+0xa2>
    193e:	62 0f       	add	r22, r18
    1940:	73 1f       	adc	r23, r19
    1942:	84 1f       	adc	r24, r20
    1944:	95 1f       	adc	r25, r21
    1946:	a0 1d       	adc	r26, r0
    1948:	08 95       	ret

0000194a <_exit>:
    194a:	f8 94       	cli

0000194c <__stop_program>:
    194c:	ff cf       	rjmp	.-2      	; 0x194c <__stop_program>
